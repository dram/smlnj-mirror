M68FLAGS = -f68881
VAXFLAGS =
# $(VAXFLAGS) or $(M68FLAGS)
FLAGS = $(VAXFLAGS)
#FLAGS = $(M68FLAGS)

# VAX or M68
MACHINE = VAX
#MACHINE = M68

# BSD or V9
#OPSYS = BSD
OPSYS = V9

# Other possible #define's:
# PROFILE:  for an nml which counts allocs.
# GCDEBUG:  print extra information during garbage collection,
#	    and look at to_space after a collection for stray pointers.
# SIMPLEGC: for a simpler version of the garbage collector which does a
#           complete copy of the heap each collection rather than keeping
#           a persistent heap.
# GCPROFILE: for an nml which prints out cumulative garbage collector
#	     information as it exits.
DEFINES = -D$(OPSYS) -D$(MACHINE)

CFLAGS = -g $(DEFINES) $(FLAGS)

nml: run.o gc.o callgc.o prim.o prof.o export.o objects.o
	cc $(CFLAGS) -o nml run.o gc.o callgc.o prim.o prof.o export.o objects.o

prim.s: $(MACHINE).prim.s tags.h prof.h ml.h
	/lib/cpp $(DEFINES) $(MACHINE).prim.s > prim.s

callgc.o objects.o gc.o run.o: descriptor.h tags.h

callgc.o run.o export.o objects.o: ml.h

prof.o: prof.h

clean:
	rm -f *.o lint.out prim.s

lint:
	lint $(DEFINES) run.c gc.c callgc.c prof.c export.c objects.c \
		| tee lint.out

