.TH MAKEML 1 "version 0.92, November 18, 1992"
.SH NAME
makeml \- build the Standard ML of New Jersey system
.SH SYNOPSIS
.B makeml
.I options
.br
.SH DESCRIPTION
\fIMakeml\fP is a tool for building the Standard ML of New Jersey system (SML/NJ)
from source and ML-object (`.mo') files.
SML/NJ runs on a number of machine architectures (MC680x0, Mips,
SPARC, RS/6000, HPPA, and i386/i486) and under a number of different
operating systems (SunOS, 4.3bsd, Mach, IRIX, Ultrix, ...).
There are also several different configurations of the system that can be built.
Makeml provides a reasonable interface to these various options.
.SH OPTIONS
The following options are used to specify the machine and operating system
configuration.
These are the only ones necessary for the basic installation.
.TP
.BR \-sun3 " [" " sunos" " |" " mach" " ]"
.br
.ns
.TP
.BR \-sun4 " [" " sunos" " |" " mach" " ]"
Build the system for Sun machines.
.TP
.B \-rs6000 aix
.br
.ns
.TP
.B \-rs6k aix
Build the version for the IBM RS/6000 workstations.
\fBNote:\fP this requires AIX version 3.2.
.TP
\fB\-decstation \fR[ \fBbsd \fR| \fBultrix \fR| \fBmach \fR]
Build the version for the DEC mips processor boxes.
These are little-endian machines.
.TP
.BR \-mips " [" " riscos" " |" " mach" " ]"
Build the version for the MipsCo machines (R3000, R6280).
This is a big-endian machine.
.TP
.BR \-sgi " [" " irix" " |" " irix3" " ]"
Build the version for the Silicon Graphics machines;
the \fBirix3\fP option specifies Irix 3.x, otherwise Irix 4.x
is assumed.
These are big-endian mips processors.
.TP
.B \-hppa hpux8
.br
Build the hppa version running under HPUX 8.0 (earlier versions of HPUX
have not been tested).
By default makeml builds a 
noshare 
version (see -noshare option), and the \-pervshare
option is ignored.
.TP
\fB\-m68 \fR[ \fBaux \fR| \fBsunos \fR| \fBmach \fR| \fBhpux \fR| \fBhpux8 \fR| \fBmore \fR]
.br
Build a version for a M680x0 family machine.
The \fBhpux8\fP option is for version 8.0 of the HPUX operating
system; use \fBhpux\fP for earlier versions.
.TP
.BR \-next " [" " 2" " |" " 3" " ]"
Build the version for the NeXT machine (either NeXTstep 2.x or NeXTstep 3.x).
The NeXT machine uses a non-standard version of MACH as its operating
system, which isn't BSD compatible.
.TP
\fB\-i386 \fR[ \fBmach \fR| \fBbsd \fR| \fBbsd386 \fR]
.br
Build the system for i386/i486 machines.  The bsd386 version has
patches to fix problems with signals in BSD/386.
.TP
.B \-sequent dynix3
.br
Build the system for the Sequent (i386).
.TP
.BR \-vax  " [" " bsd" " |" " mach" " ]"
.br
Build the vax version.  This version is currently ``out of service''
for SML/NJ version 0.93.  Use version 0.75 on the vax.
.PP
The following options are used to specify the kind of system to build.
.TP
.B \-debug
Build an image (with default name `smld') with the debugger loaded.
.TP
.BI \-i
Make the `sml' image start out using the interpreter for faster compilation
and slower execution (for interactive system only; can switch
back to native code once in
`sml' by `System.Control.interp := false').
.TP
.BI \-ionly
Build an image (with default name `smli') that has only the interpreter.
This gives fast compilation and saves space by eliminating the code
generator from the executable, but results in slower execution.
.TP
.BI \-batch
Build the batch compiler (with default name `smlc') instead of an
interactive system.
.TP
.BI \-target " machine"
Build a batch cross compiler for \fImachine\fP.
Valid machine names are: \fBm68\fP, \fBsparc\fP, \fBmipsl\fP, \fBmipsb\fP,
\fBvax\fP, \fBns32\fP and \fBi386\fP.
Note that for the Mips architecture you must specify the endianess.
This option implies the \fB-batch\fP option.
.TP
.BI \-o " image"
Use image as the name of the system image.
The default image name is `sml' for interactive systems, `smld' for the
debugger version, `smli' for the interpreter only system and `smlc' for the
batch compiler.
.TP
.BI \-noshare
Do not link the `.mo' files into an `a.out' format object file and include it in the
runtime executable.
.TP
.BI \-pervshare
Link only a minimal set of `.mo' files into the object. This is not
applicable to the HPPA.
.TP
.BI \-gcc
Use the GNU C compiler to compile the run-time system.
This will improve the garbage collector performance on some machines (e.g., Sun3).
\fBNote:\fP this only works with GCC 1.xx.
.PP
The following options may be used to tune garbage collection and paging performance.
.TP
.BI \-h " heapsize"
Set the initial heap size to \fIheapsize\fP kilo-bytes.
.TP
.BI \-m " softlimit"
Set the soft limit on the heap size to \fIsoftlimit\fP kilo-bytes.
.TP
.BI \-r " ratio"
Set the ratio of the heap size to live data to \fIratio\fP.
This must be at least 3.
.PP
The following options are for building and testing new versions of the system; they
are not necessary for normal installation.
.TP
.BI \-run
Build the run-time kernel (`runtime/run'), but don't build a system.
.TP
.BI \-noclean
Don't remove the existing `.o' files in the runtime directory.
.TP
.BI \-norun
Don't re-compile the runtime kernel.
This implies the \fB-noclean\fP option.
.TP
.BI \-mo " path"
Use \fIpath\fP as the directory containing the `.mo' files.
.TP
.BI \-runtime " path"
Use \fIpath\fP as the source directory for the runtime code.
.TP
.B \-g
Compile the runtime with the \fB-g\fP command line option.
.TP
.BI \-D def
When compiling the runtime code add ``\fB-D\fP\fIdef\fP'' as a command line option.
.TP
.B \-debug0
Build a version with the debugger internals, but not the user-level code.
.SH "USAGE"
For the standard configuration, the only options required are the machine type and
operating system.
For example
.IP
makeml \-sun4 sunos
.LP
builds the SPARC version of the interactive system to run on SunOS systems.
Another example is
.IP
makeml \-sun4 sunos \-target mipsl
.LP
which builds a \fBsparc\fP to \fBmipsl\fP cross compiler.
.SH "ENVIRONMENT"
.IP "\fBGCC\fP"
Specifies the path of \fBgcc\fP.
Set this if your path doesn't contain \fBgcc\fP
and you are using the `\fB-gcc\fP' option.
.SH "SEE ALSO"
linkdata(1), sml(1)

