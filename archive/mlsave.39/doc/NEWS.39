Standard ML of New Jersey version 0.39, 8 September 1989

This notes overlap with the 0.36 release notes, since 0.36 was not
widely distributed [neither were 0.37 or 0.38].

Release notes by Andrew Appel.

Changes since version 0.33:

1.  Support for Sun-4 (SPARC) thanks to John Reppy at Cornell;
    Encore (NS32032), NeXT (also Mach on other 68020 machines), and 
    Sony NEWS (68020-based workstation), thanks to James O'Toole at MIT.

2.  An interpreter for faster compilation (4x) but slower execution (18x).
    Set System.Control.interp := true to enable this mode.  Use the -i
    or -ionly to makeml to set this option as the default.

3.  Delay and Force primitives (meant for internal use only) for research
    in lazy evaluation.

4.  Bug fixes:   reading 2049-byte files works now.  Separate compilation
    shouldn't dump core.  Miscellaneous others.

5.  A code generator generator implemented by Johan Lilius,
    Jari Porra, & Jussi Rintanen of Helsinki University of Technology 
    is include in the Standard ML Software Library: see lib/twig.

6.  Various internal efficiency improvements; the CMACHINE signature was
    simplified a bit; the format of generational-gc update lists was changed;
    the CPS optimizer was beefed up.

7.  Separate compilation has been improved.  The compiled version of a 
    separately compiled file has the extension ".bin", and internally
    identifies the version of SML-NJ and also the machine type it 
    runs on.  The command "head -1 foo.bin" will print this information.

8.  Many functor bugs have been fixed.

9.  An improved version of ML-Yacc by David Tarditi at Princeton is provided,
    more efficient and with a better interface, and with sophisticated syntax
    error recovery.

Forthcoming in future releases:

- Mach support for Vax and other machines.

- Some work has been done on a MacIntosh II port, and we are hoping for
volunteers to continue this work.

- Our MIPS code generator almost works now (thanks to Norman Ramsey at
Princeton).

- We are continuing to make progress on the debugger, which may be ready late
in 1989.
