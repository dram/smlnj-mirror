.TH MAKEML 1 "version 0.59, June 4, 1990"
.SH NAME
makeml \- build the Standard ML of New Jersey system
.SH SYNOPSIS
.B makeml
.I options
.br
.SH DESCRIPTION
\fIMakeml\fP is a tool for building the Standard ML of New Jersey system (SML/NJ)
from source and ML-object (`.mo') files.
SML/NJ runs on a number of machine architectures (MC680x0, VAX, Mips, SPARC and
NS32000)
and under a number of different operating systems (SunOS, 4.3bsd, Mach, Ultrix, ...).
There are also several different configurations of the system that can be built.
Makeml provides a reasonable interface to these various options.
.SH OPTIONS
The following options are used to specify the machine and operating system
configuration.
These are the only ones necessary for the basic install.
.TP
.BR \-sun3 " [" " sunos" " |" " mach" " ]"
.br
.ns
.TP
.BR \-sun4 " [" " sunos" " |" " mach" " ]"
Build the system for Sun machines.
.TP
.B \-vax 
[
.B bsd
|
.B v9
|
.B mach
]
.br
Build the vax version.
.TP
.BR \-mips " [" " riscos" " |" " mach" " ]"
Build the version for the MipsCo machine.
This is a big-endian machine.
.TP
.B \-m68
[
bsd
|
mach
|
hpux
|
more
]
.br
Build a version for a M680x0 family machine.
.TP
.BI \-decstation " [" " bsd" " |" " mach" " ]"
Build the version for the DEC mips processor boxes.
These are little-endian numbers.
.TP
.BI \-next
Build the version for the NeXT machine.
The NeXT machine uses a non-standard version of MACH as its operating
system that isn't BSD compatible.
.TP
.BI \-encore
Build the NS32000 version for the encore computer (currently defunct).
.PP
The following options are used to specify the kind of system to build.
.TP
.BI \-i
Make the `sml' image start out using the interpreter for faster compilation
and slower execution (for interactive system only; can switch
back to native code once in
`sml' by `System.Control.interp := false').
.TP
.BI \-ionly
Build an image (with default name `smli') that has only the interpreter.
This gives fast compilation and saves space by eliminating the code
generator from the executable, but results in slower execution.
.TP
.BI \-batch
Build the batch compiler (with default name `smlc') instead of an
interactive system.
.TP
.BI \-target " machine"
Build a batch cross compiler for \fImachine\fP.
Valid machine names are: \fBm68\fP, \fBsparc\fP, \fBmipsl\fP, \fBmipsb\fP,
\fBvax\fP and \fBns32\fP.
Note that for the Mips architecture you must specify the endianess.
This option implies the \fB-batch\fP option.
.TP
.BI \-o " image"
Use image as the name of the system image.
The default image name is `sml' for interactive systems, `smli' for the
interpreter only system and `smlc' for the batch compiler.
.TP
.BI \-noshare
Do not link the `.mo' files into an `a.out' format object file and include it in the
runtime executable.
.TP
.BI \-pervshare
Link only a minimal set of `.mo' files into the object.
.TP
.BI \-gcc
Use the GNU \fBcc\fP compiler to compile the run-time system.
This will improve the garbage collector performance on some machines (e.g., Sun3).
.PP
The following options may be used to tune garbage collection and paging performance.
.TP
.BI \-h " heapsize"
Set the initial heap size to \fIheapsize\fP kilo-bytes.
.TP
.BI \-m " softlimit"
Set the soft limit on the heap size to \fIsoftlimit\fP kilo-bytes.
.TP
.BI \-r " ratio"
Set the ratio of the heap size to live data to \fIratio\fP.
This must be at least 3.
.PP
The following options are for building and testing new versions of the system; they
are not necessary for normal installation.
.TP
.BI \-run
Build the run-time kernel (`runtime/run'), but don't build a system.
.TP
.BI \-noclean
Don't remove the existing `.o' files in the runtime directory.
.TP
.BI \-norun
Don't re-compile the runtime kernel.
This implies the \fB-noclean\fP option.
.TP
.BI \-mo " path"
Use \fIpath\fP as the directory containing the `.mo' files.
.TP
.BI \-runtime " path"
Use \fIpath\fP as the source directory for the runtime code.
.TP
.BI \-D def
When compiling the runtime code add ``\fB-D\fP\fIdef\fP'' as a command line option.
.SH "USAGE"
For the standard configuration, the only options required are the machine type and
operating system.
For example
.IP
makeml \-vax bsd
.LP
builds the VAX version of the interactive system to run on 4.3bsd systems.
Another example is
.IP
makeml \-vax bsd \-target sparc
.LP
which builds a \fBvax\fP to \fBsparc\fP cross compiler.
.SH "ENVIRONMENT"
.IP "\fBGCC\fP"
Specifies the path of \fBgcc\fP.
Set this if your path doesn't contain \fBgcc\fP
and you are using the `\fB-gcc\fP' option.
.SH "SEE ALSO"
linkdata(1), sml(1)
