Installing Standard ML of New Jersey

Standard ML of New Jersey runs on the following systems, subject to the
noted restrictions:

  Vaxes running 4.3BSD Unix, V9 Unix, or Ultrix:
   The floating point functions will work only on Vaxes which support g_floats.

  Sun3 workstations:
   The floating point package will not work on Suns without the 68881 chip.
   Sun users should place the line

	unlimit stacksize

   in their .cshrc; large ml programs may overflow past the default
   stack limit, resulting in a mysterious "illegal instruction" error.

If you have trouble installing the system and send us a help request, please
include the version of the compiler (check the definition of the "version"
variable in src/boot/perv.sml if in doubt), machine and operating system, and
a complete input/output script which shows the problem.  For garbage
collection or memory problems, include the amount of memory on your machine.


The compiler will run both interactively and in batch mode.  Batch mode is a
temporary, insecure precursor of separate compilation which we have used to
bootstrap the compiler.  Most users will want to use the interactive system,
but a description of the batch system is provided in src/doc/BATCHINSTALL for
those expert users who wish to modify the compiler, cross compile, or support
a large program of their own.  The rest of this file will tell you how to
install the standard, interactive version.


The heap and garbage collection:
ML provides automatic data management through a garbage-collected heap.
Since the heap is used extensively, choice of heap size will have a
significant impact on performance.  The compiler determines an efficient
heap size automatically on startup, resizes the heap as the amount of
data grows, and complains if it runs out of memory (the interactive system
can be booted in approximately 3 megabytes).  The compiler reports
major garbage collection and heap adjustment statistics by default.

A note on NFS:
Recently we have had reports of problems building the compiler on remotely
mounted NFS file systems.  One problem occurs when trying to build the
compiler if the image is being written into a soft mounted NFS file system.
The compiler appears to bootstrap properly, but the compiler image file is
sometimes corrupted.  If you encounter this problem, the first thing to do is
check whether the file system is mounted "soft rw"; if so, try again with the
file system mounted "hard rw".  If this does not help, you should be able to
get a correct image by building the compiler on a machine with a local disk
and writing the image onto the local disk.  The image file can be specified
through the IMAGE parameter described below.  Another reported problem is
failure because of NSF timeouts with a heavily loaded network.  This can also
be overcome by compiling on a server or workstation with a local disk.


The Standard ML distribution comes as a directory mldist; the following
instructions assume that mldist is the current directory.

To make an interactive system:

1. Go to the src subdirectory of mldist:
	cd src

2. Make the appropriate interactive compiler:
	make sun		(for Sun3 workstations)
   OR   make vaxbsd		(for Vaxes running Berkeley 4.3)
   OR   make vaxultrix		(for Vaxes running Ultrix)
   OR   make vaxv9		(for Vaxes running V9 Unix)

   Messages indicating that the compiler is loading, running, and compiling
   the pervasive environment will appear; after the compiler is completely
   loaded, it will be saved to a file "sml", and the make command will
   exit.  sml should be installed in an appropriate bin directory on
   your machine.

   If you are running NFS and the "sml" image does not work properly, you
   will have to build the compiler on a client with a local disk and write
   the image onto the local disk.  The IMAGE parameter specifies the image
   name, so you can have the image written to the local disk by specifying
   a file in the /tmp directory:

	make IMAGE=/tmp/sml sun


The interactive system can be started by executing the file "sml".  The
system will start up by printing a version message, then the top-level
prompt "-", indicating that you can now start typing at the interactive
system.
