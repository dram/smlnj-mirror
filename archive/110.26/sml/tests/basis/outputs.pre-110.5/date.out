val it = () : unit
structure Date :
  sig
    datatype date = ...
    datatype month
      = Apr | Aug | Dec | Feb | Jan | Jul | Jun | Mar | May | Nov | Oct | Sep
    datatype weekday = Fri | Mon | Sat | Sun | Thu | Tue | Wed
    exception Date
    exception NotImplemented
    val compare : date * date -> order
    val date : {day:int, hour:int, minute:int, month:month,
                offset:Time.time option, second:int, year:int}
               -> date
    val day : date -> int
    val fmt : string -> date -> string
    val fromString : 'a -> 'b
    val fromTimeLocal : Time.time -> date
    val fromTimeUniv : Time.time -> date
    val hour : date -> int
    val isDst : date -> bool option
    val minute : date -> int
    val month : date -> month
    val offset : date -> Time.time option
    val second : date -> int
    val toString : date -> string
    val toTime : date -> Time.time
    val weekDay : date -> weekday
    val year : date -> int
    val yearDay : date -> int
  end
infix 1 seq
val seq = fn : 'a * 'b -> 'b
val check = fn : bool -> string
val check' = fn : (unit -> bool) -> string
val range = fn : int * int -> (int -> bool) -> bool
val checkrange = fn : int * int -> (int -> bool) -> string
This is now:                    Mon Nov 17 09:40:18 1997
This is an hour from now:       Mon Nov 17 10:40:18 1997
This is a day from now:         Tue Nov 18 09:40:18 1997
This is a week from now:        Mon Nov 24 09:40:18 1997
This is 120 days from now:      Tue Mar 17 09:40:18 1998
This is 160 days from now:      Sun Apr 26 10:40:18 1998
This is 200 days from now:      Fri Jun  5 10:40:18 1998
This is 240 days from now:      Wed Jul 15 10:40:18 1998
This is the epoch (UTC):        Thu Jan  1 00:00:00 1970
This is the number of the day:  001
This is today's weekday:        Monday
This is the name of this month: November
val test1 = "OK" : string
val test2 = "OK" : string
val test3 = "OK" : string
val test4 = "OK" : string
