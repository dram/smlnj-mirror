#!/bin/sh
# script for making sml runtime system

IMAGE=sml
STARTUP='(exportML "'$IMAGE'"; output std_out System.version; output std_out "\n");'

case $1 in
  sun ) MACHINE=M68
	CFL="-n -f68881"
	case $2 in
	  bsd ) DEFS=-DBSD ;;
	  * ) echo 'usage: second argument must be "bsd" for sun'
	      exit ;;
	esac
	case $4 in
	  cps ) echo cps not yet available for sun
	        exit ;;
	  * )   MO=mo.m68
		MOFILES=IntM68.mos ;;
	esac ;;
  vax )
	MACHINE=VAX
	CFL=
	case $2 in
	  bsd ) DEFS=-DBSD ;;
	  ultrix ) DEFS="-DBSD -DULTRIX" ;;
	  v9 ) DEFS=-DV9 ;;
	  * ) echo 'usage: second argument must be "bsd", "ultrix", or "v9"'
	      exit ;;
	esac
	case $4 in
	  cps ) DEFS="$DEFS -DCPS"
		MO=mo.vax.cps
		MOFILES=IntVaxCPS.mos ;;
	  * )   MO=mo.vax
		MOFILES=IntVax.mos ;;
	esac ;;
  * )
	echo Standard ML of New Jersey
	echo For installation instructions, see doc/INSTALL.
	exit ;;
esac

echo "(cd runtime; rm -f run; make clean)"
(cd runtime; rm -f run; make clean)

echo rm -f mo
rm -f mo

echo ln -s ../$MO mo
ln -s ../$MO mo

case $3 in
  share )
    echo "(cd runtime; make linkdata)"
    (cd runtime; make linkdata)

    echo "runtime/linkdata [runtime/$MOFILES] > runtime/allmo.o"
    runtime/linkdata `cat runtime/$MOFILES` > runtime/allmo.o ;;
  noshare ) ;;
  * )
    echo 'usage:  third argument must be "share" or "noshare"'
    exit ;;
esac

ARG="MACHINE=$MACHINE 'DEFS=$DEFS' 'CFL=$CFL'"
echo "(cd runtime; make $ARG)"
(cd runtime; eval make $ARG)
