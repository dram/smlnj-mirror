digraph "MLYacc" {
	graph [	size = "10,7" ];
	node [	label = "\N" ];
	graph [bb = "0,0,3658,660"];
	mkMakeLrTable [shape=diamond, kind=functor, file="src/mklrtable.sml", pos="2731,168", width="2.33", height="0.67"];
	mkLalr [shape=diamond, kind=functor, file="src/lalr.sml", pos="3371,252", width="1.28", height="0.67"];
	mkLook [shape=diamond, kind=functor, file="src/look.sml", pos="2886,336", width="1.39", height="0.67"];
	ListOrdSet [shape=diamond, kind=functor, file="src/utils.sml", range="8:149", pos="2856,420", width="1.67", height="0.67"];
	mkCore [shape=diamond, kind=functor, file="src/core.sml", pos="2731,336", width="1.36", height="0.67"];
	mkCoreUtils [shape=diamond, kind=functor, file="src/coreutils.sml", pos="3060,336", width="1.89", height="0.67"];
	mkGraph [shape=diamond, kind=functor, file="src/graph.sml", pos="3200,336", width="1.50", height="0.67"];
	LR_ERRS [shape=ellipse, kind=signature, file="src/sigs.sml", range="278:306", pos="1367,336", width="1.17", height="0.50"];
	LR_TABLE [shape=ellipse, kind=signature, file="src/base.sig", range="16:48", pos="1367,420", width="1.31", height="0.50"];
	INTGRAMMAR [shape=ellipse, kind=signature, file="src/sigs.sml", range="93:131", pos="3116,570", width="1.67", height="0.50"];
	MAKE_LR_TABLE [shape=ellipse, kind=signature, file="src/sigs.sml", range="343:365", pos="1777,252", width="1.97", height="0.50"];
	mkPrintStruct [shape=diamond, kind=functor, file="src/mkprstruct.sml", pos="806,252", width="2.00", height="0.67"];
	SHRINK_LR_TABLE [shape=ellipse, kind=signature, file="src/sigs.sml", range="367:381", pos="960,336", width="2.11", height="0.50"];
	PRINT_STRUCT [shape=ellipse, kind=signature, file="src/sigs.sml", range="308:323", pos="804,336", width="1.72", height="0.50"];
	ABSYN [shape=ellipse, kind=signature, file="src/absyn.sig", pos="195,252", width="0.97", height="0.50"];
	HASH [shape=ellipse, kind=signature, file="src/utils.sig", pos="262,336", width="0.86", height="0.50"];
	TABLE [shape=ellipse, kind=signature, file="src/utils.sig", pos="1690,642", width="0.94", height="0.50"];
	ORDSET [shape=ellipse, kind=signature, file="src/utils.sig", pos="3079,498", width="1.08", height="0.50"];
	Absyn [shape=box, kind=structure, file="src/absyn.sml", pos="294,168", width="0.75", height="0.50"];
	ExportParseGen [shape=box, kind=structure, file="src/export.sml", pos="1276,18", width="1.47", height="0.50"];
	ParseGen [shape=box, kind=structure, file="src/link.sml", pos="1276,90", width="0.92", height="0.50"];
	RbOrdSet [shape=diamond, kind=functor, file="src/utils.sml", range="151:381", pos="3268,420", width="1.56", height="0.67"];
	CORE [shape=ellipse, kind=signature, file="src/sigs.sml", range="133:174", pos="3204,498", width="0.83", height="0.50"];
	LRGRAPH [shape=ellipse, kind=signature, file="src/sigs.sml", range="204:229", pos="3538,420", width="1.22", height="0.50"];
	CORE_UTILS [shape=ellipse, kind=signature, file="src/sigs.sml", range="176:202", pos="2988,420", width="1.50", height="0.50"];
	ParseGenParserFun [shape=diamond, kind=functor, file="src/parse.sml", pos="1716,168", width="2.64", height="0.67"];
	HEADER [shape=ellipse, kind=signature, file="src/sigs.sml", range="3:52", pos="2348,498", width="1.11", height="0.50"];
	ARG_PARSER [shape=ellipse, kind=signature, file="src/base.sig", range="276:300", pos="1923,252", width="1.58", height="0.50"];
	PARSE_GEN_PARSER [shape=ellipse, kind=signature, file="src/sigs.sml", range="54:58", pos="1083,252", width="2.25", height="0.50"];
	EquivFun [shape=diamond, kind=functor, file="src/shrink.sml", range="78:151", pos="626,336", width="1.56", height="0.67"];
	MergeSortFun [shape=diamond, kind=functor, file="src/shrink.sml", range="40:76", pos="482,420", width="2.06", height="0.67"];
	EQUIV_ARG [shape=ellipse, kind=signature, file="src/shrink.sml", range="13:18", pos="626,420", width="1.44", height="0.50"];
	EQUIV [shape=ellipse, kind=signature, file="src/shrink.sml", range="14:38", pos="729,420", width="0.92", height="0.50"];
	ShrinkLrTableFun [shape=diamond, kind=functor, file="src/shrink.sml", range="153:220", pos="626,252", width="2.50", height="0.67"];
	SORT [shape=ellipse, kind=signature, file="src/shrink.sml", range="8:12", pos="452,498", width="0.83", height="0.50"];
	SORT_ARG [shape=ellipse, kind=signature, file="src/shrink.sml", range="i3:7", pos="548,498", width="1.33", height="0.50"];
	Stream [shape=box, kind=structure, file="src/stream.sml", pos="1323,252", width="0.75", height="0.50"];
	STREAM [shape=ellipse, kind=signature, file="src/base.sig", range="7:14", pos="1543,336", width="1.11", height="0.50"];
	Hash [shape=diamond, kind=functor, file="src/utils.sml", range="482:501", pos="285,252", width="1.03", height="0.67"];
	Table [shape=diamond, kind=functor, file="src/utils.sml", range="383:477", pos="350,336", width="1.08", height="0.67"];
	Mlyacc_TOKENS [shape=ellipse, kind=signature, file="src/yacc-grm.sig", range="1:46", pos="2440,252", width="1.78", height="0.50"];
	Header [shape=box, kind=structure, file="src/hdr.sml", range="103:103", pos="2561,336", width="0.75", height="0.50"];
	Mlyacc_LRVALS [shape=ellipse, kind=signature, file="src/yacc-grm.sig", range="47:53", pos="2084,168", width="1.75", height="0.50"];
	PARSER_DATA [shape=ellipse, kind=signature, file="src/base.sig", range="164:229", pos="2059,252", width="1.69", height="0.50"];
	IntGrammar [shape=box, kind=structure, file="src/grammar.sml", pos="79,168", width="1.14", height="0.50"];
	Grammar [shape=box, kind=structure, file="src/grammar.sml", pos="109,252", width="0.92", height="0.50"];
	LrTable [shape=box, kind=structure, file="src/lrtable.sml", pos="1254,336", width="0.81", height="0.50"];
	GRAMMAR [shape=ellipse, kind=signature, file="src/sigs.sml", range="65:91", pos="3160,642", width="1.36", height="0.50"];
	LrParser [shape=box, kind=structure, file="src/parser1.sml", pos="1323,168", width="0.86", height="0.50"];
	LR_PARSER [shape=ellipse, kind=signature, file="src/base.sig", range="86:122", pos="1543,252", width="1.42", height="0.50"];
	TOKEN [shape=ellipse, kind=signature, file="src/base.sig", range="51:84", pos="1674,336", width="0.97", height="0.50"];
	mkVerbose [shape=diamond, kind=functor, file="src/verbose.sml", pos="1140,168", width="1.72", height="0.67"];
	VERBOSE [shape=ellipse, kind=signature, file="src/sigs.sml", range="325:341", pos="940,252", width="1.22", height="0.50"];
	MlyaccLrValsFun [shape=diamond, kind=functor, file="src/yacc-grm.sml", pos="2276,168", width="2.47", height="0.67"];
	LexMLYACC [shape=diamond, kind=functor, file="src/yacc-lex.sml", pos="2457,168", width="2.06", height="0.67"];
	ARG_LEXER [shape=ellipse, kind=signature, file="src/base.sig", range="147:162", pos="2229,252", width="1.47", height="0.50"];
	LEXER [shape=ellipse, kind=signature, file="src/base.sig", range="124:145", pos="1440,252", width="0.94", height="0.50"];
	PARSER [shape=ellipse, kind=signature, file="src/base.sig", range="231:274", pos="1650,252", width="1.06", height="0.50"];
	HeaderFun [shape=diamond, kind=functor, file="src/hdr.sml", range="3:101", pos="2565,420", width="1.69", height="0.67"];
	Join [shape=diamond, kind=functor, file="src/join.sml", range="3:48", pos="1556,168", width="0.92", height="0.67"];
	JoinWithArg [shape=diamond, kind=functor, file="src/join.sml", range="50:96", pos="1923,168", width="1.89", height="0.67"];
	LOOK [shape=ellipse, kind=signature, file="src/sigs.sml", range="231:247", pos="3487,498", width="0.86", height="0.50"];
	LALR_GRAPH [shape=ellipse, kind=signature, file="src/sigs.sml", range="249:276", pos="3475,336", width="1.58", height="0.50"];
	ParseGenFun [shape=diamond, kind=functor, file="src/yacc.sml", pos="508,168", width="1.94", height="0.67"];
	PARSE_GEN [shape=ellipse, kind=signature, file="src/sigs.sml", range="60:63", pos="429,252", width="1.42", height="0.50"];
	mkLalr -> mkMakeLrTable [pos="e,2789,176 3334,247 3229,233 2930,194 2797,177"];
	mkLook -> mkMakeLrTable [pos="e,2759,184 2877,316 2865,291 2844,248 2825,228 2818,220 2788,202 2765,187"];
	ListOrdSet -> mkMakeLrTable [pos="e,2742,189 2846,400 2824,355 2770,247 2745,196"];
	mkCore -> mkMakeLrTable [pos="e,2731,192 2731,312 2731,282 2731,231 2731,199"];
	mkCoreUtils -> mkMakeLrTable [pos="e,2763,183 3033,321 2990,298 2906,253 2857,228 2834,216 2797,199 2769,186"];
	mkGraph -> mkMakeLrTable [pos="e,2772,180 3172,324 3161,320 3149,315 3140,312 3066,283 2993,254 2919,228 2882,215 2823,196 2781,183"];
	LR_ERRS -> mkMakeLrTable [pos="e,2703,184 1406,329 1442,321 1491,312 1491,312 1832,294 2176,315 2516,276 2544,272 2643,218 2696,188"];
	LR_TABLE -> mkMakeLrTable [pos="e,2711,187 1414,420 1595,419 2250,411 2600,360 2648,352 2639,268 2667,228 2667,228 2687,209 2705,192"];
	INTGRAMMAR -> mkMakeLrTable [pos="e,2718,189 3056,568 2959,563 2863,545 2772,516 2712,497 2692,418 2670,360 2653,315 2692,235 2715,194"];
	MAKE_LR_TABLE -> mkMakeLrTable [pos="e,2675,176 1817,237 1830,233 1844,229 1854,228 2083,210 2313,207 2543,192 2576,189 2628,183 2669,177"];
	SHRINK_LR_TABLE -> mkPrintStruct [pos="e,834,267 930,319 905,306 869,286 842,272"];
	LR_TABLE -> mkPrintStruct [pos="e,843,264 1332,408 1268,385 1128,336 1048,312 994,296 938,289 884,276 875,273 861,269 849,266"];
	PRINT_STRUCT -> mkPrintStruct [pos="e,805,276 804,318 804,309 805,296 805,285"];
	ABSYN -> Absyn [pos="e,273,186 213,237 228,224 249,206 267,191"];
	ParseGen -> ExportParseGen [pos="e,1276,36 1276,72 1276,64 1276,54 1276,45"];
	RbOrdSet -> mkGraph [pos="e,3214,354 3253,402 3244,390 3231,374 3219,360"];
	CORE -> mkGraph [pos="e,3201,360 3204,480 3203,452 3202,400 3201,367"];
	INTGRAMMAR -> mkGraph [pos="e,3192,357 3122,552 3137,511 3173,411 3190,363"];
	LRGRAPH -> mkGraph [pos="e,3235,345 3500,411 3437,396 3311,364 3244,347"];
	CORE_UTILS -> mkGraph [pos="e,3171,347 3023,406 3061,390 3124,366 3163,350"];
	HEADER -> ParseGenParserFun [pos="e,1769,179 2334,481 2299,440 2212,335 2164,276 2151,260 2150,232 2132,228 2038,203 1939,205 1843,192 1825,189 1799,184 1775,180"];
	ARG_PARSER -> ParseGenParserFun [pos="e,1752,183 1888,238 1853,224 1799,201 1760,186"];
	PARSE_GEN_PARSER -> ParseGenParserFun [pos="e,1666,179 1154,243 1196,238 1249,232 1284,228 1389,215 1495,206 1601,192 1616,189 1639,185 1660,180"];
	MergeSortFun -> EquivFun [pos="e,602,350 509,404 533,390 571,368 597,353"];
	EQUIV_ARG -> EquivFun [pos="e,626,360 626,402 626,392 626,378 626,366"];
	EQUIV -> EquivFun [pos="e,645,352 711,405 694,392 670,372 651,357"];
	EquivFun -> ShrinkLrTableFun [pos="e,626,276 626,312 626,304 626,294 626,285"];
	SHRINK_LR_TABLE -> ShrinkLrTableFun [pos="e,673,264 914,322 901,318 888,314 878,312 826,298 773,288 722,276 710,273 694,269 679,265"];
	LR_TABLE -> ShrinkLrTableFun [pos="e,648,270 1320,417 1204,409 898,386 730,360 710,356 707,326 694,312 685,302 669,288 655,276"];
	SORT -> MergeSortFun [pos="e,474,441 459,480 463,471 467,460 471,450"];
	SORT_ARG -> MergeSortFun [pos="e,498,439 533,481 525,471 514,457 504,446"];
	STREAM -> Stream [pos="e,1350,270 1510,326 1469,313 1401,291 1361,276 1360,276 1359,275 1358,275"];
	Table -> Hash [pos="e,298,268 337,319 327,306 313,289 303,275"];
	HASH -> Hash [pos="e,280,273 267,318 270,307 274,294 278,281"];
	ORDSET -> ListOrdSet [pos="e,2888,431 3048,487 3008,473 2941,449 2897,434"];
	TABLE -> Table [pos="e,351,360 1656,641 1492,634 778,600 410,516 366,505 354,415 351,366"];
	ORDSET -> RbOrdSet [pos="e,3239,432 3108,486 3142,472 3196,450 3232,435"];
	Header -> Mlyacc_TOKENS [pos="e,2464,269 2535,318 2516,305 2491,287 2471,274"];
	Mlyacc_TOKENS -> Mlyacc_LRVALS [pos="e,2130,180 2390,241 2331,227 2233,205 2175,192 2165,189 2150,185 2136,182"];
	PARSER_DATA -> Mlyacc_LRVALS [pos="e,2079,186 2064,234 2068,223 2072,207 2076,194"];
	Table -> IntGrammar [pos="e,71,186 330,324 320,318 309,312 305,312 226,295 141,302 64,276 41,268 56,222 68,192"];
	Grammar -> IntGrammar [pos="e,86,186 102,234 98,222 93,207 89,194"];
	INTGRAMMAR -> IntGrammar [pos="e,69,186 3056,570 2735,567 1213,554 410,516 342,512 10,488 10,420 10,420 10,420 10,336 10,298 31,263 45,228 45,228 56,210 65,193"];
	LrTable -> Grammar [pos="e,133,270 1225,332 1181,325 1097,314 1048,312 748,295 447,295 148,276 145,276 142,275 138,273"];
	GRAMMAR -> Grammar [pos="e,116,270 3111,642 2722,639 156,614 156,498 156,498 156,498 156,420 156,379 133,313 119,277"];
	LR_TABLE -> LrTable [pos="e,1278,354 1345,404 1328,391 1304,373 1285,359"];
	LrTable -> LrParser [pos="e,1309,186 1258,318 1263,294 1274,251 1284,228 1288,217 1297,203 1306,191"];
	Stream -> LrParser [pos="e,1323,186 1323,234 1323,223 1323,207 1323,194"];
	LR_PARSER -> LrParser [pos="e,1354,179 1511,238 1502,234 1493,230 1486,228 1452,215 1398,195 1362,182"];
	TOKEN -> LrParser [pos="e,1334,186 1645,326 1628,321 1608,315 1595,312 1528,297 1454,307 1394,276 1387,272 1357,223 1338,192"];
	VERBOSE -> mkVerbose [pos="e,1109,180 968,238 976,234 984,230 990,228 1020,215 1068,196 1102,183"];
	LR_ERRS -> mkVerbose [pos="e,1161,184 1346,320 1304,289 1214,222 1167,188"];
	HEADER -> MlyaccLrValsFun [pos="e,2293,188 2347,480 2343,432 2332,299 2317,228 2315,218 2307,206 2299,195"];
	Mlyacc_TOKENS -> MlyaccLrValsFun [pos="e,2307,184 2409,236 2382,222 2342,202 2313,187"];
	TOKEN -> MlyaccLrValsFun [pos="e,2286,190 1709,334 1813,327 2125,305 2294,276 2317,271 2302,227 2289,196"];
	HEADER -> LexMLYACC [pos="e,2478,185 2362,481 2394,441 2476,338 2516,276 2524,262 2523,242 2516,228 2509,216 2496,203 2484,191"];
	ARG_LEXER -> LexMLYACC [pos="e,2422,181 2265,239 2306,224 2373,199 2416,183"];
	Mlyacc_TOKENS -> LexMLYACC [pos="e,2453,191 2444,234 2446,224 2449,211 2451,199"];
	TOKEN -> ARG_PARSER [pos="e,1887,266 1704,326 1745,313 1817,290 1860,276 1866,274 1873,271 1881,268"];
	STREAM -> ARG_PARSER [pos="e,1885,265 1577,326 1597,320 1620,313 1627,312 1704,297 1782,291 1860,276 1866,275 1872,272 1877,270"];
	LR_TABLE -> LR_PARSER [pos="e,1525,269 1385,403 1417,372 1486,307 1520,273"];
	TOKEN -> LR_PARSER [pos="e,1568,268 1652,322 1631,309 1599,288 1576,273"];
	STREAM -> LR_PARSER [pos="e,1543,270 1543,318 1543,307 1543,291 1543,278"];
	TOKEN -> PARSER [pos="e,1655,270 1669,318 1666,307 1661,291 1657,278"];
	STREAM -> PARSER [pos="e,1630,267 1563,320 1580,307 1605,287 1624,272"];
	LR_TABLE -> TOKEN [pos="e,1651,350 1408,411 1465,399 1568,376 1628,360 1633,358 1639,356 1645,353"];
	LR_TABLE -> PARSER_DATA [pos="e,2036,269 1414,417 1535,408 1865,377 2030,273"];
	TOKEN -> PARSER_DATA [pos="e,2022,266 1707,330 1780,316 1951,285 1992,276 1998,274 2007,271 2016,268"];
	ListOrdSet -> mkCoreUtils [pos="e,3028,349 2886,408 2922,393 2983,367 3023,351"];
	CORE -> mkCoreUtils [pos="e,3076,354 3190,482 3165,454 3113,395 3082,361"];
	CORE_UTILS -> mkCoreUtils [pos="e,3044,355 3003,403 3013,391 3027,375 3039,361"];
	ListOrdSet -> mkCore [pos="e,2752,350 2833,405 2812,392 2781,370 2759,355"];
	CORE -> mkCore [pos="e,2736,358 3176,491 3155,486 3131,480 3130,480 3014,465 2893,483 2784,444 2760,435 2745,393 2738,364"];
	INTGRAMMAR -> mkCore [pos="e,2728,359 3059,564 2969,552 2797,521 2740,444 2727,427 2726,392 2727,367"];
	HEADER -> HeaderFun [pos="e,2533,431 2380,487 2419,473 2486,448 2527,433"];
	HeaderFun -> Header [pos="e,2562,354 2564,396 2563,386 2563,373 2563,362"];
	LR_PARSER -> Join [pos="e,1553,190 1546,234 1548,224 1550,210 1552,198"];
	LEXER -> Join [pos="e,1539,180 1460,237 1480,223 1511,200 1532,185"];
	PARSER -> Join [pos="e,1571,181 1632,236 1616,222 1594,201 1577,186"];
	PARSER_DATA -> Join [pos="e,1575,178 2024,237 2013,233 2001,229 1992,228 1864,211 1736,209 1609,192 1602,190 1593,187 1583,182"];
	ARG_PARSER -> JoinWithArg [pos="e,1923,192 1923,234 1923,225 1923,213 1923,201"];
	ARG_LEXER -> JoinWithArg [pos="e,1961,179 2195,238 2184,234 2173,230 2165,228 2113,213 2060,204 2009,192 1998,188 1982,184 1967,180"];
	LR_PARSER -> JoinWithArg [pos="e,1883,178 1573,237 1582,233 1592,230 1600,228 1673,212 1748,205 1823,192 1837,189 1858,184 1877,179"];
	PARSER_DATA -> JoinWithArg [pos="e,1948,183 2032,236 2010,223 1979,203 1956,188"];
	ListOrdSet -> mkLalr [pos="e,3333,256 2881,406 2902,393 2931,374 2948,360 2962,347 2961,316 2980,312 3074,288 3245,266 3326,257"];
	RbOrdSet -> mkLalr [pos="e,3360,270 3280,401 3299,370 3335,311 3356,277"];
	LOOK -> mkLalr [pos="e,3405,258 3513,488 3539,478 3576,461 3594,444 3626,413 3604,336 3567,312 3529,287 3457,269 3411,259"];
	CORE -> mkLalr [pos="e,3371,276 3220,483 3254,464 3313,477 3336,444 3361,407 3368,329 3371,285"];
	INTGRAMMAR -> mkLalr [pos="e,3369,275 3149,555 3219,526 3304,509 3336,444 3355,403 3365,327 3368,284"];
	LRGRAPH -> mkLalr [pos="e,3402,260 3544,402 3553,375 3565,326 3544,312 3511,291 3451,273 3410,262"];
	LALR_GRAPH -> mkLalr [pos="e,3389,267 3454,319 3437,305 3414,286 3395,272"];
	mkVerbose -> ParseGen [pos="e,1245,108 1165,154 1186,142 1215,126 1238,112"];
	ParseGenFun -> ParseGen [pos="e,1243,93 558,161 603,156 666,148 706,144 858,128 1135,103 1237,94"];
	JoinWithArg -> ParseGen [pos="e,1309,93 1885,157 1864,152 1840,146 1823,144 1678,127 1419,102 1318,94"];
	LexMLYACC -> ParseGen [pos="e,1309,91 2423,155 2407,150 2389,144 2377,144 2063,122 1480,98 1318,91"];
	mkPrintStruct -> ParseGen [pos="e,1243,98 837,238 890,214 1000,166 1066,144 1090,135 1181,113 1236,100"];
	ShrinkLrTableFun -> ParseGen [pos="e,1243,95 662,238 726,213 859,163 939,144 981,133 1156,108 1236,96"];
	ParseGenParserFun -> ParseGen [pos="e,1309,95 1666,157 1643,152 1618,147 1601,144 1520,129 1382,107 1315,96"];
	MlyaccLrValsFun -> ParseGen [pos="e,1309,92 2229,156 2205,151 2178,145 2159,144 1912,124 1456,100 1317,92"];
	mkMakeLrTable -> ParseGen [pos="e,1309,90 2683,158 2652,152 2613,145 2587,144 2163,121 1740,92 1316,90"];
	Header -> ParseGen [pos="e,1309,90 2565,318 2574,272 2594,154 2543,144 2359,108 1513,93 1317,90"];
	LrTable -> ParseGen [pos="e,1274,108 1256,318 1260,274 1269,164 1273,115"];
	LrParser -> ParseGen [pos="e,1287,108 1312,150 1305,139 1298,127 1291,115"];
	IntGrammar -> ParseGen [pos="e,1243,92 120,161 160,155 218,146 255,144 544,124 1080,99 1234,92"];
	Absyn -> ParseGen [pos="e,1243,92 321,162 351,155 397,146 426,144 663,124 1099,100 1235,92"];
	ListOrdSet -> mkLook [pos="e,2879,357 2864,399 2867,389 2872,376 2876,365"];
	LOOK -> mkLook [pos="e,2914,347 3457,493 3398,484 3270,463 3200,444 3121,423 2988,374 2923,350"];
	INTGRAMMAR -> mkLook [pos="e,2860,348 3075,557 3005,533 2861,484 2784,444 2769,436 2773,407 2784,396 2799,380 2829,363 2852,352"];
	LR_TABLE -> SHRINK_LR_TABLE [pos="e,1018,348 1325,411 1254,396 1110,367 1026,350"];
	INTGRAMMAR -> LOOK [pos="e,3463,510 3170,562 3242,551 3369,530 3445,516 3448,515 3453,514 3457,512"];
	GRAMMAR -> LOOK [pos="e,3469,513 3199,631 3262,612 3389,570 3462,518"];
	LR_ERRS -> VERBOSE [pos="e,966,267 1336,324 1322,319 1306,313 1295,312 1193,295 1090,293 990,276 985,275 980,273 975,271"];
	LR_TABLE -> LR_ERRS [pos="e,1367,354 1367,402 1367,391 1367,375 1367,362"];
	INTGRAMMAR -> CORE [pos="e,3186,513 3137,553 3150,543 3166,529 3180,518"];
	GRAMMAR -> CORE [pos="e,3201,516 3171,624 3177,613 3185,598 3188,588 3192,570 3197,544 3200,524"];
	TABLE -> INTGRAMMAR [pos="e,3057,573 1724,640 1910,630 2800,586 3051,573"];
	GRAMMAR -> INTGRAMMAR [pos="e,3127,588 3149,624 3143,615 3137,605 3132,595"];
	LR_TABLE -> MAKE_LR_TABLE [pos="e,1739,267 1401,407 1464,388 1533,385 1595,360 1612,352 1610,321 1627,312 1627,312 1688,287 1733,269"];
	LR_ERRS -> MAKE_LR_TABLE [pos="e,1734,266 1405,328 1432,323 1468,316 1491,312 1560,299 1630,290 1700,276 1707,274 1718,271 1728,268"];
	GRAMMAR -> MAKE_LR_TABLE [pos="e,1787,270 3111,641 2872,633 1837,595 1838,498 1838,498 1838,498 1838,420 1837,378 1807,312 1790,277"];
	CORE -> LRGRAPH [pos="e,3500,430 3232,492 3282,481 3385,457 3445,444 3458,440 3477,436 3494,432"];
	INTGRAMMAR -> LRGRAPH [pos="e,3513,435 3160,558 3240,539 3326,538 3407,516 3423,511 3430,490 3444,480 3459,468 3485,452 3506,439"];
	GRAMMAR -> LRGRAPH [pos="e,3540,438 3206,636 3289,622 3463,587 3530,516 3542,502 3543,469 3541,446"];
	CORE -> CORE_UTILS [pos="e,3024,433 3178,489 3141,476 3074,451 3030,435"];
	INTGRAMMAR -> CORE_UTILS [pos="e,2993,438 3084,555 3064,544 3040,530 3028,516 3014,500 3003,468 2995,445"];
	GRAMMAR -> CORE_UTILS [pos="e,2990,438 3125,629 3099,619 3063,603 3044,588 3010,562 2996,486 2991,446"];
	HEADER -> PARSE_GEN_PARSER [pos="e,1097,270 2308,497 2135,492 1456,473 1308,444 1233,430 1142,325 1102,276"];
	LR_TABLE -> PRINT_STRUCT [pos="e,840,351 1322,415 1226,404 999,379 872,360 865,359 855,356 846,353"];
	CORE -> LALR_GRAPH [pos="e,3468,354 3224,484 3278,458 3353,475 3407,444 3430,430 3451,389 3464,362"];
	INTGRAMMAR -> LALR_GRAPH [pos="e,3470,354 3154,556 3223,536 3299,538 3369,516 3384,511 3388,491 3400,480 3413,466 3434,460 3443,444 3443,443 3458,392 3468,361"];
	LRGRAPH -> LALR_GRAPH [pos="e,3488,354 3525,403 3516,390 3503,374 3493,361"];
	GRAMMAR -> LALR_GRAPH [pos="e,3511,350 3209,640 3294,634 3379,614 3460,588 3497,576 3525,544 3552,516 3580,484 3625,424 3594,396 3577,381 3546,365 3520,354"];
	Hash -> ParseGenFun [pos="e,472,180 305,241 315,236 326,231 333,228 368,215 427,195 467,182"];
	Table -> ParseGenFun [pos="e,476,181 349,313 348,286 350,245 366,228 366,228 429,202 470,183"];
	PARSE_GEN -> ParseGenFun [pos="e,491,186 445,235 457,223 473,206 485,192"];
	VERBOSE -> ParseGenFun [pos="e,558,175 915,237 906,233 897,229 890,228 801,211 647,187 565,176"];
	MAKE_LR_TABLE -> ParseGenFun [pos="e,570,171 1738,237 1725,232 1710,228 1700,228 1374,206 781,180 578,171"];
	ABSYN -> ParseGenFun [pos="e,464,177 218,238 226,233 234,228 236,228 296,212 398,190 459,178"];
	PARSE_GEN_PARSER -> ParseGenFun [pos="e,561,174 1036,237 1022,233 1007,229 996,228 876,210 668,186 567,175"];
	PRINT_STRUCT -> ParseGenFun [pos="e,506,192 755,325 734,320 710,315 694,312 637,299 569,311 524,276 507,263 504,227 506,201"];
}
