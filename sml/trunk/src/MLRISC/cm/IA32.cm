(* IA32-MLRISC.cm
 *
 * COPYRIGHT (c) 1999 Bell Labs, Lucent Technologies.
 *
 * IA32 (ne x86) specific modules for MLRISC code generation framework.
 *)

Library

	signature MEMORY_REGISTERS
	signature X86CELLS
	signature X86COMP_INSTR_EXT
	signature X86INSTR
	signature X86REWRITE
	signature X86SHUFFLE
	signature X86SPILL
	structure X86Cells
	structure X86InstrExt
	functor IA32SVID_CCalls
	functor X86
	functor X86AsmEmitter
	functor X86CompInstrExt
	functor X86FP
	functor X86FreqProps
	functor X86Instr
	functor X86Jumps
	functor X86MCEmitter
	functor X86Props
	functor X86RA
	functor X86Rewrite
	functor X86Shuffle
	functor X86Spill
is

#if defined(NEW_CM)
#if SMLNJ_VERSION * 100 + SMLNJ_MINOR_VERSION >= 11030
        $/basis.cm
        $/smlnj-lib.cm
	$/MLRISC.cm
	$/Control.cm
	$/Lib.cm
#else
        basis.cm
        smlnj-lib.cm
	MLRISC.cm
	Control.cm
	Lib.cm
#endif
#else
        smlnj-lib.cm
	MLRISC.cm
	Control.cm
	Lib.cm
#endif

        (* c calls *)
        ../x86/c-calls/ia32-svid.sml

	(* X86 specific backend *)
	../x86/instructions/x86Cells.sml
	../x86/instructions/x86comp-instr-ext.sml
	../x86/instructions/x86Instr.sml
	../x86/instructions/x86instr-ext.sml
	../x86/instructions/x86Shuffle.sig
	../x86/instructions/x86Shuffle.sml
	../x86/instructions/x86Props.sml
	../x86/instructions/x86MemRegs.sig
	../x86/instructions/x86FreqProps.sml
	../x86/emit/x86Asm.sml
	../x86/x86MC.sml
	../x86/ra/x86Rewrite.sig
	../x86/ra/x86Rewrite.sml
	(* ../x86/ra/x86RegAlloc.sml *)
	../x86/ra/x86Spill.sml
	(* This is no long needed *)
	(* ../x86/ra/x86PseudoR.sml *)
	../x86/backpatch/x86Jumps.sml 
	../x86/mltree/x86.sml

	(* Floating Point Code Generation/Optimization *)
	../x86/mltree/x86-fp.sml

	(* register allocator *)
	../x86/ra/x86RA.sml
