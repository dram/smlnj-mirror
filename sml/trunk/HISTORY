This is the HISTORY file for the Yale SML/NJ CVS repository.

An entry should be made for _every_ commit to the repository.
The entries in this file will be used when creating the README
for new versions, so keep that in mind when writing the
description.

The form of an entry should be:

Name: 
Date:
Tag: <post-commit CVS tag>
Description:
----------------------------------------------------------------------
Name: Matthias Blume
Date: 2000/03/14 14:15:32
Tag: blume_main_v110p26p1_2
Description:

1. Tools.registerStdShellCmdTool (from smlnj/cm/tool.cm) takes an
additional argument called "template" which is an optional string that
specifiel the layout of the tool command line.  See the CM manual for
explanation.

2. A special-purpose tool can be "regisitered" by simply dropping the
corresponding <...>-tool.cm (and/or <...>-ext.cm) into the same
directory where the .cm file lives that uses this tool.  (The
behavior/misfeature until now was to look for the tool description
files in the current working directory.)  As before, tool description
files could also be anchored -- in which case they can live anywhere
they like.  Following the recent e-mail discussion, this change should
make it easier to have special-purpose tools that are shipped together
with the sources of the program that uses them.

----------------------------------------------------------------------
Name: Matthias Blume
Date: 2000/03/10 07:48:34
Tag: blume_main_v110p26p1_1
Description:

I added a re-written version of Dave's fixpt script to src/system.
Changes relative to the original version:
  - sh-ified (not everybody has ksh)
  - automatically figures out which architecture it runs on
  - uses ./makeml a bit more cleverly
  - never invokes ./installml (and, thus, does not clobber your
    good and working installation of sml in case something goes wrong)
  - accepts max iteration count using option "-iter <n>"
  - accepts a "base" name using option "-base <base>"

It does not build any extraneous heap images but directly rebuilds
bin- and boot-hierarchies using makeml's "-rebuild" switch. Finally,
it can incorporate existing bin- and boot- hierarchies.  For example,
suppose the base is set to "sml" (which is the default).  Then it
successively builds

        sml.bin.<arch>-unix and sml.boot.<arch>-unix
then    sml1.bin.<arch>-unix and sml1.boot.<arch>-unix
then    sml2.bin.<arch>-unix and sml2.boot.<arch>-unix
...
then    sml<n>.bin.<arch>-unix and sml<n>.boot.<arch>-unix

and so on.  If any of these already exist, it will just use what's
there.  In particular, many people will have the initial set of bin
and boot files around, so this saves time for at least one full
rebuild.  Having sets of the form <base><k>.{bin,boot}.<arch>-unix for
<k>=1,2,... is normally not a good idea when invoking fixpt.  However,
they might be the result of an earlier partial run of fixpt (which
perhaps got accidentially killed).  In this case, fixpt will quickly
move through what exists before continuing where it left off earlier,
and, thus, saves a lot of time.

----------------------------------------------------------------------
Name: Allen Leung
Date: 00/03/10 02:20:00
Tag: leunga-20000310-fix_x86_asm_ra
Description:

More assembly output problems involving the indexed addressing mode
on the x86 have been found and corrected. Thanks to Fermin Reig for the
fix.

The interface and implementation of the register allocator have been changed
slightly to accommodate the possibility to skip the register allocation 
phases completely and go directly to memory allocation.  This is needed
for C-- use.

----------------------------------------------------------------------
Name: Matthias Blume
Date: 00/03/09 10:23:53
Tag: blume_main_v110p26p1_0
Description:

* Complete re-organization of library names.  Many libraries have been
consolidated so that they share the same path anchor.  For example,
all MLRISC-related libraries are anchored at MLRISC, most libraries that
are SML/NJ-specific are under "smlnj".  Notice that names like
host-cmb.cm or host-compiler.cm no longer exist.  See system/README
for a complete description of the new naming scheme.  Quick reference:

   host-cmb.cm        -> smlnj/cmb.cm
   host-compiler.cm   -> smlnj/compiler.cm
   full-cm.cm         -> smlnj/cm.cm
   <arch>-<os>.cm     -> smlnj/cmb/<arch>-<os>.cm
   <arch>-compiler.cm -> smlnj/compiler/<arch>.cm

* Bug fixes in CM.
    - exceptions in user code are being passed through (i.e., reach top level)
    - more bugs in paranoia mode fixed
    - bug related to checking group owners fixed

* New install.sh script that automagically fetches archive files:
  The new file config/srcarchiveurl must contain the URL of the
  (remote) directory that contains bin files (or other source archives).
  If install.sh does not find the archive locally, it tries to get
  it from that remote directory.
  This should simplify installation further:  For machines that have
  access to the internet, just fetch <version>-config.tgz, unpack it,
  edit config/targets, and go (run config/install.sh).  The scipt will
  fetch everything else that it might need all by itself.

  For CVS users, this mechanism is not relevant for source archives, but
  it is convenient for getting new sets of binfiles.

  Archives should be tar files compressed with either gzip, compress, or
  bzip2.  The script recognizes .tgz, .tar, tar.gz, tz, .tar.Z, and .tar.bz2.
  
----------------------------------------------------------------------
Name: Matthias Blume
Date: 2000/03/07 04:01:04
Tag: blume_main_v110_26_2
Description:
- size info in BOOTLIST
     * no fixed upper limits for number of bootfiles or length of
       bootfile names in runtime
     * falling back to old behavior if no BOOTLIST size info found
- allocation size heuristics in .run-sml
     * tries to read cache size from /proc/cpuinfo (this is important for
        small-cache Celeron systems!)
- install.sh robustified
- CM manual updates
- paranoid mode
     * no more CMB.deliver() (i.e., all done by CMB.make())
     * can re-use existing sml.boot.* files
     * init.cmi now treated as library
     * library stamps for consistency checks
- sml.boot.<arch>-<os>/PIDMAP file
     * This file is read by the CM startup code.  This is used to minimize
       the amount of dynamic state that needs to be stowed away for the
       purpose of sharing between interactive system and user code.
- CM.Anchor.anchor instead of CM.Anchor.{set,cancel}
     * Upon request by Elsa.  Anchors now controlled by get-set-pair
       like most other CM state variables.
- Compiler.CMSA eliminated
     * No longer supported by CM anyway.
- fixed bugs in pickler that kept biting Stefan
     * past refs to past refs (was caused by the possibility that
       ad-hoc sharing is more discriminating than hash-cons sharing)
     * integer overflow on LargeInt.minInt
- ml-{lex,yacc} build scripts now use new mechanism
  for building standalone programs
- fixed several gcc -Wall warnings that were caused by missing header
  files, missing initializations, etc., in runtime (not all warnings
  eliminated, though)
