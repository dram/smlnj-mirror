#
# Modules to be pre-loaded during bootstrap.
#   Each line should have the form "command libname" where "command" is
#   either "autoload" or "make" and where "libname" is suitable as an
#   argument to CM.autoload or CM.make.
#
# Make sure that at least $smlnj/cm.cm is being registered here.
#

########################### BASICS ####################################

# The SML Basis library:
autoload $/basis.cm

# The Compilation Manager (structure CM)
autoload $smlnj/cm.cm

# The "Util" portion of the SML/NJ Library
autoload $/smlnj-lib.cm


##################### ADDITIONAL LIBRARIES ############################

# The "Pretty-Printing" portion of the SML/NJ library
#autoload $/pp-lib.cm

# The "Regular Expression Matching" portion of the SML/NJ library
#autoload $/regexp-lib.cm

# The "Reactive Programming" portion of the SML/NJ library
#autoload $/reactive-lib.cm

# The "Hash Consing" portion of the SML/NJ library
#autoload $/hash-cons-lib.cm

# The "Unix Utilities" portion of the SML/NJ library
#autoload $/unix-lib.cm

# The "Socket Utils" portion of the SML/NJ library
#autoload $/inet-lib.cm

# The "Configurable Controls" portion of the SML/NJ library
#autoload $/controls-lib.cm

# The "HTML" portion of the SML/NJ library
#autoload $/html-lib.cm


################# FOR CML PROGRAMMERS #################################

# Concurrent ML (CML)
#autoload $cml/cml.cm

# The CML (thread-safe) version of $/basis.cm
# (Do not preload $/basis.cm if you preload this.)
#autoload $cml/basis.cm

# The CML version of the SML/NJ "Util" library.
#autoload $cml-lib/smlnj-lib.cm

# The Trace-CML facility:
#autoload $cml-lib/trace-cml.cm

# The eXene toolkit for X windows programming (based on CML).
#autoload $/eXene.cm

################## FOR SML/NJ COMPILER HACKERS ########################

# The Visisble Compiler (collection of structures)
autoload $smlnj/compiler.cm

# The Visisble Compiler (old style: structure Compiler)
#autoload $smlnj/compiler/compiler.cm

# If you don't autoload the old-style visible compiler above, then
# you should make a minimal version of it available so that
# Compiler.version as well as Compiler.achitecture are available:
autoload $smlnj/compiler/minimal.cm

# The Bootstrap Compilation Manager (structure CMB)
#autoload $smlnj/cmb.cm
