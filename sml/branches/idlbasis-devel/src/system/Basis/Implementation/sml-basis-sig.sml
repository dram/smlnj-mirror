
(*
 * This file was automatically generated by ml-idl
 * (Fri Jun 29 19:27:34 2001)
 *)

signature SML_BASIS = sig
type idl_string = String.string
type ML_word8vec_t = Word8Vector.vector
type ML_word8arr_t = Word8Array.array
type ML_charvec_t = CharVector.vector
type ML_chararr_t = CharArray.array
type ML_unit_t = unit
type ML_string_t = string
type ML_string_opt_t = string option
type ML_iodesc_t = Unsafe.Object.object
type ML_directory_t = Unsafe.Object.object
type Time_t = {sec:Int32.int,usec:Int32.int}
type ML_polldesc_list_t = (word * Unsafe.Object.object) list
type ML_pollinfo_list_t = (word * Unsafe.Object.object) list
type Date_t = {tm_sec:Int32.int,tm_min:Int32.int,tm_hour:Int32.int,tm_mday:Int32.int,tm_mon:Int32.int,tm_year:Int32.int,tm_wday:Int32.int,tm_yday:Int32.int,tm_isdst:Int32.int}
val TO_NEAREST : Int.int
val TO_NEGINF : Int.int
val TO_POSINF : Int.int
val TO_ZERO : Int.int
val getRoundingMode : unit -> Int.int
val setRoundingMode : Int.int -> unit
val openFile : (ML_string_t * Int.int) -> ML_iodesc_t
val closeFile : ML_iodesc_t -> unit
val readTextVec : (ML_iodesc_t * Int.int) -> ML_charvec_t
val readTextArr : (ML_iodesc_t * ML_chararr_t * Int.int * Int.int) -> Int.int
val writeTextVec : (ML_iodesc_t * ML_charvec_t * Int.int * Int.int) -> Int.int
val writeTextArr : (ML_iodesc_t * ML_chararr_t * Int.int * Int.int) -> Int.int
val readBinVec : (ML_iodesc_t * Int.int) -> ML_word8vec_t
val readBinArr : (ML_iodesc_t * ML_word8arr_t * Int.int * Int.int) -> Int.int
val writeBinVec : (ML_iodesc_t * ML_word8vec_t * Int.int * Int.int) -> Int.int
val writeBinArr : (ML_iodesc_t * ML_word8arr_t * Int.int * Int.int) -> Int.int
val getStdIn : unit -> ML_iodesc_t
val getStdOut : unit -> ML_iodesc_t
val getStdErr : unit -> ML_iodesc_t
val errorName : Int32.int -> idl_string
val errorMessage : Int32.int -> idl_string
val getEnv : idl_string -> ML_string_opt_t
val osSleep : Time_t -> unit
val openDir : idl_string -> ML_directory_t
val readDir : ML_directory_t -> ML_string_opt_t
val rewindDir : ML_directory_t -> ML_unit_t
val closeDir : ML_directory_t -> ML_unit_t
val chDir : idl_string -> ML_unit_t
val getDir : unit -> ML_string_t
val mkDir : idl_string -> ML_unit_t
val rmDir : idl_string -> ML_unit_t
val isDir : idl_string -> Bool.bool
val isLink : idl_string -> Bool.bool
val readLink : idl_string -> ML_string_t
val fullPath : idl_string -> ML_string_t
val realPath : idl_string -> ML_string_t
val setTime : (idl_string * Time_t option) -> ML_unit_t
val remove : idl_string -> ML_unit_t
val rename : (idl_string * idl_string) -> ML_unit_t
val A_READ : Int.int
val A_WRITE : Int.int
val A_EXEC : Int.int
val fileAccess : (idl_string * Int.int) -> Bool.bool
val tmpName : unit -> ML_string_t
val fileId : idl_string -> ML_word8vec_t
val IOD_KIND_FILE : Int.int
val IOD_KIND_DIR : Int.int
val IOD_KIND_SYMLINK : Int.int
val IOD_KIND_TTY : Int.int
val IOD_KIND_PIPE : Int.int
val IOD_KIND_SOCKET : Int.int
val IOD_KIND_DEVICE : Int.int
val ioDescKind : ML_iodesc_t -> Int.int
val POLL_RD : Word.word
val POLL_WR : Word.word
val POLL_ERR : Word.word
val poll : (ML_polldesc_list_t * Time_t option) -> ML_pollinfo_list_t
val now : unit -> Time_t
val gmTime : Time_t -> Date_t
val localTime : Time_t -> Date_t
val getCPUTime : unit -> (Time_t * Time_t * Time_t)
end

