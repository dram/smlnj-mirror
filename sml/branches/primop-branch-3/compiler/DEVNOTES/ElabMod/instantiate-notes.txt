
Instantiate produces a free instantiation of a signature given a current entity environment. It does so by way of a linear unification algorithm. 

The goal is to produce a realization of the signature that incorporates all the necessary type sharing but no more. The target of linear unification are these "structure instances" which represent equivalence classes of structures and functor instances. Equivalence classes are represented as association lists of entity variables and "slots" (structure instances that are nodes on this graph). 


instToStr also attempts to close any open realizations by incorporating the contextual entity environment. Open is defined liberally to mean any signature that is not defined at top level. 

functor F(X:sig type t end) = 
struct
  functor G(Y:sig type u end) = struct end
end

GSIG is considered open even though it does not depend on its context in any way.  
In the future, the notion of open signature should be computed more conservatively to check for actual dependencies on context. 
