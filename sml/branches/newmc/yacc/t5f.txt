- use "t5f.sml";
transVB:pat = ittransVB:exp = use "t5f.sml"
[opening t5f.sml]
>> matchComp
<< makeAndor
andor:
<> AND 2 {0} {}
   <0> VARS 0 (state,0) {0}
   <1> VARS 1 (stack,0) {0}
>> decisionTree: andor ID = 2, numRules = 1
** decisionTree: intialOrNodes = []
>> makeDecisionTree: survivors = [0]; orNodes = []
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
<< decisionTree: ruleCounts = [1]
<< decisionTree
dectree:
DLEAF 0
>> genMatch
** genMatch: ruleCounts: [1], length rules: 1
multirules = []
>> genNode:AND: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: stack[lv2], 0 --> <1>[lv40]
>> genNode:VARS: 0, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: state[lv3], 0 --> <0>[lv41]
>> bindSVars
>> lookVar: stack[lv2] @ 0 --> <1>[lv40]
>> lookVar: state[lv3] @ 0 --> <0>[lv41]
bindSvars: venv = stack[lv2]-><1>[lv40], state[lv3]-><0>[lv41]
<< bindSvar
>> transExp: CASEexp
>> matchComp
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 32; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 1; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 29; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 34; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 35; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 26; |bind| = 1
<< makeAndor
andor:
<> AND 26 {0,1,2,3,4,5,6,7} {8}
   <0> OR 0 {0,1,2,3,4,5,6,7} {8}
      I0 LEAF {0} {8}
      I1 LEAF {1} {8}
      I2 LEAF {2} {8}
      I3 LEAF {3} {8}
      I4 LEAF {4} {8}
      I5 LEAF {5} {8}
      I6 LEAF {6} {8}
      I7 LEAF {7} {8}
   <1> OR 1 {0,1,3,4,5,6,7} {2,8}
      ::
      <1.::> AND 25 {0,1,3,4,5,6,7} {2,8}
         <1.::.0> AND 6 {0,1,3,4,5,6,7} {2,8}
            <1.::.0.0> OR 2 {0,1,3,4,5,6,7} {2,8}
               C1 <1.::.0.0.C1> VARS 3 (x0a,0) {0,2,8}
               C4 <1.::.0.0.C4> VARS 27 (x1a,1) {1,2,8}
               C5 <1.::.0.0.C5> VARS 33 (x3,3) {2,3,8}
               C6 <1.::.0.0.C6> VARS 35 (x5,5) (x7,7) {2,5,7,8}
               C7 <1.::.0.0.C7> VARS 34 (x4,4) (x6,6) {2,4,6,8}
            <1.::.0.1> VARS 4 (%WILD%,0) (left1,1) (%WILD%,3) (%WILD%,4)
            (%WILD%,5) (%WILD%,6) (%WILD%,7) {0,1,2,3,4,5,6,7,8}
            <1.::.0.2> VARS 5 (right,0) (right,1) (right,3) (right,4)
            (right,5) (right,6) (right,7) {0,1,2,3,4,5,6,7,8}
         <1.::.1> OR 7 {0,1,3,4,5,6,7} {2,8}
            ::
            <1.::.1.::> AND 24 {0,1,3,4,5,6,7} {2,8}
               <1.::.1.::.0> AND 32 {1,3,4,5,6,7} {0,2,8}
                  <1.::.1.::.0.0> OR 28 {1,5} {0,2,3,4,6,7,8}
                     C2
                     <1.::.1.::.0.0.C2> VARS 29 (x1b,1) (prec1,5) {0,1,2,3,4,5,6,7,8}
                  <1.::.1.::.0.1> VARS 30 (left2,1) (left,3) (left,4) (left,5)
                  (left,6) (left,7) {0,1,2,3,4,5,6,7,8}
                  <1.::.1.::.0.2> VARS 31 (%WILD%,1) (%WILD%,3) (%WILD%,4)
                  (%WILD%,5) (%WILD%,6) (%WILD%,7) {0,1,2,3,4,5,6,7,8}
               <1.::.1.::.1> OR 9 {0} {1,2,3,4,5,6,7,8}
                  ::
                  <1.::.1.::.1.::> AND 23 {0} {1,2,3,4,5,6,7,8}
                     <1.::.1.::.1.::.0> AND 14 {0} {1,2,3,4,5,6,7,8}
                        <1.::.1.::.1.::.0.0> OR 10 {0} {1,2,3,4,5,6,7,8}
                           C2
                           <1.::.1.::.1.::.0.0.C2> VARS 11 (x0b,0) {0,1,2,3,4,5,6,7,8}
                        <1.::.1.::.1.::.0.1> VARS 12 (%WILD%,0) {0,1,2,3,4,5,6,7,8}
                        <1.::.1.::.1.::.0.2> VARS 13 (%WILD%,0) {0,1,2,3,4,5,6,7,8}
                     <1.::.1.::.1.::.1> OR 15 {0} {1,2,3,4,5,6,7,8}
                        ::
                        <1.::.1.::.1.::.1.::> AND 22 {0} {1,2,3,4,5,6,7,8}
                           <1.::.1.::.1.::.1.::.0> AND 20 {0} {1,2,3,4,5,6,7,8}
                              <1.::.1.::.1.::.1.::.0.0> OR 16 {0} {1,2,3,4,5,6,7,8}
                                 C3
                                 <1.::.1.::.1.::.1.::.0.0.C3> VARS 17 (header1,0) {0,1,2,3,4,5,6,7,8}
                              <1.::.1.::.1.::.1.::.0.1> VARS 18 (left,0) {0,1,2,3,4,5,6,7,8}
                              <1.::.1.::.1.::.1.::.0.2> VARS 19 (%WILD%,0) {0,1,2,3,4,5,6,7,8}
                           <1.::.1.::.1.::.1.::.1> VARS 21 (rest,0) {0,1,2,3,4,5,6,7,8}
>> decisionTree: andor ID = 26, numRules = 9
** decisionTree: intialOrNodes = [0,1]
>> makeDecisionTree: survivors = [0,1,2,3,4,5,6,7,8]; orNodes = [0,1]
** makeDecisionTree[SOME(OR)]: best relevant = 0
** andorToDecTree: id = ~1
  path = <0.I0>
  live = [0,8]
  variantSurvivors = [0,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [0,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [0,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [0,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [0,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [0,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [28,10,15]
>> makeDecisionTree: survivors = [0,8]; orNodes = [28,10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [28,15]
>> makeDecisionTree: survivors = [0,8]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [28,16]
>> makeDecisionTree: survivors = [0,8]; orNodes = [28,16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [0,8]
  variantCandidates = [28]
>> makeDecisionTree: survivors = [0,8]; orNodes = [28]
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 3
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 4
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 5
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 9 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 13
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 15
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 16
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 17
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 18
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 19
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 20
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 21
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 22
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 23
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 24
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 25
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 26
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 27
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 28
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 29
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 30
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 31
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 32
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 33
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 34
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 35
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 36
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 37
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 38
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 39
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 40
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 41
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 42
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 43
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 44
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 45
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 46
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 47
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 48
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 49
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 50
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 51
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 52
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 53
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 54
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 55
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 56
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 57
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 58
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 59
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 60
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 61
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 62
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 63
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 64
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 65
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 66
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 67
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 68
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 69
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 70
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 71
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 72
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 73
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 74
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 75
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 76
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 77
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 78
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 79
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 80
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 81
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 82
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 83
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 84
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 85
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 86
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 87
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 88
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 89
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I1>
  live = [1,8]
  variantSurvivors = [1,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [1,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [1,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [1,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [1,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [1,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 90
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 91
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 92
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 93
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 94
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 95
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 96
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 97
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 98
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 99
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 100
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 101
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 102
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 103
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [1,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [1,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [1,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [1,8]; orNodes = [9]
<< incrementRuleCount: 1 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 104
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 105
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 106
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 107
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 108
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 109
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 110
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 111
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 112
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 113
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 114
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 115
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 116
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 117
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 118
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 119
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 120
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 121
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 122
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 123
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 124
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 125
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 126
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 127
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 128
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 129
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 130
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 131
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 132
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 133
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 134
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 135
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 136
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 137
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 138
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 139
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 140
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 141
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 142
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 143
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 144
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 145
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 146
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 147
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 148
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 149
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 150
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 151
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 152
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 153
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 154
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 155
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 156
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 157
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 158
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 159
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 160
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 161
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 162
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 163
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 164
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 165
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 166
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 167
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 168
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 169
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 170
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 171
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 172
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 173
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I2>
  live = [2,8]
  variantSurvivors = [2,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [2,8]; orNodes = [1]
<< incrementRuleCount: 2 to 1
<< makeDecisionTree: NO relevant
** andorToDecTree: id = ~1
  path = <0.I3>
  live = [3,8]
  variantSurvivors = [3,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [3,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [3,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [3,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 174
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 175
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 176
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 177
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 178
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 179
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 180
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 181
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 182
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 183
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 184
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 185
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 186
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 187
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 188
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 189
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 190
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 191
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 192
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 193
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 194
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 195
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 196
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 197
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 198
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 199
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 200
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 201
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [3,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [3,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [3,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [3,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,8]
>> makeDecisionTree: survivors = [3,8]; orNodes = []
<< incrementRuleCount: 3 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 202
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 203
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 204
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 205
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 206
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 207
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 208
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 209
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 210
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 211
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 212
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 213
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 214
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 215
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 216
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 217
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 218
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 219
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 220
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 221
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 222
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 223
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 224
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 225
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 226
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 227
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 228
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 229
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 230
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 231
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 232
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 233
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 234
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 235
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 236
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 237
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 238
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 239
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 240
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 241
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 242
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 243
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 244
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 245
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 246
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 247
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 248
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 249
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 250
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I4>
  live = [4,8]
  variantSurvivors = [4,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [4,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [4,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [4,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 251
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 252
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 253
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 254
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 255
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 256
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 257
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 258
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 259
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 260
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 261
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 262
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 263
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 264
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 265
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 266
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 267
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 268
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 269
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 270
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 271
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 272
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 273
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 274
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 275
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 276
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 277
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 278
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 279
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 280
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 281
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 282
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 283
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 284
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 285
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 286
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 287
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 288
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 289
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 290
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 291
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 292
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 293
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 294
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 295
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 296
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 297
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 298
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 299
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 300
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 301
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 302
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 303
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 304
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 305
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 306
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [4,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [4,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,8]
>> makeDecisionTree: survivors = [4,8]; orNodes = []
<< incrementRuleCount: 4 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 307
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 308
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 309
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 310
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 311
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 312
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 313
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 314
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 315
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 316
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 317
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 318
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 319
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 320
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 321
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 322
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 323
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 324
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 325
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 326
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 327
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I5>
  live = [5,8]
  variantSurvivors = [5,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [5,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [5,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [5,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 328
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 329
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 330
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 331
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 332
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 333
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 334
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 335
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 336
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 337
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 338
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 339
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 340
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 341
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 342
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 343
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 344
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 345
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 346
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 347
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 348
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 349
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 350
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 351
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 352
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 353
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 354
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 355
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 356
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 357
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 358
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 359
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 360
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 361
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 362
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 363
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 364
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 365
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 366
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 367
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 368
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 369
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [5,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5,8]
>> makeDecisionTree: survivors = [5,8]; orNodes = []
<< incrementRuleCount: 5 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 370
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 371
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 372
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 373
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 374
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 375
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 376
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 377
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 378
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 379
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 380
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 381
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 382
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 383
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 384
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 385
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 386
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 387
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 388
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 389
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 390
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 391
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 392
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 393
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 394
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 395
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 396
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 397
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 398
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 399
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 400
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 401
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 402
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 403
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 404
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 405
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 406
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 407
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 408
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 409
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 410
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 411
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I6>
  live = [6,8]
  variantSurvivors = [6,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [6,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [6,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [6,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 412
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 413
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 414
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 415
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 416
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 417
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 418
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 419
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 420
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 421
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 422
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 423
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 424
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 425
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 426
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 427
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 428
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 429
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 430
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 431
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 432
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 433
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 434
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 435
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 436
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 437
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 438
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 439
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 440
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 441
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 442
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 443
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 444
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 445
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 446
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 447
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 448
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 449
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 450
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 451
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 452
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 453
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 454
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 455
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 456
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 457
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 458
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 459
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 460
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 461
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 462
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 463
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 464
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 465
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 466
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 467
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [6,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [6,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6,8]
>> makeDecisionTree: survivors = [6,8]; orNodes = []
<< incrementRuleCount: 6 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 468
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 469
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 470
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 471
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 472
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 473
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 474
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 475
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 476
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 477
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 478
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 479
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 480
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 481
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 482
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 483
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 484
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 485
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 486
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 487
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 488
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I7>
  live = [7,8]
  variantSurvivors = [7,8]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [7,8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [7,8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [7,8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 489
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 490
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 491
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 492
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 493
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 494
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 495
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 496
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 497
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 498
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 499
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 500
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 501
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 502
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 503
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 504
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 505
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 506
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 507
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 508
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 509
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 510
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 511
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 512
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 513
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 514
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 515
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 516
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 517
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 518
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 519
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 520
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 521
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 522
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 523
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 524
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 525
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 526
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 527
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 528
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 529
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 530
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [7,8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [7,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [7,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [7,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [7,8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [7,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [7,8]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [7,8]
>> makeDecisionTree: survivors = [7,8]; orNodes = []
<< incrementRuleCount: 7 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 531
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 532
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 533
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 534
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 535
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 536
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 537
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 538
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 539
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 540
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 541
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 542
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 543
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 544
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 545
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 546
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 547
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 548
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 549
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 550
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 551
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 552
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 553
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 554
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 555
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 556
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 557
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 558
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 559
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 560
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 561
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 562
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 563
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 564
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 565
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
defaultOp: id = 0, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [8]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 566
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 567
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 568
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 569
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 570
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 571
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 572
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 573
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 574
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 575
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 576
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 577
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 578
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 579
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 580
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 581
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 582
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 583
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 584
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 585
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 586
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 587
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 588
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 589
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 590
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 591
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 592
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 593
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 594
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 595
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 596
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 597
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 598
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 599
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 600
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 601
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 602
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 603
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 604
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 605
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 606
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 607
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 608
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 609
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 610
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 611
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 612
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 613
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 614
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 615
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 616
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 617
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 618
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 619
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 620
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 621
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 622
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 623
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 624
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 625
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 626
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 627
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 628
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 629
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 630
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 631
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 632
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 633
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 634
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 635
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 636
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 637
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 638
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 639
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 640
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 641
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 642
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 643
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 644
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 645
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 646
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 647
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 648
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 649
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 650
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 651
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 652
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 653
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,8]
  variantSurvivors = [8]
  variantCandidates = []
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 654
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 655
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [8]
>> makeDecisionTree: survivors = [8]; orNodes = []
<< incrementRuleCount: 8 to 656
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
<< makeDecisionTree: 0 relevant
<< decisionTree: ruleCounts = [1,1,1,14,14,7,14,14,656]
<< decisionTree
dectree:
CHOICE <0>
  I0
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.1>
          ::
          CHOICE <1.::.1.::.1.::.0.0>
            C2
            CHOICE <1.::.1.::.1.::.1>
              ::
              CHOICE <1.::.1.::.1.::.1.::.0.0>
                C3 DLEAF 0
                * CHOICE <1.::.1.::.0.0>
                  C2 DLEAF 8
                  * DLEAF 8
              * CHOICE <1.::.1.::.0.0>
                C2 DLEAF 8
                * DLEAF 8
            *
            CHOICE <1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
          * CHOICE <1.::.1.::.0.0>
            C2 DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I1
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2 DLEAF 1
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I2 DLEAF 2
  I3
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I4
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I5
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I6
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  I7
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
            * DLEAF 7
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
            * DLEAF 7
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
  *
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 8
        C4 DLEAF 8
        C5 DLEAF 8
        C6 DLEAF 8
        C7 DLEAF 8
        * DLEAF 8
    * DLEAF 8
>> genMatch
** genMatch: ruleCounts: [1,1,1,14,14,7,14,14,656], length rules: 9
multirules = [3,4,5,6,7,8]
>> genNode:AND: 26, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv25], 2 --> <1>[lv76]
>> genNode:OR: 0, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv81]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv81]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv82]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv85]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv85]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv85]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv85]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv85]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv85]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv88]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv88]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv88]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv88]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv88]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv88]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv90]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv97]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv99]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv102]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv104]
>> bindSVars
>> lookVar: rest[lv32] @ 0 --> <1.::.1.::.1.::.1.::.1>[lv99]
>> lookVar: left[lv33] @ 0 --> <1.::.1.::.1.::.1.::.0.1>[lv102]
>> lookVar: header1[lv34] @ 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv104]
>> lookVar: x0b[lv35] @ 0 --> <1.::.1.::.1.::.0.0.C2>[lv97]
>> lookVar: right[lv36] @ 0 --> <1.::.0.2>[lv81]
>> lookVar: x0a[lv37] @ 0 --> <1.::.0.0.C1>[lv90]
bindSvars: venv = rest[lv32]-><1.::.1.::.1.::.1.::.1>[lv99], left[lv33]-><1.::.1.::.1.::.1.::.0.1>[lv102], header1[lv34]-><1.::.1.::.1.::.1.::.0.0.C3>[lv104], x0b[lv35]-><1.::.1.::.1.::.0.0.C2>[lv97], right[lv36]-><1.::.0.2>[lv81], x0a[lv37]-><1.::.0.0.C1>[lv90]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv105]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv105]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv106]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv106]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv107]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv107]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv109]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv112]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv114]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv116]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv119]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv121]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv122]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv122]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv123]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv124]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv124]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv131]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv133]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv136]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv138]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv140]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv143]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv145]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv152]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv154]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv157]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv159]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv161]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv164]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv166]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv167]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv168]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv168]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv175]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv177]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv180]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv182]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv184]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv187]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv189]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv196]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv198]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv201]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv203]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv205]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv208]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv210]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv211]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv211]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv212]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv212]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv219]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv221]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv224]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv226]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv228]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv231]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv233]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv240]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv242]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv245]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv247]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv249]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv252]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv254]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv255]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv255]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv256]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv256]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv263]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv265]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv268]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv270]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv272]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv275]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv277]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv284]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv286]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv289]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv291]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv293]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv296]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv298]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv299]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv299]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv306]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv308]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv311]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv313]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv315]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv318]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv320]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv327]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv329]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv332]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv334]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv336]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv339]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv341]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv342]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv343]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv344]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv345]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv345]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv346]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv346]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv350]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv350]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv351]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv354]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv354]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv354]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv354]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv354]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv354]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv357]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv357]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv357]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv357]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv357]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv357]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv359]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv360]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv360]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv367]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv369]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv372]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv374]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv376]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv379]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv381]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv388]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv390]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv393]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv395]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv397]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv400]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv402]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv403]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv404]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv404]
>> bindSVars
>> lookVar: rest[lv26] @ 1 --> <1.::.1.::.1>[lv354]
>> lookVar: left2[lv27] @ 1 --> <1.::.1.::.0.1>[lv357]
>> lookVar: x1b[lv28] @ 1 --> <1.::.1.::.0.0.C2>[lv404]
>> lookVar: right[lv29] @ 1 --> <1.::.0.2>[lv350]
>> lookVar: left1[lv30] @ 1 --> <1.::.0.1>[lv351]
>> lookVar: x1a[lv31] @ 1 --> <1.::.0.0.C4>[lv403]
bindSvars: venv = rest[lv26]-><1.::.1.::.1>[lv354], left2[lv27]-><1.::.1.::.0.1>[lv357], x1b[lv28]-><1.::.1.::.0.0.C2>[lv404], right[lv29]-><1.::.0.2>[lv350], left1[lv30]-><1.::.0.1>[lv351], x1a[lv31]-><1.::.0.0.C4>[lv403]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv411]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv413]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv416]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv418]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv420]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv423]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv425]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv426]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv427]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv427]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv434]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv436]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv439]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv441]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv443]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv446]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv448]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv455]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv457]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv460]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv462]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv464]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv467]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv469]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv470]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv470]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv471]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv471]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv478]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv480]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv483]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv485]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv487]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv490]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv492]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv499]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv501]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv504]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv506]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv508]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv511]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv513]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv514]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv514]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv515]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv515]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv522]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv524]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv527]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv529]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv531]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv534]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv536]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv543]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv545]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv548]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv550]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv552]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv555]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv557]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv558]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv558]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv565]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv567]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv570]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv572]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv574]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv577]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv579]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv586]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv588]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv591]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv593]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv595]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv598]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv600]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv601]
> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv602]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv603]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv604]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv604]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv605]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv605]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 2 --> <1>[lv76]
bindSvars: venv = rest[lv25]-><1>[lv76]
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv609]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv609]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv610]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv613]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv613]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv613]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv613]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv613]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv613]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv616]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv616]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv616]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv616]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv616]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv616]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv618]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv619]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv619]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv626]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv628]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv631]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv633]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv635]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv638]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv640]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv647]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv649]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv652]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv654]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv656]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv659]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv661]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv662]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv663]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv663]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv670]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv672]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv675]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv677]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv679]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv682]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv684]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv691]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv693]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv696]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv698]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv700]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv703]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv705]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv706]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv707]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv707]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv714]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv716]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv719]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv721]
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv723]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv726]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv728]
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv735]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv737]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv740]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv742]
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv744]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv747]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv749]
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv21] @ 3 --> <1.::.1.::.1>[lv613]
>> lookVar: left[lv22] @ 3 --> <1.::.1.::.0.1>[lv616]
>> lookVar: right[lv23] @ 3 --> <1.::.0.2>[lv609]
>> lookVar: x3[lv24] @ 3 --> <1.::.0.0.C5>[lv706]
bindSvars: venv = rest[lv21]-><1.::.1.::.1>[lv613], left[lv22]-><1.::.1.::.0.1>[lv616], right[lv23]-><1.::.0.2>[lv609], x3[lv24]-><1.::.0.0.C5>[lv706]
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv750]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv750]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv751]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv751]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv758]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv760]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv763]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv765]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv767]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv770]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv772]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv779]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv781]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv784]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv786]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv788]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv791]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv793]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv794]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv794]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv795]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv795]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv802]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv804]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv807]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv809]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv811]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv814]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv816]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv823]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv825]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv828]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv830]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv832]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv835]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv837]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv838]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv838]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv845]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv847]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv850]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv852]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv854]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv857]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv859]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv866]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv868]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv871]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv873]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv875]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv878]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv880]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv881]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv882]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv883]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv884]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv884]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv885]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv885]
> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv889]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv889]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv890]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv893]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv893]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv893]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv893]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv893]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv893]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv896]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv896]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv896]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv896]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv896]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv896]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv898]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv899]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv899]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv906]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv908]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv911]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv913]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv915]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv918]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv920]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv927]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv929]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv932]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv934]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv936]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv939]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv941]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv942]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv943]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv943]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv950]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv952]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv955]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv957]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv959]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv962]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv964]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv971]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv973]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv976]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv978]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv980]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv983]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv985]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv986]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv987]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv987]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv994]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv996]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv999]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1001]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1003]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1006]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1008]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1015]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1017]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1020]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1022]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1024]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1027]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1029]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1030]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1030]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1031]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1031]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1038]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1040]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1043]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1045]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1047]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1050]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1052]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1059]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1061]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1064]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1066]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1068]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1071]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1073]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1074]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1074]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1075]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1075]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1082]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1084]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1087]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1089]
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1091]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1094]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1096]
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1103]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1105]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1108]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1110]
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1112]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1115]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1117]
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 4 --> <1.::.1.::.1>[lv893]
>> lookVar: left[lv18] @ 4 --> <1.::.1.::.0.1>[lv896]
>> lookVar: right[lv19] @ 4 --> <1.::.0.2>[lv889]
>> lookVar: x4[lv20] @ 4 --> <1.::.0.0.C7>[lv1074]
bindSvars: venv = rest[lv17]-><1.::.1.::.1>[lv893], left[lv18]-><1.::.1.::.0.1>[lv896], right[lv19]-><1.::.0.2>[lv889], x4[lv20]-><1.::.0.0.C7>[lv1074]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1118]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1118]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1125]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1127]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1130]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1132]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1134]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1137]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1139]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1146]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1148]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1151]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1153]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1155]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1158]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1160]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1161]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1162]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1163]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1164]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1164]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1165]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1165]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv1169]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv1169]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv1170]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv1173]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv1173]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv1173]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv1173]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv1173]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv1173]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv1176]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv1176]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv1176]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv1176]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv1176]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv1176]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1178]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1179]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1179]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1186]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1188]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1191]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1193]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1195]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1198]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1200]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1207]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1209]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1212]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1214]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1216]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1219]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1221]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1222]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1223]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1223]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1230]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1232]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1235]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1237]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1239]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1242]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1244]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1251]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1253]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1256]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1258]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1260]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1263]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1265]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1266]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1267]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1267]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1274]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1276]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1279]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1281]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1283]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1286]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1288]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1295]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1297]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1300]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1302]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1304]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1307]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1309]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1310]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1310]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1311]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1318]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1320]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1323]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1325]
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1327]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1330]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1332]
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 5 --> <1.::.1.::.1>[lv1173]
>> lookVar: left[lv13] @ 5 --> <1.::.1.::.0.1>[lv1176]
>> lookVar: prec1[lv14] @ 5 --> <1.::.1.::.0.0.C2>[lv1311]
>> lookVar: right[lv15] @ 5 --> <1.::.0.2>[lv1169]
>> lookVar: x5[lv16] @ 5 --> <1.::.0.0.C6>[lv1310]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1173], left[lv13]-><1.::.1.::.0.1>[lv1176], prec1[lv14]-><1.::.1.::.0.0.C2>[lv1311], right[lv15]-><1.::.0.2>[lv1169], x5[lv16]-><1.::.0.0.C6>[lv1310]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1339]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1341]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1344]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1346]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1348]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1351]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1353]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1354]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1354]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1355]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1355]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1362]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1364]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1367]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1369]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1371]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1374]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1376]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1383]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1385]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1388]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1390]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1392]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1395]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1397]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1398]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1398]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1405]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1407]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1410]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1412]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1414]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1417]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1419]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1426]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1428]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1431]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1433]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1435]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1438]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1440]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1441]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1442]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1443]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1444]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1444]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1445]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1445]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv1449]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv1449]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv1450]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv1453]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv1453]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv1453]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv1453]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv1453]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv1453]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv1456]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv1456]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv1456]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv1456]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv1456]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv1456]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1458]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1459]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1459]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1466]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1468]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1471]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1473]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1475]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1478]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1480]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1487]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1489]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1492]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1494]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1496]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1499]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1501]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1502]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1503]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1503]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1510]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1512]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1515]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1517]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1519]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1522]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1524]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1531]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1533]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1536]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1538]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1540]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1543]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1545]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1546]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1547]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1547]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1554]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1556]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1559]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1561]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1563]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1566]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1568]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1575]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1577]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1580]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1582]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1584]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1587]
>> genNode:OR: 16, 0
> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1589]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1590]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1590]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1591]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1591]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1598]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1600]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1603]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1605]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1607]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1610]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1612]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1619]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1621]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1624]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1626]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1628]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1631]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1633]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1634]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1634]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1635]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1635]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1642]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1644]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1647]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1649]
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1651]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1654]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1656]
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1663]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1665]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1668]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1670]
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1672]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1675]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1677]
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 6 --> <1.::.1.::.1>[lv1453]
>> lookVar: left[lv9] @ 6 --> <1.::.1.::.0.1>[lv1456]
>> lookVar: right[lv10] @ 6 --> <1.::.0.2>[lv1449]
>> lookVar: x6[lv11] @ 6 --> <1.::.0.0.C7>[lv1634]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv1453], left[lv9]-><1.::.1.::.0.1>[lv1456], right[lv10]-><1.::.0.2>[lv1449], x6[lv11]-><1.::.0.0.C7>[lv1634]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1678]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1678]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1685]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1687]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1690]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1692]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1694]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1697]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1699]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1706]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1708]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1711]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1713]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1715]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1718]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1720]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1721]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1722]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1723]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1724]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1724]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1725]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1725]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv1729]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv1729]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv1730]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv1733]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv1733]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv1733]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv1733]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv1733]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv1733]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv1736]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv1736]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv1736]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv1736]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv1736]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv1736]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv1738]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1739]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1739]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1746]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1748]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1751]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1753]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1755]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1758]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1760]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1767]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1769]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1772]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1774]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1776]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1779]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1781]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv1782]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1783]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1783]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1790]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1792]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1795]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1797]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1799]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1802]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1804]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1811]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1813]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1816]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1818]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1820]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1823]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1825]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv1826]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1827]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1827]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1834]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1836]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1839]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1841]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1843]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1846]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1848]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1855]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1857]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1860]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1862]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1864]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1867]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1869]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv1870]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv1870]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1871]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1871]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1878]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1880]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1883]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1885]
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1887]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1890]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1892]
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1899]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1901]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1904]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1906]
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1908]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1911]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1913]
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 7 --> <1.::.1.::.1>[lv1733]
>> lookVar: left[lv5] @ 7 --> <1.::.1.::.0.1>[lv1736]
>> lookVar: right[lv6] @ 7 --> <1.::.0.2>[lv1729]
>> lookVar: x7[lv7] @ 7 --> <1.::.0.0.C6>[lv1870]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1733], left[lv5]-><1.::.1.::.0.1>[lv1736], right[lv6]-><1.::.0.2>[lv1729], x7[lv7]-><1.::.0.0.C6>[lv1870]
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv1914]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv1914]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1915]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1915]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1922]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1924]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1927]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1929]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1931]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1934]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1936]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1943]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1945]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1948]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1950]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1952]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1955]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1957]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv1958]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv1958]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1965]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1967]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1970]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1972]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1974]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1977]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1979]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1986]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1988]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1991]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1993]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv1995]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1998]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2000]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv2001]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv2002]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv2003]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv2004]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv2004]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv2005]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv2005]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: right[lv36], 0 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv29], 1 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv23], 3 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv19], 4 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv15], 5 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv10], 6 --> <1.::.0.2>[lv2009]
VarEnvMC.bindVar: right[lv6], 7 --> <1.::.0.2>[lv2009]
>> genNode:VARS: 4, 7
>> bindPatVars: |vars| = 7, |asvars| = 0
VarEnvMC.bindVar: left1[lv30], 1 --> <1.::.0.1>[lv2010]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: rest[lv26], 1 --> <1.::.1.::.1>[lv2013]
VarEnvMC.bindVar: rest[lv21], 3 --> <1.::.1.::.1>[lv2013]
VarEnvMC.bindVar: rest[lv17], 4 --> <1.::.1.::.1>[lv2013]
VarEnvMC.bindVar: rest[lv12], 5 --> <1.::.1.::.1>[lv2013]
VarEnvMC.bindVar: rest[lv8], 6 --> <1.::.1.::.1>[lv2013]
VarEnvMC.bindVar: rest[lv4], 7 --> <1.::.1.::.1>[lv2013]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 30, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
VarEnvMC.bindVar: left2[lv27], 1 --> <1.::.1.::.0.1>[lv2016]
VarEnvMC.bindVar: left[lv22], 3 --> <1.::.1.::.0.1>[lv2016]
VarEnvMC.bindVar: left[lv18], 4 --> <1.::.1.::.0.1>[lv2016]
VarEnvMC.bindVar: left[lv13], 5 --> <1.::.1.::.0.1>[lv2016]
VarEnvMC.bindVar: left[lv9], 6 --> <1.::.1.::.0.1>[lv2016]
VarEnvMC.bindVar: left[lv5], 7 --> <1.::.1.::.0.1>[lv2016]
>> genNode:OR: 28, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv2018]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2019]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2019]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2026]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2028]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2031]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2033]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2035]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2038]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2040]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2047]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2049]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2052]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2054]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2056]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2059]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2061]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv2062]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2063]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2063]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2070]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2072]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2075]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2077]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2079]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2082]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2084]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2091]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2093]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2096]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2098]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2100]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2103]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2105]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv2106]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2107]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2107]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2114]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2116]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2119]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2121]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2123]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2126]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2128]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2135]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2137]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2140]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2142]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2144]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2147]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2149]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv2150]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv2150]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2151]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2151]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2158]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2160]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2163]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2165]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2167]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2170]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2172]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2179]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2181]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2184]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2186]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2188]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2191]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2193]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv2194]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv2194]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2195]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2195]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2202]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2204]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2207]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2209]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2211]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2214]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2216]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2223]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2225]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2228]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2230]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2232]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2235]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2237]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv28], 1 --> <1.::.1.::.0.0.C2>[lv2238]
VarEnvMC.bindVar: prec1[lv14], 5 --> <1.::.1.::.0.0.C2>[lv2238]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2245]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2247]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2250]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2252]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2254]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2257]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2259]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv35], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2266]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2268]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2271]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2273]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv32], 0 --> <1.::.1.::.1.::.1.::.1>[lv2275]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv33], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2278]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv34], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2280]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv37], 0 --> <1.::.0.0.C1>[lv2281]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv31], 1 --> <1.::.0.0.C4>[lv2282]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv24], 3 --> <1.::.0.0.C5>[lv2283]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x5[lv16], 5 --> <1.::.0.0.C6>[lv2284]
VarEnvMC.bindVar: x7[lv7], 7 --> <1.::.0.0.C6>[lv2284]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv20], 4 --> <1.::.0.0.C7>[lv2285]
VarEnvMC.bindVar: x6[lv11], 6 --> <1.::.0.0.C7>[lv2285]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
<< genMatch
<< matchComp
<< genMatch
<< matchComp
structure Y :
  sig
  datatype svalue
    = C0
  | C1 of unit
  | C2 of unit
  | C3 of unit
  | C4 of unit
  | C5 of unit
  | C6 of unit
  | C7 of unit
  type spp = svalue * int * int
  type stack = spp list
  val actions : int * stack -> int
end
