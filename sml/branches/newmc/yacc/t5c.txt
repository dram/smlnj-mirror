- use "t5c.sml";
transVB:pat = ittransVB:exp = use "t5c.sml"
[opening t5c.sml]
>> matchComp
<< makeAndor
andor:
<> AND 2 {0} {}
   <0> VARS 0 (state,0) {0}
   <1> VARS 1 (stack,0) {0}
>> decisionTree: andor ID = 2, numRules = 1
** decisionTree: intialOrNodes = []
>> makeDecisionTree: survivors = [0]; orNodes = []
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
<< decisionTree: ruleCounts = [1]
<< decisionTree
dectree:
DLEAF 0
>> genMatch
** genMatch: ruleCounts: [1], length rules: 1
multirules = []
>> genNode:AND: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: stack[lv2], 0 --> <1>[lv27]
>> genNode:VARS: 0, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: state[lv3], 0 --> <0>[lv28]
>> bindSVars
>> lookVar: stack[lv2] @ 0 --> <1>[lv27]
>> lookVar: state[lv3] @ 0 --> <0>[lv28]
bindSvars: venv = stack[lv2]-><1>[lv27], state[lv3]-><0>[lv28]
<< bindSvar
>> transExp: CASEexp
>> matchComp
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 32; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 1; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 33; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 26; |bind| = 1
<< makeAndor
andor:
<> AND 26 {0,1,2,3,4} {5}
   <0> OR 0 {0,1,2,3,4} {5}
      I0 LEAF {0} {5}
      I1 LEAF {1} {5}
      I2 LEAF {2} {5}
      I3 LEAF {3} {5}
      I4 LEAF {4} {5}
   <1> OR 1 {0,1,3,4} {2,5}
      ::
      <1.::> AND 25 {0,1,3,4} {2,5}
         <1.::.0> AND 6 {0,1,3,4} {2,5}
            <1.::.0.0> OR 2 {0,1,3,4} {2,5}
               C1 <1.::.0.0.C1> VARS 3 (x0a,0) {0,2,5}
               C4 <1.::.0.0.C4> VARS 27 (x1a,1) {1,2,5}
               C5 <1.::.0.0.C5> VARS 33 (x3,3) (x4,4) {2,3,4,5}
            <1.::.0.1> VARS 4 (%WILD%,0) (left1,1) (%WILD%,3) (%WILD%,4) {0,1,2,3,4,5}
            <1.::.0.2> VARS 5 (right,0) (right,1) (right,3) (right,4) {0,1,2,3,4,5}
         <1.::.1> OR 7 {0,1,3,4} {2,5}
            ::
            <1.::.1.::> AND 24 {0,1,3,4} {2,5}
               <1.::.1.::.0> AND 32 {1,3,4} {0,2,5}
                  <1.::.1.::.0.0> OR 28 {1} {0,2,3,4,5}
                     C2 <1.::.1.::.0.0.C2> VARS 29 (x1b,1) {0,1,2,3,4,5}
                  <1.::.1.::.0.1> VARS 30 (left2,1) (left,3) (left,4) {0,1,2,3,4,5}
                  <1.::.1.::.0.2> VARS 31 (%WILD%,1) (%WILD%,3) (%WILD%,4) {0,1,2,3,4,5}
               <1.::.1.::.1> OR 9 {0} {1,2,3,4,5}
                  ::
                  <1.::.1.::.1.::> AND 23 {0} {1,2,3,4,5}
                     <1.::.1.::.1.::.0> AND 14 {0} {1,2,3,4,5}
                        <1.::.1.::.1.::.0.0> OR 10 {0} {1,2,3,4,5}
                           C2
                           <1.::.1.::.1.::.0.0.C2> VARS 11 (x0b,0) {0,1,2,3,4,5}
                        <1.::.1.::.1.::.0.1> VARS 12 (%WILD%,0) {0,1,2,3,4,5}
                        <1.::.1.::.1.::.0.2> VARS 13 (%WILD%,0) {0,1,2,3,4,5}
                     <1.::.1.::.1.::.1> OR 15 {0} {1,2,3,4,5}
                        ::
                        <1.::.1.::.1.::.1.::> AND 22 {0} {1,2,3,4,5}
                           <1.::.1.::.1.::.1.::.0> AND 20 {0} {1,2,3,4,5}
                              <1.::.1.::.1.::.1.::.0.0> OR 16 {0} {1,2,3,4,5}
                                 C3
                                 <1.::.1.::.1.::.1.::.0.0.C3> VARS 17 (x0c,0) {0,1,2,3,4,5}
                              <1.::.1.::.1.::.1.::.0.1> VARS 18 (left,0) {0,1,2,3,4,5}
                              <1.::.1.::.1.::.1.::.0.2> VARS 19 (%WILD%,0) {0,1,2,3,4,5}
                           <1.::.1.::.1.::.1.::.1> VARS 21 (rest,0) {0,1,2,3,4,5}
>> decisionTree: andor ID = 26, numRules = 6
** decisionTree: intialOrNodes = [0,1]
>> makeDecisionTree: survivors = [0,1,2,3,4,5]; orNodes = [0,1]
** makeDecisionTree[SOME(OR)]: best relevant = 0
** andorToDecTree: id = ~1
  path = <0.I0>
  live = [0,5]
  variantSurvivors = [0,5]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [0,5]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [0,5]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [0,5]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [0,5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [0,5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [10,28,15]
>> makeDecisionTree: survivors = [0,5]; orNodes = [10,28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [28,15]
>> makeDecisionTree: survivors = [0,5]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [16,28]
>> makeDecisionTree: survivors = [0,5]; orNodes = [16,28]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [0,5]
  variantCandidates = [28]
>> makeDecisionTree: survivors = [0,5]; orNodes = [28]
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 3
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 4
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 5
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 9 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 13
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 15
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 16
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 17
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 18
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 19
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 20
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 21
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 22
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 23
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 24
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 25
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 26
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 27
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 28
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 29
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 30
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 31
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 32
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 33
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 34
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 35
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 36
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 37
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 38
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 39
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 40
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 41
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 42
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 43
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 44
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 45
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 46
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 47
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 48
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 49
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 50
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 51
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 52
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 53
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 54
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 55
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 56
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 57
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 58
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 59
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I1>
  live = [1,5]
  variantSurvivors = [1,5]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [1,5]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [1,5]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [1,5]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [1,5]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [1,5]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 60
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 61
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 62
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 63
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 64
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 65
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 66
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 67
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 68
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 69
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 70
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 71
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 72
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 73
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [1,5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [1,5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [1,5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [1,5]; orNodes = [9]
<< incrementRuleCount: 1 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 74
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 75
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 76
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 77
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 78
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 79
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 80
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 81
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 82
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 83
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 84
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 85
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 86
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 87
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 88
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 89
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 90
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 91
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 92
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 93
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 94
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 95
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 96
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 97
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 98
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 99
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 100
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 101
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 102
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 103
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 104
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 105
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 106
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 107
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 108
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 109
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 110
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 111
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 112
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 113
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I2>
  live = [2,5]
  variantSurvivors = [2,5]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [2,5]; orNodes = [1]
<< incrementRuleCount: 2 to 1
<< makeDecisionTree: NO relevant
** andorToDecTree: id = ~1
  path = <0.I3>
  live = [3,5]
  variantSurvivors = [3,5]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [3,5]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [3,5]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [3,5]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 114
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 115
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 116
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 117
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 118
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 119
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 120
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 121
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 122
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 123
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 124
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 125
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 126
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 127
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 128
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 129
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 130
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 131
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 132
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 133
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 134
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 135
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 136
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 137
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 138
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 139
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 140
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 141
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [3,5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [3,5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [3,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,5]
>> makeDecisionTree: survivors = [3,5]; orNodes = []
<< incrementRuleCount: 3 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 142
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 143
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 144
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 145
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 146
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 147
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 148
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 149
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 150
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 151
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 152
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 153
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 154
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 155
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 156
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 157
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 158
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 159
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 160
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I4>
  live = [4,5]
  variantSurvivors = [4,5]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [4,5]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [4,5]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [4,5]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 161
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 162
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 163
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 164
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 165
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 166
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 167
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 168
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 169
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 170
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 171
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 172
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 173
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 174
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 175
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 176
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 177
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 178
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 179
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 180
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 181
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 182
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 183
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 184
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 185
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 186
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 187
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 188
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4,5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4,5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [4,5]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,5]
>> makeDecisionTree: survivors = [4,5]; orNodes = []
<< incrementRuleCount: 4 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 189
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 190
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 191
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 192
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 193
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 194
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 195
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 196
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 197
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 198
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 199
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 200
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 201
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 202
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 203
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 204
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 205
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 206
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 207
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
defaultOp: id = 0, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [5]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 208
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 209
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 210
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 211
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 212
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 213
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 214
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 215
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 216
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 217
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 218
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 219
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 220
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 221
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 222
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 223
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 224
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 225
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 226
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 227
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 228
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 229
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 230
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 231
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 232
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 233
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 234
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 235
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 236
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 237
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 238
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 239
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 240
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 241
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 242
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 243
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 244
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 245
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 246
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 247
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 248
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 249
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 250
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 251
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 252
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 253
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 254
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 255
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 256
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 257
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 258
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 259
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 260
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 261
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 262
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 263
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 264
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 265
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4,5]
  variantSurvivors = [5]
  variantCandidates = []
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 266
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 267
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [5]
>> makeDecisionTree: survivors = [5]; orNodes = []
<< incrementRuleCount: 5 to 268
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
<< makeDecisionTree: 0 relevant
<< decisionTree: ruleCounts = [1,1,1,14,14,268]
<< decisionTree
dectree:
CHOICE <0>
  I0
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.1>
          ::
          CHOICE <1.::.1.::.1.::.0.0>
            C2
            CHOICE <1.::.1.::.1.::.1>
              ::
              CHOICE <1.::.1.::.1.::.1.::.0.0>
                C3 DLEAF 0
                * CHOICE <1.::.1.::.0.0>
                  C2 DLEAF 5
                  * DLEAF 5
              * CHOICE <1.::.1.::.0.0>
                C2 DLEAF 5
                * DLEAF 5
            *
            CHOICE <1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
          * CHOICE <1.::.1.::.0.0>
            C2 DLEAF 5
            * DLEAF 5
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
      * CHOICE <1.::.0.0>
        C1 DLEAF 5
        C4 DLEAF 5
        C5 DLEAF 5
        * DLEAF 5
    * DLEAF 5
  I1
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C4
        CHOICE <1.::.1.::.0.0>
          C2 DLEAF 1
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
      * CHOICE <1.::.0.0>
        C1 DLEAF 5
        C4 DLEAF 5
        C5 DLEAF 5
        * DLEAF 5
    * DLEAF 5
  I2 DLEAF 2
  I3
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
      * CHOICE <1.::.0.0>
        C1 DLEAF 5
        C4 DLEAF 5
        C5 DLEAF 5
        * DLEAF 5
    * DLEAF 5
  I4
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
      * CHOICE <1.::.0.0>
        C1 DLEAF 5
        C4 DLEAF 5
        C5 DLEAF 5
        * DLEAF 5
    * DLEAF 5
  *
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
      * CHOICE <1.::.0.0>
        C1 DLEAF 5
        C4 DLEAF 5
        C5 DLEAF 5
        * DLEAF 5
    * DLEAF 5
>> genMatch
** genMatch: ruleCounts: [1,1,1,14,14,268], length rules: 6
multirules = [3,4,5]
>> genNode:AND: 26, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv12], 2 --> <1>[lv44]
>> genNode:OR: 0, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: right[lv23], 0 --> <1.::.0.2>[lv49]
VarEnvMC.bindVar: right[lv16], 1 --> <1.::.0.2>[lv49]
VarEnvMC.bindVar: right[lv10], 3 --> <1.::.0.2>[lv49]
VarEnvMC.bindVar: right[lv6], 4 --> <1.::.0.2>[lv49]
>> genNode:VARS: 4, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left1[lv17], 1 --> <1.::.0.1>[lv50]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: rest[lv13], 1 --> <1.::.1.::.1>[lv53]
VarEnvMC.bindVar: rest[lv8], 3 --> <1.::.1.::.1>[lv53]
VarEnvMC.bindVar: rest[lv4], 4 --> <1.::.1.::.1>[lv53]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
>> genNode:VARS: 30, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left2[lv14], 1 --> <1.::.1.::.0.1>[lv56]
VarEnvMC.bindVar: left[lv9], 3 --> <1.::.1.::.0.1>[lv56]
VarEnvMC.bindVar: left[lv5], 4 --> <1.::.1.::.0.1>[lv56]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv58]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv65]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv67]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv70]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv72]
>> bindSVars
>> lookVar: rest[lv19] @ 0 --> <1.::.1.::.1.::.1.::.1>[lv67]
>> lookVar: left[lv20] @ 0 --> <1.::.1.::.1.::.1.::.0.1>[lv70]
>> lookVar: x0c[lv21] @ 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv72]
>> lookVar: x0b[lv22] @ 0 --> <1.::.1.::.1.::.0.0.C2>[lv65]
>> lookVar: right[lv23] @ 0 --> <1.::.0.2>[lv49]
>> lookVar: x0a[lv24] @ 0 --> <1.::.0.0.C1>[lv58]
bindSvars: venv = rest[lv19]-><1.::.1.::.1.::.1.::.1>[lv67], left[lv20]-><1.::.1.::.1.::.1.::.0.1>[lv70], x0c[lv21]-><1.::.1.::.1.::.1.::.0.0.C3>[lv72], x0b[lv22]-><1.::.1.::.1.::.0.0.C2>[lv65], right[lv23]-><1.::.0.2>[lv49], x0a[lv24]-><1.::.0.0.C1>[lv58]
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv73]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv74]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv75]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv77]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv80]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv82]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv84]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv87]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv89]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv90]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv91]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv92]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv99]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv101]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv104]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv106]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv108]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv111]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv113]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv120]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv122]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv125]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv127]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv129]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv132]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv134]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv135]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv135]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv136]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv143]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv145]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv148]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv150]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv152]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv155]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv157]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv164]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv166]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv169]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv171]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv173]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv176]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv178]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv179]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv186]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv188]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv191]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv193]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv195]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv198]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv200]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv207]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv209]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv212]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv214]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv216]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv219]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv221]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv222]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv223]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv224]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv224]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: right[lv23], 0 --> <1.::.0.2>[lv228]
VarEnvMC.bindVar: right[lv16], 1 --> <1.::.0.2>[lv228]
VarEnvMC.bindVar: right[lv10], 3 --> <1.::.0.2>[lv228]
VarEnvMC.bindVar: right[lv6], 4 --> <1.::.0.2>[lv228]
>> genNode:VARS: 4, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left1[lv17], 1 --> <1.::.0.1>[lv229]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: rest[lv13], 1 --> <1.::.1.::.1>[lv232]
VarEnvMC.bindVar: rest[lv8], 3 --> <1.::.1.::.1>[lv232]
VarEnvMC.bindVar: rest[lv4], 4 --> <1.::.1.::.1>[lv232]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
>> genNode:VARS: 30, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left2[lv14], 1 --> <1.::.1.::.0.1>[lv235]
VarEnvMC.bindVar: left[lv9], 3 --> <1.::.1.::.0.1>[lv235]
VarEnvMC.bindVar: left[lv5], 4 --> <1.::.1.::.0.1>[lv235]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv237]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv238]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv245]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv247]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv250]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv252]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv254]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv257]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv259]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv266]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv268]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv271]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv273]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv275]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv278]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv280]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv281]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv282]
>> bindSVars
>> lookVar: rest[lv13] @ 1 --> <1.::.1.::.1>[lv232]
>> lookVar: left2[lv14] @ 1 --> <1.::.1.::.0.1>[lv235]
>> lookVar: x1b[lv15] @ 1 --> <1.::.1.::.0.0.C2>[lv282]
>> lookVar: right[lv16] @ 1 --> <1.::.0.2>[lv228]
>> lookVar: left1[lv17] @ 1 --> <1.::.0.1>[lv229]
>> lookVar: x1a[lv18] @ 1 --> <1.::.0.0.C4>[lv281]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv232], left2[lv14]-><1.::.1.::.0.1>[lv235], x1b[lv15]-><1.::.1.::.0.0.C2>[lv282], right[lv16]-><1.::.0.2>[lv228], left1[lv17]-><1.::.0.1>[lv229], x1a[lv18]-><1.::.0.0.C4>[lv281]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv289]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv291]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv294]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv296]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv298]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv301]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv303]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv304]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv304]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv305]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv312]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv314]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv317]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv319]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv321]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv324]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv326]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv333]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv335]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv338]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv340]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv342]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv345]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv347]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv348]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv355]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv357]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv360]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv362]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv364]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv367]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv369]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv376]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv378]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv381]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv383]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv385]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv388]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv390]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv391]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv392]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv393]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv393]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 2 --> <1>[lv44]
bindSvars: venv = rest[lv12]-><1>[lv44]
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: right[lv23], 0 --> <1.::.0.2>[lv397]
VarEnvMC.bindVar: right[lv16], 1 --> <1.::.0.2>[lv397]
VarEnvMC.bindVar: right[lv10], 3 --> <1.::.0.2>[lv397]
VarEnvMC.bindVar: right[lv6], 4 --> <1.::.0.2>[lv397]
>> genNode:VARS: 4, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left1[lv17], 1 --> <1.::.0.1>[lv398]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: rest[lv13], 1 --> <1.::.1.::.1>[lv401]
VarEnvMC.bindVar: rest[lv8], 3 --> <1.::.1.::.1>[lv401]
VarEnvMC.bindVar: rest[lv4], 4 --> <1.::.1.::.1>[lv401]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
>> genNode:VARS: 30, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left2[lv14], 1 --> <1.::.1.::.0.1>[lv404]
VarEnvMC.bindVar: left[lv9], 3 --> <1.::.1.::.0.1>[lv404]
VarEnvMC.bindVar: left[lv5], 4 --> <1.::.1.::.0.1>[lv404]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv406]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv407]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv414]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv416]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv419]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv421]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv423]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv426]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv428]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv435]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv437]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv440]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv442]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv444]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv447]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv449]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv450]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv451]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv458]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv460]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv463]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv465]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv467]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv470]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv472]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv479]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv481]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv484]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv486]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv488]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv491]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv493]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv494]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv494]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv495]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv502]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv504]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv507]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv509]
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv511]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv514]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv516]
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv523]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv525]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv528]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv530]
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv532]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv535]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv537]
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 3 --> <1.::.1.::.1>[lv401]
>> lookVar: left[lv9] @ 3 --> <1.::.1.::.0.1>[lv404]
>> lookVar: right[lv10] @ 3 --> <1.::.0.2>[lv397]
>> lookVar: x3[lv11] @ 3 --> <1.::.0.0.C5>[lv494]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv401], left[lv9]-><1.::.1.::.0.1>[lv404], right[lv10]-><1.::.0.2>[lv397], x3[lv11]-><1.::.0.0.C5>[lv494]
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv538]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv545]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv547]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv550]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv552]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv554]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv557]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv559]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv566]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv568]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv571]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv573]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv575]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv578]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv580]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv581]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv582]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv583]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv583]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: right[lv23], 0 --> <1.::.0.2>[lv587]
VarEnvMC.bindVar: right[lv16], 1 --> <1.::.0.2>[lv587]
VarEnvMC.bindVar: right[lv10], 3 --> <1.::.0.2>[lv587]
VarEnvMC.bindVar: right[lv6], 4 --> <1.::.0.2>[lv587]
>> genNode:VARS: 4, 4
> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left1[lv17], 1 --> <1.::.0.1>[lv588]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: rest[lv13], 1 --> <1.::.1.::.1>[lv591]
VarEnvMC.bindVar: rest[lv8], 3 --> <1.::.1.::.1>[lv591]
VarEnvMC.bindVar: rest[lv4], 4 --> <1.::.1.::.1>[lv591]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
>> genNode:VARS: 30, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left2[lv14], 1 --> <1.::.1.::.0.1>[lv594]
VarEnvMC.bindVar: left[lv9], 3 --> <1.::.1.::.0.1>[lv594]
VarEnvMC.bindVar: left[lv5], 4 --> <1.::.1.::.0.1>[lv594]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv596]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv597]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv604]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv606]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv609]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv611]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv613]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv616]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv618]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv625]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv627]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv630]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv632]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv634]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv637]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv639]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv640]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv641]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv648]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv650]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv653]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv655]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv657]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv660]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv662]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv669]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv671]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv674]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv676]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv678]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv681]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv683]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv684]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv684]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv685]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv692]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv694]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv697]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv699]
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv701]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv704]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv706]
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv713]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv715]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv718]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv720]
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv722]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv725]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv727]
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 4 --> <1.::.1.::.1>[lv591]
>> lookVar: left[lv5] @ 4 --> <1.::.1.::.0.1>[lv594]
>> lookVar: right[lv6] @ 4 --> <1.::.0.2>[lv587]
>> lookVar: x4[lv7] @ 4 --> <1.::.0.0.C5>[lv684]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv591], left[lv5]-><1.::.1.::.0.1>[lv594], right[lv6]-><1.::.0.2>[lv587], x4[lv7]-><1.::.0.0.C5>[lv684]
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv728]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv735]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv737]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv740]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv742]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv744]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv747]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv749]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv756]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv758]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv761]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv763]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv765]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv768]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv770]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv771]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv772]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv773]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv773]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: right[lv23], 0 --> <1.::.0.2>[lv777]
VarEnvMC.bindVar: right[lv16], 1 --> <1.::.0.2>[lv777]
VarEnvMC.bindVar: right[lv10], 3 --> <1.::.0.2>[lv777]
VarEnvMC.bindVar: right[lv6], 4 --> <1.::.0.2>[lv777]
>> genNode:VARS: 4, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left1[lv17], 1 --> <1.::.0.1>[lv778]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: rest[lv13], 1 --> <1.::.1.::.1>[lv781]
VarEnvMC.bindVar: rest[lv8], 3 --> <1.::.1.::.1>[lv781]
VarEnvMC.bindVar: rest[lv4], 4 --> <1.::.1.::.1>[lv781]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
>> genNode:VARS: 30, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left2[lv14], 1 --> <1.::.1.::.0.1>[lv784]
VarEnvMC.bindVar: left[lv9], 3 --> <1.::.1.::.0.1>[lv784]
VarEnvMC.bindVar: left[lv5], 4 --> <1.::.1.::.0.1>[lv784]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv786]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv787]
> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv794]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv796]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv799]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv801]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv803]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv806]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv808]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv815]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv817]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv820]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv822]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv824]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv827]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv829]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv830]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv831]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv838]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv840]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv843]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv845]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv847]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv850]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv852]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv859]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv861]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv864]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv866]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv868]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv871]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv873]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv874]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv874]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv875]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv882]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv884]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv887]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv889]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv891]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv894]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv896]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv903]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv905]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv908]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv910]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv912]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv915]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv917]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv15], 1 --> <1.::.1.::.0.0.C2>[lv918]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv925]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv927]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv930]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv932]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv934]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv937]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv939]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv22], 0 --> <1.::.1.::.1.::.0.0.C2>[lv946]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv948]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv951]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv953]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv19], 0 --> <1.::.1.::.1.::.1.::.1>[lv955]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv20], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv958]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv21], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv960]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv24], 0 --> <1.::.0.0.C1>[lv961]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv18], 1 --> <1.::.0.0.C4>[lv962]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x3[lv11], 3 --> <1.::.0.0.C5>[lv963]
VarEnvMC.bindVar: x4[lv7], 4 --> <1.::.0.0.C5>[lv963]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
<< genMatch
<< matchComp
<< genMatch
<< matchComp
structure T5c :
  sig
  datatype svalue
    = C0 | C1 of unit | C2 of unit | C3 of unit | C4 of unit | C5 of unit
  type spp = svalue * int * int
  type stack = spp list
  val actions : int * stack -> int
end
