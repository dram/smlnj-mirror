- use "t5d.sml";
transVB:pat = ittransVB:exp = use "t5d.sml"
[opening t5d.sml]
>> matchComp
<< makeAndor
andor:
<> AND 2 {0} {}
   <0> VARS 0 (state,0) {0}
   <1> VARS 1 (stack,0) {0}
>> decisionTree: andor ID = 2, numRules = 1
** decisionTree: intialOrNodes = []
>> makeDecisionTree: survivors = [0]; orNodes = []
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
<< decisionTree: ruleCounts = [1]
<< decisionTree
dectree:
DLEAF 0
>> genMatch
** genMatch: ruleCounts: [1], length rules: 1
multirules = []
>> genNode:AND: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: stack[lv2], 0 --> <1>[lv48]
>> genNode:VARS: 0, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: state[lv3], 0 --> <0>[lv49]
>> bindSVars
>> lookVar: stack[lv2] @ 0 --> <1>[lv48]
>> lookVar: state[lv3] @ 0 --> <0>[lv49]
bindSvars: venv = stack[lv2]-><1>[lv48], state[lv3]-><0>[lv49]
<< bindSvar
>> transExp: CASEexp
>> matchComp
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 32; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 1; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 29; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 34; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 35; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 35; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 35; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 26; |bind| = 1
<< makeAndor
andor:
<> AND 26 {0,1,2,3,4,5,6,7,8,9} {10}
   <0> OR 0 {0,1,2,3,4,5,6,7,8,9} {10}
      I0 LEAF {0} {10}
      I1 LEAF {1} {10}
      I2 LEAF {2} {10}
      I3 LEAF {3} {10}
      I4 LEAF {4} {10}
      I5 LEAF {5} {10}
      I6 LEAF {6} {10}
      I7 LEAF {7} {10}
      I8 LEAF {8} {10}
      I9 LEAF {9} {10}
   <1> OR 1 {0,1,3,4,5,6,7,8,9} {2,10}
      ::
      <1.::> AND 25 {0,1,3,4,5,6,7,8,9} {2,10}
         <1.::.0> AND 6 {0,1,3,4,5,6,7,8,9} {2,10}
            <1.::.0.0> OR 2 {0,1,3,4,5,6,7,8,9} {2,10}
               C1 <1.::.0.0.C1> VARS 3 (x0a,0) {0,2,10}
               C4 <1.::.0.0.C4> VARS 27 (x1a,1) {1,2,10}
               C5 <1.::.0.0.C5> VARS 33 (x3,3) {2,3,10}
               C6
               <1.::.0.0.C6> VARS 35 (x5,5) (x7,7) (x8,8) (x9,9) {2,5,7,8,9,10}
               C7 <1.::.0.0.C7> VARS 34 (x4,4) (x6,6) {2,4,6,10}
            <1.::.0.1> VARS 4 (%WILD%,0) (left1,1) (%WILD%,3) (%WILD%,4)
            (%WILD%,5) (%WILD%,6) (%WILD%,7) (%WILD%,8) (%WILD%,9) {0,1,2,3,4,5,6,7,8,9,10}
            <1.::.0.2> VARS 5 (right,0) (right,1) (right,3) (right,4)
            (right,5) (right,6) (right,7) (right,8) (right,9) {0,1,2,3,4,5,6,7,8,9,10}
         <1.::.1> OR 7 {0,1,3,4,5,6,7,8,9} {2,10}
            ::
            <1.::.1.::> AND 24 {0,1,3,4,5,6,7,8,9} {2,10}
               <1.::.1.::.0> AND 32 {1,3,4,5,6,7,8,9} {0,2,10}
                  <1.::.1.::.0.0> OR 28 {1,5} {0,2,3,4,6,7,8,9,10}
                     C2
                     <1.::.1.::.0.0.C2> VARS 29 (x1b,1) (prec1,5) {0,1,2,3,4,5,6,7,8,9,10}
                  <1.::.1.::.0.1> VARS 30 (left2,1) (left,3) (left,4) (left,5)
                  (left,6) (left,7) (left,8) (left,9) {0,1,2,3,4,5,6,7,8,9,10}
                  <1.::.1.::.0.2> VARS 31 (%WILD%,1) (%WILD%,3) (%WILD%,4)
                  (%WILD%,5) (%WILD%,6) (%WILD%,7) (%WILD%,8) (%WILD%,9) {0,1,2,3,4,5,6,7,8,9,10}
               <1.::.1.::.1> OR 9 {0} {1,2,3,4,5,6,7,8,9,10}
                  ::
                  <1.::.1.::.1.::> AND 23 {0} {1,2,3,4,5,6,7,8,9,10}
                     <1.::.1.::.1.::.0> AND 14 {0} {1,2,3,4,5,6,7,8,9,10}
                        <1.::.1.::.1.::.0.0> OR 10 {0} {1,2,3,4,5,6,7,8,9,10}
                           C2
                           <1.::.1.::.1.::.0.0.C2> VARS 11 (x0b,0) {0,1,2,3,4,5,6,7,8,9,10}
                        <1.::.1.::.1.::.0.1> VARS 12 (%WILD%,0) {0,1,2,3,4,5,6,7,8,9,10}
                        <1.::.1.::.1.::.0.2> VARS 13 (%WILD%,0) {0,1,2,3,4,5,6,7,8,9,10}
                     <1.::.1.::.1.::.1> OR 15 {0} {1,2,3,4,5,6,7,8,9,10}
                        ::
                        <1.::.1.::.1.::.1.::> AND 22 {0} {1,2,3,4,5,6,7,8,9,10}
                           <1.::.1.::.1.::.1.::.0> AND 20 {0} {1,2,3,4,5,6,7,8,9,10}
                              <1.::.1.::.1.::.1.::.0.0> OR 16 {0} {1,2,3,4,5,6,7,8,9,10}
                                 C3
                                 <1.::.1.::.1.::.1.::.0.0.C3> VARS 17 (header1,0) {0,1,2,3,4,5,6,7,8,9,10}
                              <1.::.1.::.1.::.1.::.0.1> VARS 18 (left,0) {0,1,2,3,4,5,6,7,8,9,10}
                              <1.::.1.::.1.::.1.::.0.2> VARS 19 (%WILD%,0) {0,1,2,3,4,5,6,7,8,9,10}
                           <1.::.1.::.1.::.1.::.1> VARS 21 (rest,0) {0,1,2,3,4,5,6,7,8,9,10}
>> decisionTree: andor ID = 26, numRules = 11
** decisionTree: intialOrNodes = [0,1]
>> makeDecisionTree: survivors = [0,1,2,3,4,5,6,7,8,9,10]; orNodes = [0,1]
** makeDecisionTree[SOME(OR)]: best relevant = 0
** andorToDecTree: id = ~1
  path = <0.I0>
  live = [0,10]
  variantSurvivors = [0,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [0,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [0,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [0,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [0,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [0,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [28,10,15]
>> makeDecisionTree: survivors = [0,10]; orNodes = [28,10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [28,15]
>> makeDecisionTree: survivors = [0,10]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [28,16]
>> makeDecisionTree: survivors = [0,10]; orNodes = [28,16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [0,10]
  variantCandidates = [28]
>> makeDecisionTree: survivors = [0,10]; orNodes = [28]
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 3
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 4
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 5
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 9 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 13
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 15
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 16
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 17
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 18
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 19
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 20
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 21
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 22
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 23
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 24
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 25
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 26
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 27
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 28
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 29
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 30
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 31
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 32
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 33
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 34
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 35
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 36
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 37
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 38
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 39
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 40
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 41
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 42
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 43
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 44
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 45
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 46
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 47
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 48
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 49
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 50
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 51
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 52
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 53
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 54
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 55
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 56
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 57
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 58
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 59
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 60
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 61
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 62
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 63
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 64
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 65
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 66
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 67
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 68
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 69
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 70
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 71
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 72
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 73
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 74
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 75
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 76
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 77
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 78
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 79
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 80
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 81
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 82
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 83
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 84
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 85
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 86
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 87
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 88
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 89
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I1>
  live = [1,10]
  variantSurvivors = [1,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [1,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [1,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [1,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [1,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [1,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 90
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 91
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 92
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 93
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 94
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 95
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 96
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 97
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 98
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 99
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 100
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 101
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 102
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 103
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [1,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [1,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [1,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [1,10]; orNodes = [9]
<< incrementRuleCount: 1 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 104
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 105
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 106
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 107
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 108
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 109
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 110
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 111
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 112
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 113
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 114
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 115
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 116
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 117
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 118
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 119
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 120
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 121
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 122
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 123
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 124
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 125
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 126
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 127
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 128
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 129
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 130
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 131
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 132
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 133
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 134
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 135
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 136
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 137
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 138
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 139
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 140
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 141
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 142
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 143
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 144
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 145
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 146
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 147
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 148
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 149
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 150
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 151
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 152
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 153
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 154
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 155
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 156
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 157
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 158
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 159
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 160
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 161
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 162
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 163
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 164
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 165
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 166
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 167
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 168
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 169
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 170
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 171
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 172
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 173
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I2>
  live = [2,10]
  variantSurvivors = [2,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [2,10]; orNodes = [1]
<< incrementRuleCount: 2 to 1
<< makeDecisionTree: NO relevant
** andorToDecTree: id = ~1
  path = <0.I3>
  live = [3,10]
  variantSurvivors = [3,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [3,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [3,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [3,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 174
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 175
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 176
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 177
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 178
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 179
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 180
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 181
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 182
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 183
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 184
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 185
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 186
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 187
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 188
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 189
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 190
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 191
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 192
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 193
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 194
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 195
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 196
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 197
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 198
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 199
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 200
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 201
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [3,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [3,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [3,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [3,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,10]
>> makeDecisionTree: survivors = [3,10]; orNodes = []
<< incrementRuleCount: 3 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 202
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 203
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 204
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 205
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 206
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 207
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 208
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 209
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 210
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 211
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 212
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 213
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 214
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 215
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 216
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 217
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 218
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 219
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 220
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 221
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 222
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 223
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 224
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 225
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 226
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 227
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 228
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 229
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 230
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 231
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 232
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 233
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 234
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 235
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 236
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 237
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 238
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 239
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 240
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 241
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 242
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 243
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 244
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 245
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 246
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 247
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 248
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 249
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 250
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I4>
  live = [4,10]
  variantSurvivors = [4,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [4,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [4,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [4,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 251
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 252
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 253
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 254
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 255
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 256
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 257
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 258
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 259
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 260
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 261
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 262
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 263
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 264
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 265
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 266
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 267
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 268
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 269
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 270
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 271
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 272
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 273
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 274
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 275
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 276
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 277
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 278
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 279
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 280
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 281
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 282
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 283
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 284
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 285
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 286
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 287
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 288
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 289
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 290
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 291
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 292
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 293
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 294
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 295
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 296
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 297
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 298
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 299
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 300
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 301
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 302
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 303
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 304
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 305
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 306
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [4,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [4,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,10]
>> makeDecisionTree: survivors = [4,10]; orNodes = []
<< incrementRuleCount: 4 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 307
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 308
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 309
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 310
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 311
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 312
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 313
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 314
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 315
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 316
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 317
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 318
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 319
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 320
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 321
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 322
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 323
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 324
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 325
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 326
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 327
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I5>
  live = [5,10]
  variantSurvivors = [5,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [5,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [5,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [5,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 328
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 329
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 330
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 331
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 332
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 333
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 334
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 335
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 336
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 337
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 338
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 339
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 340
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 341
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 342
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 343
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 344
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 345
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 346
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 347
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 348
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 349
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 350
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 351
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 352
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 353
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 354
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 355
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 356
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 357
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 358
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 359
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 360
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 361
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 362
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 363
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 364
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 365
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 366
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 367
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 368
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 369
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [5,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5,10]
>> makeDecisionTree: survivors = [5,10]; orNodes = []
<< incrementRuleCount: 5 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 370
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 371
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 372
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 373
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 374
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 375
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 376
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 377
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 378
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 379
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 380
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 381
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 382
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 383
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 384
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 385
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 386
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 387
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 388
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 389
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 390
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 391
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 392
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 393
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 394
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 395
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 396
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 397
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 398
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 399
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 400
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 401
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 402
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 403
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 404
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 405
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 406
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 407
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 408
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 409
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 410
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 411
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I6>
  live = [6,10]
  variantSurvivors = [6,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [6,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [6,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [6,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 412
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 413
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 414
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 415
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 416
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 417
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 418
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 419
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 420
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 421
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 422
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 423
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 424
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 425
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 426
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 427
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 428
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 429
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 430
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 431
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 432
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 433
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 434
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 435
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 436
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 437
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 438
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 439
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 440
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 441
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 442
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 443
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 444
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 445
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 446
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 447
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 448
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 449
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 450
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 451
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 452
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 453
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 454
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 455
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 456
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 457
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 458
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 459
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 460
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 461
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 462
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 463
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 464
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 465
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 466
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 467
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [6,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [6,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6,10]
>> makeDecisionTree: survivors = [6,10]; orNodes = []
<< incrementRuleCount: 6 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 468
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 469
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 470
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 471
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 472
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 473
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 474
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 475
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 476
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 477
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 478
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 479
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 480
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 481
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 482
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 483
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 484
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 485
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 486
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 487
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 488
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I7>
  live = [7,10]
  variantSurvivors = [7,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [7,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [7,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [7,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 489
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 490
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 491
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 492
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 493
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 494
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 495
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 496
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 497
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 498
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 499
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 500
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 501
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 502
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 503
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 504
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 505
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 506
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 507
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 508
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 509
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 510
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 511
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 512
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 513
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 514
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 515
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 516
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 517
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 518
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 519
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 520
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 521
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 522
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 523
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 524
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 525
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 526
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 527
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 528
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 529
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 530
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [7,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [7,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [7,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [7,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [7,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [7,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [7,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [7,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [7,10]
>> makeDecisionTree: survivors = [7,10]; orNodes = []
<< incrementRuleCount: 7 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 531
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 532
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 533
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 534
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 535
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 536
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 537
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 538
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 539
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 540
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 541
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 542
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 543
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 544
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 545
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 546
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 547
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 548
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 549
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 550
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 551
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 552
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 553
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 554
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 555
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 556
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 557
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 558
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 559
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 560
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 561
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 562
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 563
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 564
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 565
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I8>
  live = [8,10]
  variantSurvivors = [8,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [8,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [8,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [8,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 566
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 567
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 568
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 569
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 570
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 571
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 572
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 573
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 574
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 575
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 576
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 577
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 578
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 579
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 580
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 581
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 582
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 583
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 584
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 585
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 586
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 587
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 588
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 589
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 590
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 591
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 592
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 593
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 594
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 595
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 596
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 597
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 598
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 599
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 600
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 601
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 602
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 603
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 604
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 605
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 606
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 607
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [8,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [8,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [8,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [8,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [8,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [8,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [8,10]
>> makeDecisionTree: survivors = [8,10]; orNodes = []
<< incrementRuleCount: 8 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 608
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 609
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 610
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 611
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 612
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 613
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 614
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 615
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 616
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 617
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 618
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 619
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 620
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 621
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 622
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 623
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 624
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 625
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 626
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 627
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 628
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 629
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 630
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 631
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 632
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 633
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 634
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 635
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 636
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 637
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 638
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 639
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 640
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 641
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 642
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I9>
  live = [9,10]
  variantSurvivors = [9,10]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [9,10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [9,10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [9,10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 643
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 644
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 645
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 646
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 647
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 648
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 649
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 650
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 651
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 652
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 653
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 654
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 655
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 656
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 657
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 658
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 659
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 660
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 661
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 662
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 663
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 664
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 665
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 666
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 667
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 668
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 669
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 670
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 671
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 672
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 673
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 674
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 675
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 676
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 677
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 678
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 679
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 680
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 681
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 682
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 683
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 684
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [9,10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [9,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [9,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [9,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [9,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [9,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [9,10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [9,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [9,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [9,10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [9,10]
  variantCandidates = []
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [9,10]
>> makeDecisionTree: survivors = [9,10]; orNodes = []
<< incrementRuleCount: 9 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 685
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 686
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 687
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 688
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 689
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 690
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 691
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 692
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 693
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 694
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 695
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 696
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 697
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 698
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 699
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 700
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 701
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 702
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 703
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 704
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 705
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 706
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 707
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 708
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 709
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 710
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 711
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 712
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 713
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 714
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 715
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 716
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 717
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 718
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 719
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
defaultOp: id = 0, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [10]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 720
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 721
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 722
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 723
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 724
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 725
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 726
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 727
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 728
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 729
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 730
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 731
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 732
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 733
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 734
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 735
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 736
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 737
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 738
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 739
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 740
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 741
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 742
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 743
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 744
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 745
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 746
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 747
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 748
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 749
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 750
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 751
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 752
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 753
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 754
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 755
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 756
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 757
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 758
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 759
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 760
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 761
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 762
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 763
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 764
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 765
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 766
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 767
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 768
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 769
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 770
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 771
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 772
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 773
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 774
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 775
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 776
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 777
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 778
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 779
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 780
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 781
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 782
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 783
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 784
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 785
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 786
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 787
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 788
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 789
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 790
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 791
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 792
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 793
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 794
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 795
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 796
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [10]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 797
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 798
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 799
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [10]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 800
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [10]
> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 801
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 802
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 803
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 804
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 805
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 806
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,7,8,9,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 807
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6,10]
  variantSurvivors = [10]
  variantCandidates = []
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 808
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 809
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [10]
>> makeDecisionTree: survivors = [10]; orNodes = []
<< incrementRuleCount: 10 to 810
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
<< makeDecisionTree: 0 relevant
<< decisionTree: ruleCounts = [1,1,1,14,14,7,14,14,14,14,810]
<< decisionTree
dectree:
CHOICE <0>
  I0
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.1>
          ::
          CHOICE <1.::.1.::.1.::.0.0>
            C2
            CHOICE <1.::.1.::.1.::.1>
              ::
              CHOICE <1.::.1.::.1.::.1.::.0.0>
                C3 DLEAF 0
                * CHOICE <1.::.1.::.0.0>
                  C2 DLEAF 10
                  * DLEAF 10
              * CHOICE <1.::.1.::.0.0>
                C2 DLEAF 10
                * DLEAF 10
            *
            CHOICE <1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
          * CHOICE <1.::.1.::.0.0>
            C2 DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I1
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2 DLEAF 1
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I2 DLEAF 2
  I3
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I4
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I5
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I6
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I7
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
            * DLEAF 7
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 7
                  * DLEAF 7
                * DLEAF 7
            * DLEAF 7
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I8
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 8
                  * DLEAF 8
                * DLEAF 8
            * DLEAF 8
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  I9
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 9
                  * DLEAF 9
                * DLEAF 9
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 9
                  * DLEAF 9
                * DLEAF 9
            * DLEAF 9
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 9
                  * DLEAF 9
                * DLEAF 9
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 9
                  * DLEAF 9
                * DLEAF 9
            * DLEAF 9
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
  *
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 10
                  * DLEAF 10
                * DLEAF 10
            * DLEAF 10
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 10
        C4 DLEAF 10
        C5 DLEAF 10
        C6 DLEAF 10
        C7 DLEAF 10
        * DLEAF 10
    * DLEAF 10
>> genMatch
** genMatch: ruleCounts: [1,1,1,14,14,7,14,14,14,14,810], length rules: 11
multirules = [3,4,5,6,7,8,9,10]
>> genNode:AND: 26, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv33], 2 --> <1>[lv96]
>> genNode:OR: 0, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv101]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv101]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv102]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv105]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv105]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv108]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv108]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv110]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv117]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv119]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv122]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv124]
>> bindSVars
>> lookVar: rest[lv40] @ 0 --> <1.::.1.::.1.::.1.::.1>[lv119]
>> lookVar: left[lv41] @ 0 --> <1.::.1.::.1.::.1.::.0.1>[lv122]
>> lookVar: header1[lv42] @ 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv124]
>> lookVar: x0b[lv43] @ 0 --> <1.::.1.::.1.::.0.0.C2>[lv117]
>> lookVar: right[lv44] @ 0 --> <1.::.0.2>[lv101]
>> lookVar: x0a[lv45] @ 0 --> <1.::.0.0.C1>[lv110]
bindSvars: venv = rest[lv40]-><1.::.1.::.1.::.1.::.1>[lv119], left[lv41]-><1.::.1.::.1.::.1.::.0.1>[lv122], header1[lv42]-><1.::.1.::.1.::.1.::.0.0.C3>[lv124], x0b[lv43]-><1.::.1.::.1.::.0.0.C2>[lv117], right[lv44]-><1.::.0.2>[lv101], x0a[lv45]-><1.::.0.0.C1>[lv110]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv125]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv125]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv126]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv126]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv127]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv127]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv129]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv132]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv134]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv136]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv139]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv141]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv142]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv142]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv143]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv144]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv144]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv151]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv153]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv156]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv158]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv160]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv163]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv165]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv172]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv174]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv177]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv179]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv181]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv184]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv186]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv187]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv188]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv188]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv195]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv197]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv200]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv202]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv204]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv207]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv209]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv216]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv218]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv221]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv223]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv225]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv228]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv230]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv231]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv231]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv231]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv231]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv232]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv232]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv239]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv241]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv244]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv246]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv248]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv251]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv253]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv260]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv262]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv265]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv267]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv269]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv272]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv274]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv275]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv275]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv276]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv276]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv283]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv285]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv288]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv290]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv292]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv295]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv297]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv304]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv306]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv309]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv311]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv313]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv316]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv318]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv319]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv319]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv326]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv328]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv331]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv333]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv335]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv338]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv340]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv347]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv349]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv352]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv354]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv356]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv359]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv361]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv362]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv363]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv364]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv365]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv365]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv365]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv365]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv366]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv366]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv370]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv370]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv371]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv374]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv374]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv377]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv377]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv379]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv380]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv380]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv387]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv389]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv392]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv394]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv396]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv399]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv401]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv408]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv410]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv413]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv415]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv417]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv420]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv422]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv423]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv424]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv424]
>> bindSVars
>> lookVar: rest[lv34] @ 1 --> <1.::.1.::.1>[lv374]
>> lookVar: left2[lv35] @ 1 --> <1.::.1.::.0.1>[lv377]
>> lookVar: x1b[lv36] @ 1 --> <1.::.1.::.0.0.C2>[lv424]
>> lookVar: right[lv37] @ 1 --> <1.::.0.2>[lv370]
>> lookVar: left1[lv38] @ 1 --> <1.::.0.1>[lv371]
>> lookVar: x1a[lv39] @ 1 --> <1.::.0.0.C4>[lv423]
bindSvars: venv = rest[lv34]-><1.::.1.::.1>[lv374], left2[lv35]-><1.::.1.::.0.1>[lv377], x1b[lv36]-><1.::.1.::.0.0.C2>[lv424], right[lv37]-><1.::.0.2>[lv370], left1[lv38]-><1.::.0.1>[lv371], x1a[lv39]-><1.::.0.0.C4>[lv423]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv431]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv433]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv436]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv438]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv440]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv443]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv445]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv446]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv447]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv447]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv454]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv456]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv459]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv461]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv463]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv466]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv468]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv475]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv477]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv480]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv482]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv484]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv487]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv489]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv490]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv490]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv490]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv490]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv491]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv491]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv498]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv500]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv503]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv505]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv507]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv510]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv512]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv519]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv521]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv524]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv526]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv528]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv531]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv533]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv534]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv534]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv535]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv535]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv542]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv544]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv547]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv549]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv551]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv554]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv556]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv563]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv565]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv568]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv570]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv572]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv575]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv577]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv578]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv578]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv585]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv587]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv590]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv592]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv594]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv597]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv599]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv606]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv608]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv611]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv613]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv615]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv618]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv620]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv621]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv622]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv623]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv624]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv624]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv624]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv624]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv625]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv625]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
>> lookVar: rest[lv33] @ 2 --> <1>[lv96]
bindSvars: venv = rest[lv33]-><1>[lv96]
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv629]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv629]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv630]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv633]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv633]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv636]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv636]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv638]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv639]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv639]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv646]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv648]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv651]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv653]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv655]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv658]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv660]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv667]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv669]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv672]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv674]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv676]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv679]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv681]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv682]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv683]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv683]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv690]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv692]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv695]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv697]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv699]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv702]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv704]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv711]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv713]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv716]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv718]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv720]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv723]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv725]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv726]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv727]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv727]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv734]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv736]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv739]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv741]
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv743]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv746]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv748]
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv755]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv757]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv760]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv762]
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv764]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv767]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv769]
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv29] @ 3 --> <1.::.1.::.1>[lv633]
>> lookVar: left[lv30] @ 3 --> <1.::.1.::.0.1>[lv636]
>> lookVar: right[lv31] @ 3 --> <1.::.0.2>[lv629]
>> lookVar: x3[lv32] @ 3 --> <1.::.0.0.C5>[lv726]
bindSvars: venv = rest[lv29]-><1.::.1.::.1>[lv633], left[lv30]-><1.::.1.::.0.1>[lv636], right[lv31]-><1.::.0.2>[lv629], x3[lv32]-><1.::.0.0.C5>[lv726]
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv770]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv770]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv770]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv770]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv771]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv771]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv778]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv780]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv783]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv785]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv787]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv790]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv792]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv799]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv801]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv804]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv806]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv808]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv811]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv813]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv814]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv814]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv815]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv815]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv822]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv824]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv827]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv829]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv831]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv834]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv836]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv843]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv845]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv848]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv850]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv852]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv855]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv857]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv858]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv858]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv865]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv867]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv870]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv872]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv874]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv877]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv879]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv886]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv888]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv891]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv893]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv895]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv898]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv900]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv901]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv902]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv903]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv904]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv904]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv904]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv904]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv905]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv905]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv909]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv909]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv910]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv913]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv913]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv916]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv916]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv918]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv919]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv919]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv926]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv928]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv931]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv933]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv935]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv938]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv940]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv947]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv949]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv952]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv954]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv956]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv959]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv961]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv962]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv963]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv963]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv970]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv972]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv975]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv977]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv979]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv982]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv984]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv991]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv993]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv996]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv998]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1000]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1003]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1005]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1006]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1007]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1007]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1014]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1016]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1019]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1021]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1023]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1026]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1028]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1035]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1037]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1040]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1042]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1044]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1047]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1049]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1050]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1050]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1050]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1050]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1051]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1051]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1058]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1060]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1063]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1065]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1067]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1070]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1072]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1079]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1081]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1084]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1086]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1088]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1091]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1093]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1094]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1094]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1095]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1095]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1102]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1104]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1107]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1109]
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1111]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1114]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1116]
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1123]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1125]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1128]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1130]
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1132]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1135]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1137]
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv25] @ 4 --> <1.::.1.::.1>[lv913]
>> lookVar: left[lv26] @ 4 --> <1.::.1.::.0.1>[lv916]
>> lookVar: right[lv27] @ 4 --> <1.::.0.2>[lv909]
>> lookVar: x4[lv28] @ 4 --> <1.::.0.0.C7>[lv1094]
bindSvars: venv = rest[lv25]-><1.::.1.::.1>[lv913], left[lv26]-><1.::.1.::.0.1>[lv916], right[lv27]-><1.::.0.2>[lv909], x4[lv28]-><1.::.0.0.C7>[lv1094]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1138]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1138]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1145]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1147]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1150]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1152]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1154]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1157]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1159]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1166]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1168]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1171]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1173]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1175]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1178]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1180]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1181]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1182]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1183]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1184]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1184]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1184]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1184]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1185]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1185]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv1189]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv1189]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv1190]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv1193]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv1193]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv1196]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv1196]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1198]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1199]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1199]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1206]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1208]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1211]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1213]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1215]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1218]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1220]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1227]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1229]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1232]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1234]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1236]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1239]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1241]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1242]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1243]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1243]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1250]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1252]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1255]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1257]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1259]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1262]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1264]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1271]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1273]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1276]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1278]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1280]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1283]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1285]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1286]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1287]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1287]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1294]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1296]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1299]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1301]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1303]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1306]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1308]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1315]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1317]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1320]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1322]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1324]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1327]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1329]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1330]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1330]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1330]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1330]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1331]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1338]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1340]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1343]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1345]
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1347]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1350]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1352]
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv20] @ 5 --> <1.::.1.::.1>[lv1193]
>> lookVar: left[lv21] @ 5 --> <1.::.1.::.0.1>[lv1196]
>> lookVar: prec1[lv22] @ 5 --> <1.::.1.::.0.0.C2>[lv1331]
>> lookVar: right[lv23] @ 5 --> <1.::.0.2>[lv1189]
>> lookVar: x5[lv24] @ 5 --> <1.::.0.0.C6>[lv1330]
bindSvars: venv = rest[lv20]-><1.::.1.::.1>[lv1193], left[lv21]-><1.::.1.::.0.1>[lv1196], prec1[lv22]-><1.::.1.::.0.0.C2>[lv1331], right[lv23]-><1.::.0.2>[lv1189], x5[lv24]-><1.::.0.0.C6>[lv1330]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1359]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1361]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1364]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1366]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1368]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1371]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1373]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1374]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1374]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1375]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1375]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1382]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1384]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1387]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1389]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1391]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1394]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1396]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1403]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1405]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1408]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1410]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1412]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1415]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1417]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1418]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1418]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1425]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1427]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1430]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1432]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1434]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1437]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1439]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1446]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1448]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1451]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1453]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1455]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1458]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1460]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1461]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1462]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1463]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1464]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1464]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1464]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1464]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1465]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1465]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv1469]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv1469]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv1470]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv1473]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv1473]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv1476]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv1476]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1478]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1479]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1479]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1486]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1488]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1491]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1493]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1495]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1498]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1500]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1507]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1509]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1512]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1514]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1516]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1519]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1521]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1522]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1523]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1523]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1530]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1532]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1535]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1537]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1539]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1542]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1544]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1551]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1553]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1556]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1558]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1560]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1563]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1565]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1566]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1567]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1567]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1574]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1576]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1579]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1581]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1583]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1586]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1588]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1595]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1597]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1600]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1602]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1604]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1607]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1609]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1610]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1610]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1610]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1610]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1611]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1611]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1618]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1620]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1623]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1625]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1627]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1630]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1632]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1639]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1641]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1644]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1646]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1648]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1651]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1653]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1654]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1654]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1655]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1655]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1662]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1664]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1667]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1669]
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1671]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1674]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1676]
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1683]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1685]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1688]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1690]
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1692]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1695]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1697]
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv16] @ 6 --> <1.::.1.::.1>[lv1473]
>> lookVar: left[lv17] @ 6 --> <1.::.1.::.0.1>[lv1476]
>> lookVar: right[lv18] @ 6 --> <1.::.0.2>[lv1469]
>> lookVar: x6[lv19] @ 6 --> <1.::.0.0.C7>[lv1654]
bindSvars: venv = rest[lv16]-><1.::.1.::.1>[lv1473], left[lv17]-><1.::.1.::.0.1>[lv1476], right[lv18]-><1.::.0.2>[lv1469], x6[lv19]-><1.::.0.0.C7>[lv1654]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1698]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1698]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1705]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1707]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1710]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1712]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1714]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1717]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1719]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1726]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1728]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1731]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1733]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1735]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1738]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1740]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1741]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1742]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1743]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1744]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1744]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1744]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1744]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1745]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1745]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv1749]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv1749]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv1750]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv1753]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv1753]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv1756]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv1756]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv1758]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1759]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1759]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1766]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1768]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1771]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1773]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1775]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1778]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1780]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1787]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1789]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1792]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1794]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1796]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1799]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1801]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv1802]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1803]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1803]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1810]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1812]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1815]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1817]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1819]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1822]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1824]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1831]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1833]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1836]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1838]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1840]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1843]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1845]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv1846]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1847]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1847]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1854]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1856]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1859]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1861]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1863]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1866]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1868]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1875]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1877]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1880]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1882]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1884]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1887]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1889]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv1890]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv1890]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv1890]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv1890]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1891]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1891]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1898]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1900]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1903]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1905]
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1907]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1910]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1912]
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1919]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1921]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1924]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1926]
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1928]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1931]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1933]
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv12] @ 7 --> <1.::.1.::.1>[lv1753]
>> lookVar: left[lv13] @ 7 --> <1.::.1.::.0.1>[lv1756]
>> lookVar: right[lv14] @ 7 --> <1.::.0.2>[lv1749]
>> lookVar: x7[lv15] @ 7 --> <1.::.0.0.C6>[lv1890]
bindSvars: venv = rest[lv12]-><1.::.1.::.1>[lv1753], left[lv13]-><1.::.1.::.0.1>[lv1756], right[lv14]-><1.::.0.2>[lv1749], x7[lv15]-><1.::.0.0.C6>[lv1890]
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv1934]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv1934]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1935]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1935]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1942]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1944]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1947]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1949]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1951]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1954]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1956]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1963]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1965]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1968]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1970]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1972]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1975]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1977]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv1978]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv1978]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1985]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1987]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1990]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1992]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv1994]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1997]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1999]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2006]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2008]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2011]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2013]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2015]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2018]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2020]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2021]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2022]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2023]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2024]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2024]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2024]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2024]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2025]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2025]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv2029]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv2029]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv2030]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv2033]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv2033]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv2036]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv2036]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2038]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2039]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2039]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2046]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2048]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2051]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2053]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2055]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2058]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2060]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2067]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2069]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2072]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2074]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2076]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2079]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2081]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2082]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2083]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2083]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2090]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2092]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2095]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2097]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2099]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2102]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2104]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2111]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2113]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2116]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2118]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2120]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2123]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2125]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2126]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2127]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2127]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2134]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2136]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2139]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2141]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2143]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2146]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2148]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2155]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2157]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2160]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2162]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2164]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2167]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2169]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2170]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2170]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2170]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2170]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2171]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2171]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2178]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2180]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2183]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2185]
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2187]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2190]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2192]
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2199]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2201]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2204]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2206]
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2208]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2211]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2213]
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 8 --> <1.::.1.::.1>[lv2033]
>> lookVar: left[lv9] @ 8 --> <1.::.1.::.0.1>[lv2036]
>> lookVar: right[lv10] @ 8 --> <1.::.0.2>[lv2029]
>> lookVar: x8[lv11] @ 8 --> <1.::.0.0.C6>[lv2170]
bindSvars: venv = rest[lv8]-><1.::.1.::.1>[lv2033], left[lv9]-><1.::.1.::.0.1>[lv2036], right[lv10]-><1.::.0.2>[lv2029], x8[lv11]-><1.::.0.0.C6>[lv2170]
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2214]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2214]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2215]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2215]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2222]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2224]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2227]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2229]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2231]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2234]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2236]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2243]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2245]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2248]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2250]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2252]
>> genNode:AND: 20, 0
> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2255]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2257]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2258]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2258]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2265]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2267]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2270]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2272]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2274]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2277]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2279]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2286]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2288]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2291]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2293]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2295]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2298]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2300]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2301]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2302]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2303]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2304]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2304]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2304]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2304]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2305]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2305]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv2309]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv2309]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv2310]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv2313]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv2313]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv2316]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv2316]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2318]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2319]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2319]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2326]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2328]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2331]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2333]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2335]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2338]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2340]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2347]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2349]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2352]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2354]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2356]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2359]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2361]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2362]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2363]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2363]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2370]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2372]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2375]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2377]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2379]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2382]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2384]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2391]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2393]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2396]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2398]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2400]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2403]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2405]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2406]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2407]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2407]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2414]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2416]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2419]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2421]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2423]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2426]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2428]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2435]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2437]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2440]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2442]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2444]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2447]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2449]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2450]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2450]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2450]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2450]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2451]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2451]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2458]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2460]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2463]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2465]
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2467]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2470]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2472]
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2479]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2481]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2484]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2486]
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2488]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2491]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2493]
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 9 --> <1.::.1.::.1>[lv2313]
>> lookVar: left[lv5] @ 9 --> <1.::.1.::.0.1>[lv2316]
>> lookVar: right[lv6] @ 9 --> <1.::.0.2>[lv2309]
>> lookVar: x9[lv7] @ 9 --> <1.::.0.0.C6>[lv2450]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv2313], left[lv5]-><1.::.1.::.0.1>[lv2316], right[lv6]-><1.::.0.2>[lv2309], x9[lv7]-><1.::.0.0.C6>[lv2450]
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2494]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2494]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2495]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2495]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2502]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2504]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2507]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2509]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2511]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2514]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2516]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2523]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2525]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2528]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2530]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2532]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2535]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2537]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2538]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2538]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2545]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2547]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2550]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2552]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2554]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2557]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2559]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2566]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2568]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2571]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2573]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2575]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2578]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2580]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2581]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2582]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2583]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2584]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2584]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2584]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2584]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2585]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2585]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: right[lv44], 0 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv37], 1 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv31], 3 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv27], 4 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv23], 5 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv18], 6 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv14], 7 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv10], 8 --> <1.::.0.2>[lv2589]
VarEnvMC.bindVar: right[lv6], 9 --> <1.::.0.2>[lv2589]
>> genNode:VARS: 4, 9
>> bindPatVars: |vars| = 9, |asvars| = 0
VarEnvMC.bindVar: left1[lv38], 1 --> <1.::.0.1>[lv2590]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: rest[lv34], 1 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv29], 3 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv25], 4 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv20], 5 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv16], 6 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv12], 7 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv8], 8 --> <1.::.1.::.1>[lv2593]
VarEnvMC.bindVar: rest[lv4], 9 --> <1.::.1.::.1>[lv2593]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
>> genNode:VARS: 30, 8
>> bindPatVars: |vars| = 8, |asvars| = 0
VarEnvMC.bindVar: left2[lv35], 1 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv30], 3 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv26], 4 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv21], 5 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv17], 6 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv13], 7 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv9], 8 --> <1.::.1.::.0.1>[lv2596]
VarEnvMC.bindVar: left[lv5], 9 --> <1.::.1.::.0.1>[lv2596]
>> genNode:OR: 28, 6
>> bindPatVars: |vars| = 6, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2598]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2599]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2599]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2606]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2608]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2611]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2613]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2615]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2618]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2620]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2627]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2629]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2632]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2634]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2636]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2639]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2641]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2642]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2643]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2643]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2650]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2652]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2655]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2657]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2659]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2662]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2664]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2671]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2673]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2676]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2678]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2680]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2683]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2685]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2686]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2687]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2687]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2694]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2696]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2699]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2701]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2703]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2706]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2708]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2715]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2717]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2720]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2722]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2724]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2727]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2729]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2730]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2730]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2730]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2730]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2731]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2731]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2738]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2740]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2743]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2745]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2747]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2750]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2752]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2759]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2761]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2764]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2766]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2768]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2771]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2773]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2774]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2774]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2775]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2775]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2782]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2784]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2787]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2789]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2791]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2794]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2796]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2803]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2805]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2808]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2810]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2812]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2815]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2817]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv36], 1 --> <1.::.1.::.0.0.C2>[lv2818]
VarEnvMC.bindVar: prec1[lv22], 5 --> <1.::.1.::.0.0.C2>[lv2818]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2825]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2827]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2830]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2832]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2834]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2837]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2839]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv43], 0 --> <1.::.1.::.1.::.0.0.C2>[lv2846]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2848]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2851]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2853]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv40], 0 --> <1.::.1.::.1.::.1.::.1>[lv2855]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv41], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv2858]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv42], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv2860]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv45], 0 --> <1.::.0.0.C1>[lv2861]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv39], 1 --> <1.::.0.0.C4>[lv2862]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv32], 3 --> <1.::.0.0.C5>[lv2863]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: x5[lv24], 5 --> <1.::.0.0.C6>[lv2864]
VarEnvMC.bindVar: x7[lv15], 7 --> <1.::.0.0.C6>[lv2864]
VarEnvMC.bindVar: x8[lv11], 8 --> <1.::.0.0.C6>[lv2864]
VarEnvMC.bindVar: x9[lv7], 9 --> <1.::.0.0.C6>[lv2864]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x4[lv28], 4 --> <1.::.0.0.C7>[lv2865]
VarEnvMC.bindVar: x6[lv19], 6 --> <1.::.0.0.C7>[lv2865]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
<< genMatch
<< matchComp
<< genMatch
<< matchComp
structure Y :
  sig
  datatype svalue
    = C0
  | C1 of unit
  | C10 of unit
  | C11 of unit
  | C12 of unit
  | C13 of unit
  | C14 of unit
  | C15 of unit
  | C16 of unit
  | C17 of unit
  | C18 of unit
  | C19 of unit
  | C2 of unit
  | C21 of unit
  | C22 of unit
  | C23 of unit
  | C3 of unit
  | C4 of unit
  | C5 of unit
  | C6 of unit
  | C7 of unit
  | C8 of unit
  | C9 of unit
  | c20 of unit
  type spp = svalue * int * int
  type stack = spp list
  val actions : int * stack -> int
end
