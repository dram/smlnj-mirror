- use "t5g.sml";
transVB:pat = ittransVB:exp = use "t5g.sml"
[opening t5g.sml]
>> matchComp
<< makeAndor
andor:
<> AND 2 {0} {}
   <0> VARS 0 (state,0) {0}
   <1> VARS 1 (stack,0) {0}
>> decisionTree: andor ID = 2, numRules = 1
** decisionTree: intialOrNodes = []
>> makeDecisionTree: survivors = [0]; orNodes = []
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
<< decisionTree: ruleCounts = [1]
<< decisionTree
dectree:
DLEAF 0
>> genMatch
** genMatch: ruleCounts: [1], length rules: 1
multirules = []
>> genNode:AND: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: stack[lv2], 0 --> <1>[lv32]
>> genNode:VARS: 0, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: state[lv3], 0 --> <0>[lv33]
>> bindSVars
>> lookVar: stack[lv2] @ 0 --> <1>[lv32]
>> lookVar: state[lv3] @ 0 --> <0>[lv33]
bindSvars: venv = stack[lv2]-><1>[lv32], state[lv3]-><0>[lv33]
<< bindSvar
>> transExp: CASEexp
>> matchComp
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 32; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 1; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 29; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 26; |bind| = 1
<< makeAndor
andor:
<> AND 26 {0,1,2,3,4,5} {6}
   <0> OR 0 {0,1,2,3,4,5} {6}
      I0 LEAF {0} {6}
      I1 LEAF {1} {6}
      I2 LEAF {2} {6}
      I3 LEAF {3} {6}
      I4 LEAF {4} {6}
      I5 LEAF {5} {6}
   <1> OR 1 {0,1,3,4,5} {2,6}
      ::
      <1.::> AND 25 {0,1,3,4,5} {2,6}
         <1.::.0> AND 6 {0,1,3,4,5} {2,6}
            <1.::.0.0> OR 2 {0,1,3,4,5} {2,6}
               C1 <1.::.0.0.C1> VARS 3 (x0a,0) {0,2,6}
               C4 <1.::.0.0.C4> VARS 27 (x1a,1) {1,2,6}
               C5 <1.::.0.0.C5> VARS 33 (x3,3) {2,3,6}
               C6 <1.::.0.0.C6> VARS 35 (x5,5) {2,5,6}
               C7 <1.::.0.0.C7> VARS 34 (x4,4) {2,4,6}
            <1.::.0.1> VARS 4 (%WILD%,0) (left1,1) (%WILD%,3) (%WILD%,4)
            (%WILD%,5) {0,1,2,3,4,5,6}
            <1.::.0.2> VARS 5 (right,0) (right,1) (right,3) (right,4)
            (right,5) {0,1,2,3,4,5,6}
         <1.::.1> OR 7 {0,1,3,4,5} {2,6}
            ::
            <1.::.1.::> AND 24 {0,1,3,4,5} {2,6}
               <1.::.1.::.0> AND 32 {1,3,4,5} {0,2,6}
                  <1.::.1.::.0.0> OR 28 {1,5} {0,2,3,4,6}
                     C2
                     <1.::.1.::.0.0.C2> VARS 29 (x1b,1) (prec1,5) {0,1,2,3,4,5,6}
                  <1.::.1.::.0.1> VARS 30 (left2,1) (left,3) (left,4) (left,5) {0,1,2,3,4,5,6}
                  <1.::.1.::.0.2> VARS 31 (%WILD%,1) (%WILD%,3) (%WILD%,4)
                  (%WILD%,5) {0,1,2,3,4,5,6}
               <1.::.1.::.1> OR 9 {0} {1,2,3,4,5,6}
                  ::
                  <1.::.1.::.1.::> AND 23 {0} {1,2,3,4,5,6}
                     <1.::.1.::.1.::.0> AND 14 {0} {1,2,3,4,5,6}
                        <1.::.1.::.1.::.0.0> OR 10 {0} {1,2,3,4,5,6}
                           C2
                           <1.::.1.::.1.::.0.0.C2> VARS 11 (x0b,0) {0,1,2,3,4,5,6}
                        <1.::.1.::.1.::.0.1> VARS 12 (%WILD%,0) {0,1,2,3,4,5,6}
                        <1.::.1.::.1.::.0.2> VARS 13 (%WILD%,0) {0,1,2,3,4,5,6}
                     <1.::.1.::.1.::.1> OR 15 {0} {1,2,3,4,5,6}
                        ::
                        <1.::.1.::.1.::.1.::> AND 22 {0} {1,2,3,4,5,6}
                           <1.::.1.::.1.::.1.::.0> AND 20 {0} {1,2,3,4,5,6}
                              <1.::.1.::.1.::.1.::.0.0> OR 16 {0} {1,2,3,4,5,6}
                                 C3
                                 <1.::.1.::.1.::.1.::.0.0.C3> VARS 17 (header1,0) {0,1,2,3,4,5,6}
                              <1.::.1.::.1.::.1.::.0.1> VARS 18 (left,0) {0,1,2,3,4,5,6}
                              <1.::.1.::.1.::.1.::.0.2> VARS 19 (%WILD%,0) {0,1,2,3,4,5,6}
                           <1.::.1.::.1.::.1.::.1> VARS 21 (rest,0) {0,1,2,3,4,5,6}
>> decisionTree: andor ID = 26, numRules = 7
** decisionTree: intialOrNodes = [0,1]
>> makeDecisionTree: survivors = [0,1,2,3,4,5,6]; orNodes = [0,1]
** makeDecisionTree[SOME(OR)]: best relevant = 0
** andorToDecTree: id = ~1
  path = <0.I0>
  live = [0,6]
  variantSurvivors = [0,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [0,6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [0,6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [0,6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [0,6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [0,6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [28,10,15]
>> makeDecisionTree: survivors = [0,6]; orNodes = [28,10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [28,15]
>> makeDecisionTree: survivors = [0,6]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [28,16]
>> makeDecisionTree: survivors = [0,6]; orNodes = [28,16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [0,6]
  variantCandidates = [28]
>> makeDecisionTree: survivors = [0,6]; orNodes = [28]
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 3
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 4
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 5
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 9 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 13
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 15
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 16
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 17
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 18
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 19
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 20
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 21
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 22
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 23
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 24
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 25
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 26
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 27
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 28
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 29
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 30
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 31
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 32
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 33
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 34
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 35
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 36
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 37
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 38
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 39
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 40
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 41
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 42
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 43
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 44
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 45
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 46
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 47
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 48
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 49
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 50
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 51
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 52
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 53
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 54
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 55
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 56
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 57
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 58
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 59
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 60
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 61
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 62
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 63
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 64
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 65
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 66
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 67
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 68
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 69
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 70
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 71
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 72
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 73
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 74
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 75
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 76
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 77
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 78
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 79
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 80
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 81
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 82
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 83
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 84
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 85
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 86
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 87
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 88
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 89
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I1>
  live = [1,6]
  variantSurvivors = [1,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [1,6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [1,6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [1,6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [1,6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [1,6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 90
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 91
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 92
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 93
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 94
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 95
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 96
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 97
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 98
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 99
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 100
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 101
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 102
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 103
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [1,6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [1,6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [1,6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [1,6]; orNodes = [9]
<< incrementRuleCount: 1 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 104
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 105
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 106
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 107
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 108
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 109
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 110
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 111
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 112
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 113
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 114
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 115
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 116
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 117
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 118
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 119
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 120
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 121
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 122
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 123
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 124
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 125
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 126
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 127
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 128
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 129
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 130
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 131
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 132
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 133
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 134
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 135
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 136
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 137
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 138
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 139
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 140
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 141
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 142
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 143
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 144
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 145
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 146
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 147
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 148
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 149
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 150
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 151
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 152
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 153
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 154
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 155
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 156
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 157
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 158
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 159
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 160
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 161
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 162
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 163
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 164
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 165
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 166
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 167
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 168
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 169
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 170
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 171
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 172
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 173
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I2>
  live = [2,6]
  variantSurvivors = [2,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [2,6]; orNodes = [1]
<< incrementRuleCount: 2 to 1
<< makeDecisionTree: NO relevant
** andorToDecTree: id = ~1
  path = <0.I3>
  live = [3,6]
  variantSurvivors = [3,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [3,6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [3,6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [3,6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 174
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 175
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 176
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 177
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 178
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 179
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 180
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 181
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 182
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 183
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 184
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 185
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 186
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 187
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 188
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 189
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 190
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 191
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 192
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 193
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 194
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 195
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 196
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 197
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 198
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 199
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 200
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 201
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [3,6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [3,6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [3,6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [3,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,6]
>> makeDecisionTree: survivors = [3,6]; orNodes = []
<< incrementRuleCount: 3 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 202
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 203
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 204
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 205
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 206
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 207
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 208
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 209
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 210
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 211
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 212
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 213
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 214
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 215
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 216
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 217
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 218
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 219
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 220
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 221
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 222
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 223
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 224
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 225
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 226
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 227
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 228
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 229
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 230
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 231
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 232
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 233
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 234
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 235
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 236
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 237
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 238
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 239
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 240
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 241
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 242
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 243
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 244
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 245
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 246
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 247
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 248
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 249
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 250
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I4>
  live = [4,6]
  variantSurvivors = [4,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [4,6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [4,6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [4,6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 251
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 252
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 253
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 254
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 255
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 256
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 257
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 258
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 259
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 260
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 261
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 262
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 263
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 264
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 265
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 266
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 267
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 268
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 269
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 270
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 271
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 272
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 273
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 274
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 275
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 276
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 277
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 278
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 279
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 280
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 281
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 282
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 283
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 284
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 285
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 286
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 287
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 288
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 289
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 290
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 291
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 292
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 293
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 294
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 295
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 296
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 297
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 298
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 299
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 300
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 301
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 302
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 303
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 304
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 305
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 306
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [4,6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4,6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4,6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4,6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [4,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4,6]
>> makeDecisionTree: survivors = [4,6]; orNodes = []
<< incrementRuleCount: 4 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 307
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 308
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 309
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 310
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 311
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 312
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 313
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 314
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 315
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 316
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 317
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 318
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 319
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 320
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 321
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 322
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 323
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 324
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 325
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 326
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 327
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I5>
  live = [5,6]
  variantSurvivors = [5,6]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [5,6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [5,6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [5,6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 328
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 329
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 330
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 331
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 332
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 333
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 334
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 335
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 336
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 337
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 338
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 339
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 340
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 341
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 342
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 343
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 344
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 345
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 346
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 347
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 348
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 349
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 350
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 351
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 352
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 353
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 354
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 355
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 356
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 357
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 358
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 359
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 360
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 361
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 362
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 363
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 364
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 365
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 366
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 367
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 368
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 369
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [5,6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [5,6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [5,6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [5,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [5,6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [5,6]
  variantCandidates = []
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [5,6]
>> makeDecisionTree: survivors = [5,6]; orNodes = []
<< incrementRuleCount: 5 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 370
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 371
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 372
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 373
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 374
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 375
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 376
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 377
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 378
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 379
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 380
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 381
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 382
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 383
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 384
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 385
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 386
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 387
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 388
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 389
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 390
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 391
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 392
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 393
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 394
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 395
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 396
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 397
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 398
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 399
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 400
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 401
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 402
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 403
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 404
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 405
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 406
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 407
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 408
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 409
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 410
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 411
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
defaultOp: id = 0, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [6]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 412
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 413
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 414
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 415
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 416
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 417
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 418
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 419
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 420
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 421
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 422
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 423
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 424
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 425
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 426
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 427
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 428
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 429
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 430
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 431
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 432
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 433
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 434
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 435
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 436
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 437
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 438
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 439
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 440
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 441
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 442
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 443
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 444
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 445
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 446
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 447
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 448
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 449
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 450
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 451
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 452
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 453
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 454
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 455
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 456
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 457
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 458
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 459
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 460
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 461
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 462
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 463
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 464
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 465
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 466
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 467
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 468
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 469
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 470
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 471
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 472
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 473
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 474
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 475
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 476
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 477
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 478
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 479
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 480
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 481
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 482
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 483
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 484
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 485
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 486
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 487
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 488
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [6]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 489
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 490
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 491
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [6]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 492
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 493
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 494
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 495
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 496
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 497
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 498
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 35
  path = <1.::.0.0.C6>
  live = [2,5,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 499
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 34
  path = <1.::.0.0.C7>
  live = [2,4,6]
  variantSurvivors = [6]
  variantCandidates = []
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 500
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 501
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [6]
>> makeDecisionTree: survivors = [6]; orNodes = []
<< incrementRuleCount: 6 to 502
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
<< makeDecisionTree: 0 relevant
<< decisionTree: ruleCounts = [1,1,1,14,14,7,502]
<< decisionTree
dectree:
CHOICE <0>
  I0
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.1>
          ::
          CHOICE <1.::.1.::.1.::.0.0>
            C2
            CHOICE <1.::.1.::.1.::.1>
              ::
              CHOICE <1.::.1.::.1.::.1.::.0.0>
                C3 DLEAF 0
                * CHOICE <1.::.1.::.0.0>
                  C2 DLEAF 6
                  * DLEAF 6
              * CHOICE <1.::.1.::.0.0>
                C2 DLEAF 6
                * DLEAF 6
            *
            CHOICE <1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
          * CHOICE <1.::.1.::.0.0>
            C2 DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
  I1
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2 DLEAF 1
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
  I2 DLEAF 2
  I3
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
  I4
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
  I5
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 5
                  * DLEAF 5
                * DLEAF 5
            * DLEAF 5
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
  *
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C6
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        C7
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 6
                  * DLEAF 6
                * DLEAF 6
            * DLEAF 6
      *
      CHOICE <1.::.0.0>
        C1 DLEAF 6
        C4 DLEAF 6
        C5 DLEAF 6
        C6 DLEAF 6
        C7 DLEAF 6
        * DLEAF 6
    * DLEAF 6
>> genMatch
** genMatch: ruleCounts: [1,1,1,14,14,7,502], length rules: 7
multirules = [3,4,5,6]
>> genNode:AND: 26, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv17], 2 --> <1>[lv56]
>> genNode:OR: 0, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv61]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv61]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv61]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv61]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv61]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv62]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv65]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv65]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv65]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv65]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv68]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv68]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv68]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv68]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv70]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv77]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv79]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv82]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv84]
>> bindSVars
>> lookVar: rest[lv24] @ 0 --> <1.::.1.::.1.::.1.::.1>[lv79]
>> lookVar: left[lv25] @ 0 --> <1.::.1.::.1.::.1.::.0.1>[lv82]
>> lookVar: header1[lv26] @ 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv84]
>> lookVar: x0b[lv27] @ 0 --> <1.::.1.::.1.::.0.0.C2>[lv77]
>> lookVar: right[lv28] @ 0 --> <1.::.0.2>[lv61]
>> lookVar: x0a[lv29] @ 0 --> <1.::.0.0.C1>[lv70]
bindSvars: venv = rest[lv24]-><1.::.1.::.1.::.1.::.1>[lv79], left[lv25]-><1.::.1.::.1.::.1.::.0.1>[lv82], header1[lv26]-><1.::.1.::.1.::.1.::.0.0.C3>[lv84], x0b[lv27]-><1.::.1.::.1.::.0.0.C2>[lv77], right[lv28]-><1.::.0.2>[lv61], x0a[lv29]-><1.::.0.0.C1>[lv70]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv85]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv85]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv86]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv86]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv87]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv87]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv89]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv92]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv94]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv96]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv99]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv101]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv102]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv102]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv103]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv104]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv104]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv111]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv113]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv116]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv118]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv120]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv123]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv125]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv132]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv134]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv137]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv139]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv141]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv144]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv146]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv147]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv148]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv148]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv155]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv157]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv160]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv162]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv164]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv167]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv169]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv176]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv178]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv181]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv183]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv185]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv188]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv190]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv191]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv192]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv192]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv199]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv201]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv204]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv206]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv208]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv211]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv213]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv220]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv222]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv225]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv227]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv229]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv232]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv234]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv235]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv236]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv236]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv243]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv245]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv248]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv250]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv252]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv255]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv257]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv264]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv266]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv269]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv271]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv273]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv276]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv278]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv279]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv279]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv286]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv288]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv291]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv293]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv295]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv298]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv300]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv307]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv309]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv312]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv314]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv316]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv319]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv321]
> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv322]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv323]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv324]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv325]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv326]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv330]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv330]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv330]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv330]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv330]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv331]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv334]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv334]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv334]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv334]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv337]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv337]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv337]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv337]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv339]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv340]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv340]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv347]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv349]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv352]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv354]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv356]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv359]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv361]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv368]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv370]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv373]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv375]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv377]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv380]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv382]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv383]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv384]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv384]
>> bindSVars
>> lookVar: rest[lv18] @ 1 --> <1.::.1.::.1>[lv334]
>> lookVar: left2[lv19] @ 1 --> <1.::.1.::.0.1>[lv337]
>> lookVar: x1b[lv20] @ 1 --> <1.::.1.::.0.0.C2>[lv384]
>> lookVar: right[lv21] @ 1 --> <1.::.0.2>[lv330]
>> lookVar: left1[lv22] @ 1 --> <1.::.0.1>[lv331]
>> lookVar: x1a[lv23] @ 1 --> <1.::.0.0.C4>[lv383]
bindSvars: venv = rest[lv18]-><1.::.1.::.1>[lv334], left2[lv19]-><1.::.1.::.0.1>[lv337], x1b[lv20]-><1.::.1.::.0.0.C2>[lv384], right[lv21]-><1.::.0.2>[lv330], left1[lv22]-><1.::.0.1>[lv331], x1a[lv23]-><1.::.0.0.C4>[lv383]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv391]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv393]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv396]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv398]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv400]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv403]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv405]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv406]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv407]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv407]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv414]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv416]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv419]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv421]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv423]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv426]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv428]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv435]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv437]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv440]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv442]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv444]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv447]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv449]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv450]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv451]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv451]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv458]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv460]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv463]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv465]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv467]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv470]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv472]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv479]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv481]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv484]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv486]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv488]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv491]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv493]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv494]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv495]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv495]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv502]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv504]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv507]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv509]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv511]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv514]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv516]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv523]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv525]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv528]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv530]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv532]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv535]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv537]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv538]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv538]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv545]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv547]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv550]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv552]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv554]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv557]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv559]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv566]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv568]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv571]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv573]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv575]
> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv578]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv580]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv581]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv582]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv583]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv584]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv585]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
>> lookVar: rest[lv17] @ 2 --> <1>[lv56]
bindSvars: venv = rest[lv17]-><1>[lv56]
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv589]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv589]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv589]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv589]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv589]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv590]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv593]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv593]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv593]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv593]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv596]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv596]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv596]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv596]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv598]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv599]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv599]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv606]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv608]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv611]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv613]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv615]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv618]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv620]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv627]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv629]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv632]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv634]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv636]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv639]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv641]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv642]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv643]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv643]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv650]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv652]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv655]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv657]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv659]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv662]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv664]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv671]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv673]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv676]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv678]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv680]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv683]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv685]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv686]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv687]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv687]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv694]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv696]
> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv699]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv701]
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv703]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv706]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv708]
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv715]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv717]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv720]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv722]
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv724]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv727]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv729]
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv13] @ 3 --> <1.::.1.::.1>[lv593]
>> lookVar: left[lv14] @ 3 --> <1.::.1.::.0.1>[lv596]
>> lookVar: right[lv15] @ 3 --> <1.::.0.2>[lv589]
>> lookVar: x3[lv16] @ 3 --> <1.::.0.0.C5>[lv686]
bindSvars: venv = rest[lv13]-><1.::.1.::.1>[lv593], left[lv14]-><1.::.1.::.0.1>[lv596], right[lv15]-><1.::.0.2>[lv589], x3[lv16]-><1.::.0.0.C5>[lv686]
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv730]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv731]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv731]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv738]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv740]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv743]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv745]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv747]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv750]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv752]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv759]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv761]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv764]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv766]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv768]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv771]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv773]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv774]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv775]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv775]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv782]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv784]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv787]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv789]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv791]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv794]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv796]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv803]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv805]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv808]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv810]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv812]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv815]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv817]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv818]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv818]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv825]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv827]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv830]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv832]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv834]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv837]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv839]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv846]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv848]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv851]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv853]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv855]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv858]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv860]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv861]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv862]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv863]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv864]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv865]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv869]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv869]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv869]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv869]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv869]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv870]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv873]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv873]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv873]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv873]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv876]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv876]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv876]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv876]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv878]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv879]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv879]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv886]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv888]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv891]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv893]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv895]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv898]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv900]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv907]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv909]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv912]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv914]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv916]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv919]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv921]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv922]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv923]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv923]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv930]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv932]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv935]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv937]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv939]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv942]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv944]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv951]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv953]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv956]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv958]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv960]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv963]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv965]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv966]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv967]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv967]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv974]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv976]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv979]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv981]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv983]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv986]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv988]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv995]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv997]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1000]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1002]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1004]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1007]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1009]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1010]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1011]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1011]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1018]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1020]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1023]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1025]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1027]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1030]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1032]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1039]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1041]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1044]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1046]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1048]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1051]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1053]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1054]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1055]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1055]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1062]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1064]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1067]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1069]
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1071]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1074]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1076]
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1083]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1085]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1088]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1090]
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1092]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1095]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1097]
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv9] @ 4 --> <1.::.1.::.1>[lv873]
>> lookVar: left[lv10] @ 4 --> <1.::.1.::.0.1>[lv876]
>> lookVar: right[lv11] @ 4 --> <1.::.0.2>[lv869]
>> lookVar: x4[lv12] @ 4 --> <1.::.0.0.C7>[lv1054]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv873], left[lv10]-><1.::.1.::.0.1>[lv876], right[lv11]-><1.::.0.2>[lv869], x4[lv12]-><1.::.0.0.C7>[lv1054]
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1098]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1098]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1105]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1107]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1110]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1112]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1114]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1117]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1119]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1126]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1128]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1131]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1133]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1135]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1138]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1140]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv1141]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv1142]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv1143]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1144]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1145]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv1149]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv1149]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv1149]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv1149]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv1149]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv1150]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv1153]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv1153]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv1153]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv1153]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv1156]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv1156]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv1156]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv1156]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv1158]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1159]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1159]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1166]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1168]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1171]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1173]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1175]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1178]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1180]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1187]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1189]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1192]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1194]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1196]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1199]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1201]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv1202]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1203]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1203]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1210]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1212]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1215]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1217]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1219]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1222]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1224]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1231]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1233]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1236]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1238]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1240]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1243]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1245]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv1246]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1247]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1247]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1254]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1256]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1259]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1261]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1263]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1266]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1268]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1275]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1277]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1280]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1282]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1284]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1287]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1289]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1290]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1291]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1298]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1300]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1303]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1305]
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1307]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1310]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1312]
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 5 --> <1.::.1.::.1>[lv1153]
>> lookVar: left[lv5] @ 5 --> <1.::.1.::.0.1>[lv1156]
>> lookVar: prec1[lv6] @ 5 --> <1.::.1.::.0.0.C2>[lv1291]
>> lookVar: right[lv7] @ 5 --> <1.::.0.2>[lv1149]
>> lookVar: x5[lv8] @ 5 --> <1.::.0.0.C6>[lv1290]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv1153], left[lv5]-><1.::.1.::.0.1>[lv1156], prec1[lv6]-><1.::.1.::.0.0.C2>[lv1291], right[lv7]-><1.::.0.2>[lv1149], x5[lv8]-><1.::.0.0.C6>[lv1290]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1319]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1321]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1324]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1326]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1328]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1331]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1333]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1334]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1335]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1335]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1342]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1344]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1347]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1349]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1351]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1354]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1356]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1363]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1365]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1368]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1370]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1372]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1375]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1377]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1378]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1378]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1385]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1387]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1390]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1392]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1394]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1397]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1399]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1406]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1408]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1411]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1413]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1415]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1418]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1420]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv1421]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv1422]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv1423]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1424]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1425]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: right[lv28], 0 --> <1.::.0.2>[lv1429]
VarEnvMC.bindVar: right[lv21], 1 --> <1.::.0.2>[lv1429]
VarEnvMC.bindVar: right[lv15], 3 --> <1.::.0.2>[lv1429]
VarEnvMC.bindVar: right[lv11], 4 --> <1.::.0.2>[lv1429]
VarEnvMC.bindVar: right[lv7], 5 --> <1.::.0.2>[lv1429]
>> genNode:VARS: 4, 5
>> bindPatVars: |vars| = 5, |asvars| = 0
VarEnvMC.bindVar: left1[lv22], 1 --> <1.::.0.1>[lv1430]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: rest[lv18], 1 --> <1.::.1.::.1>[lv1433]
VarEnvMC.bindVar: rest[lv13], 3 --> <1.::.1.::.1>[lv1433]
VarEnvMC.bindVar: rest[lv9], 4 --> <1.::.1.::.1>[lv1433]
VarEnvMC.bindVar: rest[lv4], 5 --> <1.::.1.::.1>[lv1433]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
>> genNode:VARS: 30, 4
>> bindPatVars: |vars| = 4, |asvars| = 0
VarEnvMC.bindVar: left2[lv19], 1 --> <1.::.1.::.0.1>[lv1436]
VarEnvMC.bindVar: left[lv14], 3 --> <1.::.1.::.0.1>[lv1436]
VarEnvMC.bindVar: left[lv10], 4 --> <1.::.1.::.0.1>[lv1436]
VarEnvMC.bindVar: left[lv5], 5 --> <1.::.1.::.0.1>[lv1436]
>> genNode:OR: 28, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv1438]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1439]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1439]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1446]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1448]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1451]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1453]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1455]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1458]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1460]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1467]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1469]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1472]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1474]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1476]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1479]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1481]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv1482]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1483]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1483]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1490]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1492]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1495]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1497]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1499]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1502]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1504]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1511]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1513]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1516]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1518]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1520]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1523]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1525]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv1526]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1527]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1527]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1534]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1536]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1539]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1541]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1543]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1546]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1548]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1555]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1557]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1560]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1562]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1564]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1567]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1569]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1570]
>> genNode:VARS: 29, 2
> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1571]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1571]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1578]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1580]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1583]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1585]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1587]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1590]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1592]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1599]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1601]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1604]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1606]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1608]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1611]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1613]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1614]
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1615]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1615]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1622]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1624]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1627]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1629]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1631]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1634]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1636]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1643]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1645]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1648]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1650]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1652]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1655]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1657]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: x1b[lv20], 1 --> <1.::.1.::.0.0.C2>[lv1658]
VarEnvMC.bindVar: prec1[lv6], 5 --> <1.::.1.::.0.0.C2>[lv1658]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1665]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1667]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1670]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1672]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1674]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1677]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1679]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv27], 0 --> <1.::.1.::.1.::.0.0.C2>[lv1686]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1688]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1691]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1693]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv24], 0 --> <1.::.1.::.1.::.1.::.1>[lv1695]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv25], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv1698]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: header1[lv26], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv1700]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv29], 0 --> <1.::.0.0.C1>[lv1701]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv23], 1 --> <1.::.0.0.C4>[lv1702]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv16], 3 --> <1.::.0.0.C5>[lv1703]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 35, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x5[lv8], 5 --> <1.::.0.0.C6>[lv1704]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 34, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x4[lv12], 4 --> <1.::.0.0.C7>[lv1705]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
<< genMatch
<< matchComp
<< genMatch
<< matchComp
structure Y :
  sig
  datatype svalue
    = C0
  | C1 of unit
  | C2 of unit
  | C3 of unit
  | C4 of unit
  | C5 of unit
  | C6 of unit
  | C7 of unit
  type spp = svalue * int * int
  type stack = spp list
  val actions : int * stack -> int
end
