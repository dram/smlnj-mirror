- use "t5j.sml";
transVB:pat = ittransVB:exp = use "t5j.sml"
[opening t5j.sml]
>> matchComp
<< makeAndor
andor:
<> AND 2 {0} {}
   <0> VARS 0 (state,0) {0}
   <1> VARS 1 (stack,0) {0}
>> decisionTree: andor ID = 2, numRules = 1
** decisionTree: intialOrNodes = []
>> makeDecisionTree: survivors = [0]; orNodes = []
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
<< decisionTree: ruleCounts = [1]
<< decisionTree
dectree:
DLEAF 0
>> genMatch
** genMatch: ruleCounts: [1], length rules: 1
multirules = []
>> genNode:AND: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: stack[lv2], 0 --> <1>[lv23]
>> genNode:VARS: 0, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: state[lv3], 0 --> <0>[lv24]
>> bindSVars
>> lookVar: stack[lv2] @ 0 --> <1>[lv23]
>> lookVar: state[lv3] @ 0 --> <0>[lv24]
bindSvars: venv = stack[lv2]-><1>[lv23], state[lv3]-><0>[lv24]
<< bindSvar
>> transExp: CASEexp
>> matchComp
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 32; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 1; |bind| = 1
>> addBind: id = 4; |bind| = 1
>> addBind: id = 5; |bind| = 1
>> addBind: id = 28; |bind| = 1
>> addBind: id = 30; |bind| = 1
>> addBind: id = 31; |bind| = 1
>> addBind: id = 9; |bind| = 1
>> addBind: id = 26; |bind| = 1
<< makeAndor
andor:
<> AND 26 {0,1,2,3} {4}
   <0> OR 0 {0,1,2,3} {4}
      I0 LEAF {0} {4}
      I1 LEAF {1} {4}
      I2 LEAF {2} {4}
      I3 LEAF {3} {4}
   <1> OR 1 {0,1,3} {2,4}
      ::
      <1.::> AND 25 {0,1,3} {2,4}
         <1.::.0> AND 6 {0,1,3} {2,4}
            <1.::.0.0> OR 2 {0,1,3} {2,4}
               C1 <1.::.0.0.C1> VARS 3 (x0a,0) {0,2,4}
               C4 <1.::.0.0.C4> VARS 27 (x1a,1) {1,2,4}
               C5 <1.::.0.0.C5> VARS 33 (x3,3) {2,3,4}
            <1.::.0.1> VARS 4 (%WILD%,0) (left1,1) (%WILD%,3) {0,1,2,3,4}
            <1.::.0.2> VARS 5 (right,0) (right,1) (right,3) {0,1,2,3,4}
         <1.::.1> OR 7 {0,1,3} {2,4}
            ::
            <1.::.1.::> AND 24 {0,1,3} {2,4}
               <1.::.1.::.0> AND 32 {1,3} {0,2,4}
                  <1.::.1.::.0.0> OR 28 {1} {0,2,3,4}
                     C2 <1.::.1.::.0.0.C2> VARS 29 (x1b,1) {0,1,2,3,4}
                  <1.::.1.::.0.1> VARS 30 (left2,1) (left,3) {0,1,2,3,4}
                  <1.::.1.::.0.2> VARS 31 (%WILD%,1) (%WILD%,3) {0,1,2,3,4}
               <1.::.1.::.1> OR 9 {0} {1,2,3,4}
                  ::
                  <1.::.1.::.1.::> AND 23 {0} {1,2,3,4}
                     <1.::.1.::.1.::.0> AND 14 {0} {1,2,3,4}
                        <1.::.1.::.1.::.0.0> OR 10 {0} {1,2,3,4}
                           C2
                           <1.::.1.::.1.::.0.0.C2> VARS 11 (x0b,0) {0,1,2,3,4}
                        <1.::.1.::.1.::.0.1> VARS 12 (%WILD%,0) {0,1,2,3,4}
                        <1.::.1.::.1.::.0.2> VARS 13 (%WILD%,0) {0,1,2,3,4}
                     <1.::.1.::.1.::.1> OR 15 {0} {1,2,3,4}
                        ::
                        <1.::.1.::.1.::.1.::> AND 22 {0} {1,2,3,4}
                           <1.::.1.::.1.::.1.::.0> AND 20 {0} {1,2,3,4}
                              <1.::.1.::.1.::.1.::.0.0> OR 16 {0} {1,2,3,4}
                                 C3
                                 <1.::.1.::.1.::.1.::.0.0.C3> VARS 17 (x0c,0) {0,1,2,3,4}
                              <1.::.1.::.1.::.1.::.0.1> VARS 18 (left,0) {0,1,2,3,4}
                              <1.::.1.::.1.::.1.::.0.2> VARS 19 (%WILD%,0) {0,1,2,3,4}
                           <1.::.1.::.1.::.1.::.1> VARS 21 (rest,0) {0,1,2,3,4}
>> decisionTree: andor ID = 26, numRules = 5
** decisionTree: intialOrNodes = [0,1]
>> makeDecisionTree: survivors = [0,1,2,3,4]; orNodes = [0,1]
** makeDecisionTree[SOME(OR)]: best relevant = 0
** andorToDecTree: id = ~1
  path = <0.I0>
  live = [0,4]
  variantSurvivors = [0,4]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [0,4]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [0,4]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [0,4]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [0,4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [0,4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [10,28,15]
>> makeDecisionTree: survivors = [0,4]; orNodes = [10,28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [28,15]
>> makeDecisionTree: survivors = [0,4]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [16,28]
>> makeDecisionTree: survivors = [0,4]; orNodes = [16,28]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [0,4]
  variantCandidates = [28]
>> makeDecisionTree: survivors = [0,4]; orNodes = [28]
<< incrementRuleCount: 0 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 3
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 4
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28,15]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 5
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 9 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 13
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 15
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 16
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 17
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 18
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 19
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 20
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 21
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 22
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 23
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 24
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 25
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 26
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 27
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 28
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 29
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 30
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 31
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 32
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 33
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 34
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 35
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 36
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 37
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 38
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 39
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 40
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 41
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 42
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 43
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 44
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 45
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 46
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 47
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 48
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 49
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 50
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 51
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 52
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 53
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 54
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 55
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 56
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 57
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 58
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 59
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I1>
  live = [1,4]
  variantSurvivors = [1,4]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [1,4]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [1,4]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [1,4]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [1,4]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [1,4]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 60
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 61
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 62
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 63
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 64
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 65
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 66
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 67
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 68
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 69
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 70
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 71
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 72
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 73
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [1,4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [1,4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [1,4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [1,4]; orNodes = [9]
<< incrementRuleCount: 1 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 74
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 75
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 76
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 77
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 78
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 79
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 80
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 81
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 82
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 83
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 84
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 85
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 86
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 87
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 88
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 89
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 90
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 91
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 92
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 93
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 94
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 95
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 96
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 97
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 98
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 99
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 100
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 101
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 102
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 103
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 104
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 105
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 106
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 107
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 108
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 109
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 110
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 111
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 112
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 113
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
** andorToDecTree: id = ~1
  path = <0.I2>
  live = [2,4]
  variantSurvivors = [2,4]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [2,4]; orNodes = [1]
<< incrementRuleCount: 2 to 1
<< makeDecisionTree: NO relevant
** andorToDecTree: id = ~1
  path = <0.I3>
  live = [3,4]
  variantSurvivors = [3,4]
  variantCandidates = [1]
>> makeDecisionTree: survivors = [3,4]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [3,4]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [3,4]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 114
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 115
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 116
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 117
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 118
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 119
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 120
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 121
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 122
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 123
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 124
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 125
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 126
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 127
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 128
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 129
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 130
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 131
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 132
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 133
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 134
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 135
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 136
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 137
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 138
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 139
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 140
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 141
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [3,4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [3,4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 1
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 2
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 3
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 4
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 5
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 6
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 7
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [3,4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [3,4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 8
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 9
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 10
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [3,4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [3,4]
  variantCandidates = []
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 11
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 12
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 13
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [3,4]
>> makeDecisionTree: survivors = [3,4]; orNodes = []
<< incrementRuleCount: 3 to 14
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 142
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 143
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 144
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 145
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 146
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 147
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 148
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 149
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 150
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 151
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 152
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 153
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 154
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 155
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 156
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 157
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 158
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 159
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 160
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
defaultOp: id = 0, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [1]
** makeDecisionTree[SOME(OR)]: best relevant = 1
** andorToDecTree: id = 25
  path = <1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [7,2]
>> makeDecisionTree: survivors = [4]; orNodes = [7,2]
** makeDecisionTree[SOME(OR)]: best relevant = 7
** andorToDecTree: id = 24
  path = <1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [2,28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [2,28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 161
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 162
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 163
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 164
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 165
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 166
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 167
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 168
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 169
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 170
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 171
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 172
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 173
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 174
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 175
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 176
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 177
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 178
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 179
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 180
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 181
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 182
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 183
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 184
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 185
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 186
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 187
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 188
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = [28,9]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 189
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 190
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 191
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 192
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 193
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 194
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 195
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 196
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 197
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 198
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 199
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 200
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 201
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 202
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [28,9]
** makeDecisionTree[SOME(OR)]: best relevant = 28
** andorToDecTree: id = 29
  path = <1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [9]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 203
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 204
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 205
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 206
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 207
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 208
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 209
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
defaultOp: id = 28, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [9]
** makeDecisionTree[SOME(OR)]: best relevant = 9
** andorToDecTree: id = 23
  path = <1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [10,15]
>> makeDecisionTree: survivors = [4]; orNodes = [10,15]
** makeDecisionTree[SOME(OR)]: best relevant = 10
** andorToDecTree: id = 11
  path = <1.::.1.::.1.::.0.0.C2>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [15]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 210
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 211
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 212
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
defaultOp: id = 10, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [15]
** makeDecisionTree[SOME(OR)]: best relevant = 15
** andorToDecTree: id = 22
  path = <1.::.1.::.1.::.1.::>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = [16]
>> makeDecisionTree: survivors = [4]; orNodes = [16]
** makeDecisionTree[SOME(OR)]: best relevant = 16
** andorToDecTree: id = 17
  path = <1.::.1.::.1.::.1.::.0.0.C3>
  live = [0,1,2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 213
<< makeDecisionTree: NO relevant
defaultOp: id = 16, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 214
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 16 relevant
defaultOp: id = 15, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 215
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 15 relevant
<< makeDecisionTree: 10 relevant
defaultOp: id = 9, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 216
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 9 relevant
<< makeDecisionTree: 28 relevant
<< makeDecisionTree: 2 relevant
defaultOp: id = 7, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = [2]
** makeDecisionTree[SOME(OR)]: best relevant = 2
** andorToDecTree: id = 3
  path = <1.::.0.0.C1>
  live = [0,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 217
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 27
  path = <1.::.0.0.C4>
  live = [1,2,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 218
<< makeDecisionTree: NO relevant
** andorToDecTree: id = 33
  path = <1.::.0.0.C5>
  live = [2,3,4]
  variantSurvivors = [4]
  variantCandidates = []
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 219
<< makeDecisionTree: NO relevant
defaultOp: id = 2, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 220
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 2 relevant
<< makeDecisionTree: 7 relevant
defaultOp: id = 1, defaultSurvivors = [4]
>> makeDecisionTree: survivors = [4]; orNodes = []
<< incrementRuleCount: 4 to 221
<< makeDecisionTree: NO relevant
<< makeDecisionTree: 1 relevant
<< makeDecisionTree: 0 relevant
<< decisionTree: ruleCounts = [1,1,1,14,221]
<< decisionTree
dectree:
CHOICE <0>
  I0
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.1>
          ::
          CHOICE <1.::.1.::.1.::.0.0>
            C2
            CHOICE <1.::.1.::.1.::.1>
              ::
              CHOICE <1.::.1.::.1.::.1.::.0.0>
                C3 DLEAF 0
                * CHOICE <1.::.1.::.0.0>
                  C2 DLEAF 4
                  * DLEAF 4
              * CHOICE <1.::.1.::.0.0>
                C2 DLEAF 4
                * DLEAF 4
            *
            CHOICE <1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
          * CHOICE <1.::.1.::.0.0>
            C2 DLEAF 4
            * DLEAF 4
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
      * CHOICE <1.::.0.0>
        C1 DLEAF 4
        C4 DLEAF 4
        C5 DLEAF 4
        * DLEAF 4
    * DLEAF 4
  I1
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C4
        CHOICE <1.::.1.::.0.0>
          C2 DLEAF 1
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
      * CHOICE <1.::.0.0>
        C1 DLEAF 4
        C4 DLEAF 4
        C5 DLEAF 4
        * DLEAF 4
    * DLEAF 4
  I2 DLEAF 2
  I3
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 3
                  * DLEAF 3
                * DLEAF 3
            * DLEAF 3
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
      * CHOICE <1.::.0.0>
        C1 DLEAF 4
        C4 DLEAF 4
        C5 DLEAF 4
        * DLEAF 4
    * DLEAF 4
  *
  CHOICE <1>
    ::
    CHOICE <1.::.1>
      ::
      CHOICE <1.::.0.0>
        C1
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C4
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        C5
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
        *
        CHOICE <1.::.1.::.0.0>
          C2
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
          *
          CHOICE <1.::.1.::.1>
            ::
            CHOICE <1.::.1.::.1.::.0.0>
              C2
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
              *
              CHOICE <1.::.1.::.1.::.1>
                :: CHOICE <1.::.1.::.1.::.1.::.0.0>
                  C3 DLEAF 4
                  * DLEAF 4
                * DLEAF 4
            * DLEAF 4
      * CHOICE <1.::.0.0>
        C1 DLEAF 4
        C4 DLEAF 4
        C5 DLEAF 4
        * DLEAF 4
    * DLEAF 4
>> genMatch
** genMatch: ruleCounts: [1,1,1,14,221], length rules: 5
multirules = [3,4]
>> genNode:AND: 26, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 1, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv8], 2 --> <1>[lv34]
>> genNode:OR: 0, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: right[lv19], 0 --> <1.::.0.2>[lv39]
VarEnvMC.bindVar: right[lv12], 1 --> <1.::.0.2>[lv39]
VarEnvMC.bindVar: right[lv6], 3 --> <1.::.0.2>[lv39]
>> genNode:VARS: 4, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left1[lv13], 1 --> <1.::.0.1>[lv40]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: rest[lv9], 1 --> <1.::.1.::.1>[lv43]
VarEnvMC.bindVar: rest[lv4], 3 --> <1.::.1.::.1>[lv43]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 30, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: left2[lv10], 1 --> <1.::.1.::.0.1>[lv46]
VarEnvMC.bindVar: left[lv5], 3 --> <1.::.1.::.0.1>[lv46]
>> genNode:OR: 28, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv48]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv55]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv57]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv60]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv62]
>> bindSVars
>> lookVar: rest[lv15] @ 0 --> <1.::.1.::.1.::.1.::.1>[lv57]
>> lookVar: left[lv16] @ 0 --> <1.::.1.::.1.::.1.::.0.1>[lv60]
>> lookVar: x0c[lv17] @ 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv62]
>> lookVar: x0b[lv18] @ 0 --> <1.::.1.::.1.::.0.0.C2>[lv55]
>> lookVar: right[lv19] @ 0 --> <1.::.0.2>[lv39]
>> lookVar: x0a[lv20] @ 0 --> <1.::.0.0.C1>[lv48]
bindSvars: venv = rest[lv15]-><1.::.1.::.1.::.1.::.1>[lv57], left[lv16]-><1.::.1.::.1.::.1.::.0.1>[lv60], x0c[lv17]-><1.::.1.::.1.::.1.::.0.0.C3>[lv62], x0b[lv18]-><1.::.1.::.1.::.0.0.C2>[lv55], right[lv19]-><1.::.0.2>[lv39], x0a[lv20]-><1.::.0.0.C1>[lv48]
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv63]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv64]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv65]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv67]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv70]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv72]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv74]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv77]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv79]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv80]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv81]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv82]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv89]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv91]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv94]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv96]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv98]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv101]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv103]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv110]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv112]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv115]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv117]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv119]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv122]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv124]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv125]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv126]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv133]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv135]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv138]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv140]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv142]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv145]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv147]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv154]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv156]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv159]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv161]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv163]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv166]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv168]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv169]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv176]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv178]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv181]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv183]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv185]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv188]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv190]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv197]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv199]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv202]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv204]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv206]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv209]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv211]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv212]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv213]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv214]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: right[lv19], 0 --> <1.::.0.2>[lv218]
VarEnvMC.bindVar: right[lv12], 1 --> <1.::.0.2>[lv218]
VarEnvMC.bindVar: right[lv6], 3 --> <1.::.0.2>[lv218]
>> genNode:VARS: 4, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left1[lv13], 1 --> <1.::.0.1>[lv219]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: rest[lv9], 1 --> <1.::.1.::.1>[lv222]
VarEnvMC.bindVar: rest[lv4], 3 --> <1.::.1.::.1>[lv222]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 30, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: left2[lv10], 1 --> <1.::.1.::.0.1>[lv225]
VarEnvMC.bindVar: left[lv5], 3 --> <1.::.1.::.0.1>[lv225]
>> genNode:OR: 28, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv227]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv228]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv235]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv237]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv240]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv242]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv244]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv247]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv249]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv256]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv258]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv261]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv263]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv265]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv268]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv270]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv271]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv272]
>> bindSVars
>> lookVar: rest[lv9] @ 1 --> <1.::.1.::.1>[lv222]
>> lookVar: left2[lv10] @ 1 --> <1.::.1.::.0.1>[lv225]
>> lookVar: x1b[lv11] @ 1 --> <1.::.1.::.0.0.C2>[lv272]
>> lookVar: right[lv12] @ 1 --> <1.::.0.2>[lv218]
>> lookVar: left1[lv13] @ 1 --> <1.::.0.1>[lv219]
>> lookVar: x1a[lv14] @ 1 --> <1.::.0.0.C4>[lv271]
bindSvars: venv = rest[lv9]-><1.::.1.::.1>[lv222], left2[lv10]-><1.::.1.::.0.1>[lv225], x1b[lv11]-><1.::.1.::.0.0.C2>[lv272], right[lv12]-><1.::.0.2>[lv218], left1[lv13]-><1.::.0.1>[lv219], x1a[lv14]-><1.::.0.0.C4>[lv271]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv279]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv281]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv284]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv286]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv288]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv291]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv293]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv294]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv295]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv302]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv304]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv307]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv309]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv311]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv314]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv316]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv323]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv325]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv328]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv330]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv332]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv335]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv337]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv338]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv345]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv347]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv350]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv352]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv354]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv357]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv359]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv366]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv368]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv371]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv373]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv375]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv378]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv380]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv381]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv382]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv383]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
>> lookVar: rest[lv8] @ 2 --> <1>[lv34]
bindSvars: venv = rest[lv8]-><1>[lv34]
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: right[lv19], 0 --> <1.::.0.2>[lv387]
VarEnvMC.bindVar: right[lv12], 1 --> <1.::.0.2>[lv387]
VarEnvMC.bindVar: right[lv6], 3 --> <1.::.0.2>[lv387]
>> genNode:VARS: 4, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left1[lv13], 1 --> <1.::.0.1>[lv388]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: rest[lv9], 1 --> <1.::.1.::.1>[lv391]
VarEnvMC.bindVar: rest[lv4], 3 --> <1.::.1.::.1>[lv391]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 30, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: left2[lv10], 1 --> <1.::.1.::.0.1>[lv394]
VarEnvMC.bindVar: left[lv5], 3 --> <1.::.1.::.0.1>[lv394]
>> genNode:OR: 28, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv396]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv397]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv404]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv406]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv409]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv411]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv413]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv416]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv418]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv425]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv427]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv430]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv432]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv434]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv437]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv439]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv440]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv441]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv448]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv450]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv453]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv455]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv457]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv460]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv462]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv469]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv471]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv474]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv476]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv478]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv481]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv483]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv484]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv485]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv492]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv494]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv497]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv499]
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv501]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv504]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv506]
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv513]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv515]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv518]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv520]
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv522]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv525]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv527]
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> bindSVars
>> lookVar: rest[lv4] @ 3 --> <1.::.1.::.1>[lv391]
>> lookVar: left[lv5] @ 3 --> <1.::.1.::.0.1>[lv394]
>> lookVar: right[lv6] @ 3 --> <1.::.0.2>[lv387]
>> lookVar: x3[lv7] @ 3 --> <1.::.0.0.C5>[lv484]
bindSvars: venv = rest[lv4]-><1.::.1.::.1>[lv391], left[lv5]-><1.::.1.::.0.1>[lv394], right[lv6]-><1.::.0.2>[lv387], x3[lv7]-><1.::.0.0.C5>[lv484]
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv528]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv535]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv537]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv540]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv542]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv544]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv547]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv549]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv556]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv558]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv561]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv563]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv565]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv568]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv570]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv571]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv572]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv573]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 25, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 7, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 6, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 5, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: right[lv19], 0 --> <1.::.0.2>[lv577]
VarEnvMC.bindVar: right[lv12], 1 --> <1.::.0.2>[lv577]
VarEnvMC.bindVar: right[lv6], 3 --> <1.::.0.2>[lv577]
>> genNode:VARS: 4, 3
>> bindPatVars: |vars| = 3, |asvars| = 0
VarEnvMC.bindVar: left1[lv13], 1 --> <1.::.0.1>[lv578]
>> genNode:OR: 2, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 24, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 9, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: rest[lv9], 1 --> <1.::.1.::.1>[lv581]
VarEnvMC.bindVar: rest[lv4], 3 --> <1.::.1.::.1>[lv581]
>> genNode:AND: 32, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 31, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
>> genNode:VARS: 30, 2
>> bindPatVars: |vars| = 2, |asvars| = 0
VarEnvMC.bindVar: left2[lv10], 1 --> <1.::.1.::.0.1>[lv584]
VarEnvMC.bindVar: left[lv5], 3 --> <1.::.1.::.0.1>[lv584]
>> genNode:OR: 28, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv586]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv587]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv594]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv596]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv599]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv601]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv603]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv606]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv608]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv615]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv617]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv620]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv622]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv624]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv627]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv629]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv630]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv631]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv638]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv640]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv643]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv645]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv647]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv650]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv652]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv659]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv661]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv664]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv666]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv668]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv671]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv673]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv674]
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv675]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv682]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv684]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv687]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv689]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv691]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv694]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv696]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv703]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv705]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv708]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv710]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv712]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv715]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv717]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 29, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1b[lv11], 1 --> <1.::.1.::.0.0.C2>[lv718]
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv725]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv727]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv730]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv732]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv734]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv737]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv739]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 23, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:OR: 15, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:AND: 14, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 13, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 12, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:OR: 10, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 11, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0b[lv18], 0 --> <1.::.1.::.1.::.0.0.C2>[lv746]
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv748]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv751]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv753]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:AND: 22, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 21, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: rest[lv15], 0 --> <1.::.1.::.1.::.1.::.1>[lv755]
>> genNode:AND: 20, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 19, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
>> genNode:VARS: 18, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: left[lv16], 0 --> <1.::.1.::.1.::.1.::.0.1>[lv758]
>> genNode:OR: 16, 0
>> bindPatVars: |vars| = 0, |asvars| = 0
>> genNode:VARS: 17, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0c[lv17], 0 --> <1.::.1.::.1.::.1.::.0.0.C3>[lv760]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 3, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x0a[lv20], 0 --> <1.::.0.0.C1>[lv761]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 27, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x1a[lv14], 1 --> <1.::.0.0.C4>[lv762]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> genNode:VARS: 33, 1
>> bindPatVars: |vars| = 1, |asvars| = 0
VarEnvMC.bindVar: x3[lv7], 3 --> <1.::.0.0.C5>[lv763]
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
>> bindSVars
bindSvars: venv = 
<< bindSvar
<< genMatch
<< matchComp
<< genMatch
<< matchComp
structure T5j :
  sig
  datatype svalue
    = C0 | C1 of unit | C2 of unit | C3 of unit | C4 of unit | C5 of unit
  type spp = svalue * int * int
  type stack = spp list
  val actions : int * stack -> int
end
