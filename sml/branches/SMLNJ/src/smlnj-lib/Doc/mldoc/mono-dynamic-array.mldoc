<!-- mono-dynamic-array.mldoc -->

<!DOCTYPE ML-DOC SYSTEM>

<COPYRIGHT OWNER="AT&AMP;T Bell Laboratories" YEAR=1996>
<VERSION VERID="1.0" YEAR=1996 MONTH=5 DAY=29>
<TITLE>The MONO_DYNAMIC_ARRAY signature</TITLE>

<SECT>
<HEAD>The <CD/MONO_DYNAMIC_ARRAY/ signature</HEAD>

<PP>
<!-- Some general introductory text -->

<SIGNATURE SIGID="MONO_DYNAMIC_ARRAY">
  <SIGBODY SIGID="MONO_DYNAMIC_ARRAY" FILE=MONO-DYNAMIC-ARRAY-SIG>
    <SPEC>
      <TYPE><ID>elem
    <SPEC>
      <TYPE><ID>array
    <SPEC>
      <VAL>array<TY>(int * elem) -> array
        <COMMENT>
          <PROTOTY>
          array (<ARG/i/, <ARG/el/)
          </PROTOTY>
          explain the use and semantics of array HERE.
    <SPEC>
      <VAL>subArray<TY>(array * int * int) -> array
        <COMMENT>
          <PROTOTY>
          subArray (<ARG/arr/, <ARG/i/, <ARG/j/)
          </PROTOTY>
          explain the use and semantics of subArray HERE.
    <SPEC>
      <VAL>fromList<TY>(elem list * elem) -> array
        <COMMENT>
          <PROTOTY>
          fromList (<ARG/l/, <ARG/el/)
          </PROTOTY>
          explain the use and semantics of fromList HERE.
    <SPEC>
      <VAL>tabulate<TY>(int * (int -> elem) * elem) -> array
        <COMMENT>
          <PROTOTY>
          tabulate (<ARG/i/, <ARG/f/, <ARG/el/)
          </PROTOTY>
          explain the use and semantics of tabulate HERE.
    <SPEC>
      <VAL>default<TY>array -> elem
        <COMMENT>
          <PROTOTY>
          default <ARG/arr/
          </PROTOTY>
          explain the use and semantics of default HERE.
    <SPEC>
      <VAL>sub<TY>(array * int) -> elem
        <COMMENT>
          <PROTOTY>
          sub (<ARG/arr/, <ARG/i/)
          </PROTOTY>
          explain the use and semantics of sub HERE.
    <SPEC>
      <VAL>update<TY>(array * int * elem) -> unit
        <COMMENT>
          <PROTOTY>
          update (<ARG/arr/, <ARG/i/, <ARG/el/)
          </PROTOTY>
          explain the use and semantics of update HERE.
    <SPEC>
      <VAL>bound<TY>array -> int
        <COMMENT>
          <PROTOTY>
          bound <ARG/arr/
          </PROTOTY>
          explain the use and semantics of bound HERE.
    <SPEC>
      <VAL>truncate<TY>(array * int) -> unit
        <COMMENT>
          <PROTOTY>
          truncate (<ARG/arr/, <ARG/i/)
          </PROTOTY>
          explain the use and semantics of truncate HERE.
<!-- optional SEEALSO; uncomment to use     -->
<!-- <SEEALSO>    -->
<!--   non-empty list of XREFS here   -->
<!-- </SEEALSO>    -->
</SIGNATURE>
