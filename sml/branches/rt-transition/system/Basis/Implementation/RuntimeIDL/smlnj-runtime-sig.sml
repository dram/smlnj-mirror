
(*
 * This file was automatically generated by ml-idl
 * (Tue Jul  3 13:57:41 2007)
 *)

signature SMLNJ_RUNTIME = sig
type idl_string = String.string
type ML_word8vec_t = Word8Vector.vector
type ML_word8vec_opt_t = Word8Vector.vector option
type ML_word8arr_t = Word8Array.array
type ML_charvec_t = CharVector.vector
type ML_charvec_opt_t = CharVector.vector option
type ML_chararr_t = CharArray.array
type ML_unit_t = unit
type ML_bool_t = bool
type ML_int_t = int
type ML_int32_t = Int32.int
type ML_string_t = string
type ML_string_opt_t = string option
type ML_string_list_t = string list
type ML_int_opt_t = int option
type ML_word_arr_opt_t = word array option
type ML_int_arr_opt_t = int array option
type ML_int_pair_opt_t = (Int32.int * int) option
type ML_string_intref_list_t = (string * int ref) list
type ML_sysconst_t = CInterface.system_const
type ML_sysconst_list_t = CInterface.system_const list
type ML_sysconst_list_opt_t = CInterface.system_const list option
type ML_object_t = Unsafe.Object.object
type ML_objectvec_t = Unsafe.Object.object Vector.vector
type ML_object_object_fn_t = Unsafe.Object.object -> Unsafe.Object.object
val allocCode : Int.int -> ML_word8arr_t
val mkExec : (ML_word8arr_t * Int32.int) -> ML_object_object_fn_t
val mkLiterals : ML_word8vec_t -> ML_objectvec_t
val setTimer : ML_bool_t -> unit
val getQuantum : unit -> Int.int
val setTimeArray : ML_int_arr_opt_t -> unit
val intervalTick : unit -> (ML_int32_t * Int.int)
val setIntTimer : ML_int_pair_opt_t -> unit
val exportHeap : String.string -> ML_bool_t
val listSignals : unit -> ML_sysconst_list_t
val getSigState : ML_sysconst_t -> Int.int
val setSigState : (ML_sysconst_t * Int.int) -> unit
val getSigMask : unit -> ML_sysconst_list_opt_t
val setSigMask : ML_sysconst_list_opt_t -> unit
val pauseUntilSig : unit -> unit
val rawArgv : unit -> ML_string_list_t
val shiftArgv : unit -> unit
val sysInfo : String.string -> ML_string_opt_t
val gcControl : ML_string_intref_list_t -> unit
val debug : String.string -> unit
val dummy : String.string -> unit
val recordConcat : (ML_object_t * ML_object_t) -> ML_object_t
val record1 : ML_object_t -> ML_object_t
val blastIn : String.string -> ML_object_t
val blastOut : ML_object_t -> ML_word8vec_t
end

