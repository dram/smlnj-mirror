
/*
 * This file was automatically generated by ml-idl
 * (Mon Jul  2 18:16:11 2007)
 */

#ifndef _SML_BASIS_H_
#define _SML_BASIS_H_

#include "ml-base.h"

#include "ml-timer.h"
typedef char *idl_string;
typedef ml_val_t ML_word8vec_t;
typedef ml_val_t ML_word8vec_opt_t;
typedef ml_val_t ML_word8arr_t;
typedef ml_val_t ML_charvec_t;
typedef ml_val_t ML_charvec_opt_t;
typedef ml_val_t ML_chararr_t;
typedef ml_val_t ML_unit_t;
typedef ml_val_t ML_bool_t;
typedef ml_val_t ML_int_t;
typedef ml_val_t ML_int32_t;
typedef ml_val_t ML_string_t;
typedef ml_val_t ML_string_opt_t;
typedef ml_val_t ML_string_list_t;
typedef ml_val_t ML_int_opt_t;
typedef ml_val_t ML_iodesc_t;
typedef ml_val_t ML_directory_t;
typedef ml_val_t ML_polldesc_list_t;
typedef ml_val_t ML_pollinfo_list_t;
typedef struct {int tm_sec;
int tm_min;
int tm_hour;
int tm_mday;
int tm_mon;
int tm_year;
int tm_wday;
int tm_yday;
int tm_isdst;
} Date_t;
#define TO_NEAREST 0
#define TO_NEGINF 1
#define TO_POSINF 2
#define TO_ZERO 3
extern int getRoundingMode ();
extern void setRoundingMode (int mode);
#define OPEN_RD 1
#define OPEN_WR 2
#define OPEN_RDWR 3
#define OPEN_CREATE 4
#define OPEN_TRUNC 8
#define OPEN_APPEND 16
extern ML_iodesc_t openFile (ml_state_t *msp,ML_string_t s,int flags);
extern void closeFile (ML_iodesc_t iod);
extern int cmpIODesc (ML_iodesc_t iod1,ML_iodesc_t iod2);
extern ML_charvec_opt_t readTextVec (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,int nbytes);
extern ML_int_t readTextArr (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_chararr_t arr,int nbytes,int offset);
extern ML_int_t writeTextVec (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_charvec_t buf,int offset,int nbytes);
extern ML_int_t writeTextArr (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_chararr_t buf,int offset,int nbytes);
extern ML_word8vec_opt_t readBinVec (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,int nbytes);
extern ML_int_t readBinArr (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_word8arr_t arr,int nbytes,int offset);
extern ML_int_t writeBinVec (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_word8vec_t buf,int offset,int nbytes);
extern ML_int_t writeBinArr (ml_state_t *msp,ML_bool_t noblock,ML_iodesc_t iod,ML_word8arr_t buf,int offset,int nbytes);
#define SET_POS_BEGIN 0
#define SET_POS_CUR 1
#define SET_POS_END 2
extern ML_int32_t getPos (ml_state_t *msp,ML_iodesc_t iod);
extern ML_unit_t setPos (ml_state_t *msp,ML_iodesc_t iod,ML_int32_t offset,int whence);
extern ML_iodesc_t getStdIn ();
extern ML_iodesc_t getStdOut ();
extern ML_iodesc_t getStdErr ();
extern ML_string_t errorName (ml_state_t *msp,int err);
extern ML_string_t errorMessage (ml_state_t *msp,int err);
extern ML_int_opt_t syserror (ml_state_t *msp,char *errName);
extern ML_int_t osSystem (ml_state_t *msp,char *name);
extern void exit (int sts);
extern ML_string_opt_t getEnv (ml_state_t *msp,char *ss);
extern void osSleep (Time_t *t);
extern ML_directory_t openDir (ml_state_t *msp,char *path);
extern ML_string_opt_t readDir (ml_state_t *msp,ML_directory_t dir);
extern ML_unit_t rewindDir (ml_state_t *msp,ML_directory_t dir);
extern ML_unit_t closeDir (ml_state_t *msp,ML_directory_t dir);
extern ML_unit_t chDir (ml_state_t *msp,char *path);
extern ML_string_t getDir (ml_state_t *msp);
extern ML_unit_t mkDir (ml_state_t *msp,char *path);
extern ML_unit_t rmDir (ml_state_t *msp,char *path);
extern ML_bool_t isReg (ml_state_t *msp,char *path);
extern ML_bool_t isDir (ml_state_t *msp,char *path);
extern ML_bool_t isLink (ml_state_t *msp,char *path);
extern ML_string_t readLink (ml_state_t *msp,char *path);
extern ML_int32_t fileSize (ml_state_t *msp,char *path);
extern ML_int32_t modTime (ml_state_t *msp,char *path);
extern ML_unit_t setTime (ml_state_t *msp,char *path,Time_t *t);
extern ML_unit_t removeFile (ml_state_t *msp,char *path);
extern ML_unit_t renameFile (ml_state_t *msp,char *old,char *new);
#define A_READ 1
#define A_WRITE 2
#define A_EXEC 4
extern ML_bool_t fileAccess (ml_state_t *msp,char *path,int mode);
extern ML_string_t tmpName (ml_state_t *msp);
extern ML_word8vec_t fileId (ml_state_t *msp,char *path);
#define IOD_KIND_FILE 0
#define IOD_KIND_DIR 1
#define IOD_KIND_SYMLINK 2
#define IOD_KIND_TTY 3
#define IOD_KIND_PIPE 4
#define IOD_KIND_SOCKET 5
#define IOD_KIND_DEVICE 6
extern ML_int_t ioDescKind (ml_state_t *msp,ML_iodesc_t iod);
#define POLL_RD 1
#define POLL_WR 2
#define POLL_ERR 4
extern ML_pollinfo_list_t osPoll (ml_state_t *msp,ML_polldesc_list_t pds,Time_t *t);
extern void now (Time_t *t);
extern ML_string_t ascTime (ml_state_t *msp,Date_t *date);
extern ML_string_t strfTime (ml_state_t *msp,ML_string_t s,Date_t *date);
extern void gmTime (Time_t *t,Date_t *date);
extern void localTime (Time_t *t,Date_t *date);
extern void mkTime (Date_t *date,Time_t *time);
extern void getCPUTime (ml_state_t *msp,Time_t *u,Time_t *s,Time_t *g);
extern void cmdName (char **s);
extern ML_string_list_t cmdArgs (ml_state_t *msp);

#endif /* !_SML_BASIS_H_ */
