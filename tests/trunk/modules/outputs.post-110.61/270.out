val it = () : unit
signature POINT =
  sig
    type point
    val <= : point * point -> bool
  end
signature INTERVAL =
  sig
    type interval
    type point
    val mk : point * point -> interval
    val left : interval -> point
    val right : interval -> point
  end
functor Interval(P: sig
                      type point
                      val <= : point * point -> bool
                    end) :
                sig
                  type interval
                  type point
                  val mk : point * point -> interval
                  val left : interval -> point
                  val right : interval -> point
                end
[autoloading]
[autoloading done]
structure IntPoint : POINT
structure T : INTERVAL
val test = 9 : T.point
functor G(<param>: sig functor Interv : <fctsig> end) :
         sig structure NatNumInt : <sig> end

