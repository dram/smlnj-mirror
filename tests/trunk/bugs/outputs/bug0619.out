val it = () : unit
signature SIG = sig exception Error of string end
functor F(X: sig exception Error of string end) :
         sig
           exception Error of string
           type Exp
           type Val
           val extend_one : ''a * 'b * (''a -> 'b) -> ''a -> 'b
           val extend_env : ''a list * 'b list * (''a -> 'b) -> ''a -> 'b
           val meaning : Exp -> 'a -> (Val -> unit) -> unit
           val meaninglis : Exp list -> 'a -> (Val list -> unit) -> unit
         end
structure A : SIG
structure B :
  sig
    exception Error of string
    datatype Exp = APP of Exp * Exp list
    datatype Val = FUNC of Val list -> (Val -> unit) -> unit
    val extend_one : ''a * 'b * (''a -> 'b) -> ''a -> 'b
    val extend_env : ''a list * 'b list * (''a -> 'b) -> ''a -> 'b
    val meaning : Exp -> 'a -> (Val -> unit) -> unit
    val meaninglis : Exp list -> 'a -> (Val list -> unit) -> unit
  end

