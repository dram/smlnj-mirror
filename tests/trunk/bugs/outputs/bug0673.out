val it = () : unit
signature MONOID =
  sig
    type t
    val plus : t * t -> t
    val e : t
  end
funsig PROD(<param>: sig
                       structure M : <sig>
                       structure N : <sig>
                     end) :
           sig
             type t
             val plus : t * t -> t
             val e : t
           end
functor Square(<param>: sig
                          structure X : <sig>
                          functor Prod : <fctsig>
                        end) :
              sig
                type t
                val plus : t * t -> t
                val e : t
              end
functor Prod(<param>: sig
                        structure M : <sig>
                        structure N : <sig>
                      end) :
            sig
              type t
              val plus : t * t -> t
              val e : t
            end
structure Int :
  sig
    type t = int
    val e : int
    val plus : int * int -> int
  end
structure Int2 : MONOID
val it = 0 : Int.t

