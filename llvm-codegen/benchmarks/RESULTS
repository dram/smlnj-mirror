# Results comparing the LLVM and MLRISC backends (SML/NJ version 110.99)
#

## Benchmark sizes
-------------------------------------------------------------------------------
File                             blank        comment           code
-------------------------------------------------------------------------------
hamlet.sml                        3225           2740          16930
vliw.sml                           458            194           3033
nucleic.sml                        146            116           2920
lexgen.sml                         125            156           1032
barnes-hut.sml                     156            141            934
mc-ray.sml                         213            225            455
life.sml                            30              6            111
mandelbrot.sml                      11              5             48
-------------------------------------------------------------------------------
SUM:                              4383           3592          25512
-------------------------------------------------------------------------------

## MLRISC results

{bmark="hamlet", llvm="no",
 compiles=[ 5.632, 5.532, 5.595, 5.505, 5.475 ],
 runs=[ 0.105,  0.104,  0.107,  0.106,  0.104,  0.104,  0.103,  0.102,  0.102,  0.103 ]},
{bmark="lexgen", llvm="no",
 compiles=[  0.273, 0.245, 0.252, 0.251, 0.259 ],
 runs=[ 0.022,  0.021,  0.021,  0.020,  0.020,  0.020,  0.020,  0.020,  0.020,  0.020 ]},
{bmark="life", llvm="no",
 compiles=[ 0.038, 0.034, 0.034, 0.033, 0.034 ],
 runs=[ 0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005 ]},
{bmark="mandelbrot", llvm="no",
 compiles=[ 0.009, 0.005, 0.005, 0.005, 0.005 ],
 runs=[ 3.818,  3.825,  3.819,  3.724,  3.732,  3.725,  3.721,  3.768,  3.722,  3.722 ]},
{bmark="mc-ray", llvm="no",
 compiles=[  0.106, 0.095, 0.094, 0.094, 0.092 ],
 runs=[ 5.702,  6.049,  5.694,  5.630,  5.833,  5.812,  5.678,  5.651,  5.588,  5.635 ]},
{bmark="vliw", llvm="no",
 compiles=[ 1.117, 1.004, 1.007, 1.054, 1.067 ],
 runs=[ 0.043,  0.044,  0.044,  0.044,  0.044,  0.044,  0.044,  0.044,  0.044,  0.044 ]}

## LLVM results
{bmark="hamlet", llvm="yes",
 compiles=[ 10.742, 10.496, 10.541, 10.281, 10.393 ],
 runs=[ 0.088,  0.086,  0.087,  0.086,  0.086,  0.087,  0.087,  0.086,  0.087,  0.086 ]},
{bmark="lexgen", llvm="yes",
 compiles=[  0.844, 0.826, 0.822, 0.823, 0.827 ],
 runs=[ 0.020,  0.019,  0.019,  0.019,  0.019,  0.019,  0.019,  0.019,  0.019,  0.019 ]},
{bmark="life", llvm="yes",
 compiles=[ 0.115, 0.113, 0.110, 0.112, 0.114 ],
 runs=[ 0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005,  0.005 ]},
{bmark="mandelbrot", llvm="yes",
 compiles=[ 0.017, 0.016, 0.016, 0.016, 0.016 ],
 runs=[ 3.115,  3.125,  3.125,  3.088,  3.057,  3.045,  3.042,  3.044,  3.057,  3.051 ]},
{bmark="mc-ray", llvm="yes",
 compiles=[  0.346, 0.341, 0.338, 0.346, 0.337 ],
 runs=[ 5.030,  5.024,  4.821,  4.945,  5.048,  5.065,  5.128,  4.996,  4.863,  5.019 ]},
{bmark="vliw", llvm="yes",
 compiles=[ 2.722, 2.733, 2.729, 2.694, 2.672 ],
 runs=[ 0.032,  0.032,  0.032,  0.031,  0.031,  0.031,  0.031,  0.031,  0.031,  0.032 ]}


## processing code

fun avg xs = (List.foldl (op +) 0.0 xs / real(length xs));
fun process {bmark, llvm, compiles, runs} = {
        bmark = bmark,
        llvm = llvm,
        compiles = avg compiles,
        runs = avg runs
      };
